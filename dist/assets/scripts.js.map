{
  "version": 3,
  "sources": ["../../node_modules/chnl/dist/channel.cjs.js", "../../node_modules/promise-controller/src/defaults.js", "../../node_modules/promise-controller/src/utils.js", "../../node_modules/promise-controller/src/index.js", "../../node_modules/promised-map/src/index.ts", "../../node_modules/function-bind/implementation.js", "../../node_modules/function-bind/index.js", "../../node_modules/has-symbols/shams.js", "../../node_modules/has-symbols/index.js", "../../node_modules/has/src/index.js", "../../node_modules/get-intrinsic/index.js", "../../node_modules/call-bind/index.js", "../../node_modules/object-keys/isArguments.js", "../../node_modules/object-keys/implementation.js", "../../node_modules/object-keys/index.js", "../../node_modules/has-property-descriptors/index.js", "../../node_modules/define-properties/index.js", "../../node_modules/promise.prototype.finally/requirePromise.js", "../../node_modules/is-callable/index.js", "../../node_modules/es-abstract/2022/IsCallable.js", "../../node_modules/es-abstract/GetIntrinsic.js", "../../node_modules/es-abstract/helpers/isPropertyDescriptor.js", "../../node_modules/call-bind/callBound.js", "../../node_modules/es-abstract/helpers/IsArray.js", "../../node_modules/es-abstract/helpers/DefineOwnProperty.js", "../../node_modules/es-abstract/helpers/isMatchRecord.js", "../../node_modules/es-abstract/helpers/assertRecord.js", "../../node_modules/es-abstract/helpers/fromPropertyDescriptor.js", "../../node_modules/es-abstract/5/Type.js", "../../node_modules/es-abstract/2022/Type.js", "../../node_modules/es-abstract/2022/FromPropertyDescriptor.js", "../../node_modules/es-abstract/2022/IsAccessorDescriptor.js", "../../node_modules/es-abstract/2022/IsDataDescriptor.js", "../../node_modules/es-abstract/2022/IsPropertyKey.js", "../../node_modules/es-abstract/helpers/isNaN.js", "../../node_modules/es-abstract/2022/SameValue.js", "../../node_modules/es-abstract/2022/ToBoolean.js", "../../node_modules/es-abstract/2022/ToPropertyDescriptor.js", "../../node_modules/es-abstract/2022/DefinePropertyOrThrow.js", "../../node_modules/es-abstract/2022/IsConstructor.js", "../../node_modules/es-abstract/2022/SpeciesConstructor.js", "../../node_modules/promise.prototype.finally/implementation.js", "../../node_modules/promise.prototype.finally/polyfill.js", "../../node_modules/promise.prototype.finally/shim.js", "../../node_modules/promise.prototype.finally/index.js", "../../node_modules/websocket-as-promised/src/requests.js", "../../node_modules/websocket-as-promised/src/options.js", "../../node_modules/websocket-as-promised/src/utils.js", "../../node_modules/websocket-as-promised/src/index.js", "../../node_modules/@arx-research/libhalo/halo/exceptions.js", "../../node_modules/@arx-research/libhalo/halo/errors.js", "../../node_modules/base64-js/index.js", "../../node_modules/ieee754/index.js", "../../node_modules/buffer/index.js", "../../node_modules/elliptic/package.json", "../../node_modules/bn.js/lib/bn.js", "../../node_modules/minimalistic-assert/index.js", "../../node_modules/minimalistic-crypto-utils/lib/utils.js", "../../node_modules/elliptic/lib/elliptic/utils.js", "../../node_modules/brorand/index.js", "../../node_modules/elliptic/lib/elliptic/curve/base.js", "../../node_modules/inherits/inherits_browser.js", "../../node_modules/elliptic/lib/elliptic/curve/short.js", "../../node_modules/elliptic/lib/elliptic/curve/mont.js", "../../node_modules/elliptic/lib/elliptic/curve/edwards.js", "../../node_modules/elliptic/lib/elliptic/curve/index.js", "../../node_modules/hash.js/lib/hash/utils.js", "../../node_modules/hash.js/lib/hash/common.js", "../../node_modules/hash.js/lib/hash/sha/common.js", "../../node_modules/hash.js/lib/hash/sha/1.js", "../../node_modules/hash.js/lib/hash/sha/256.js", "../../node_modules/hash.js/lib/hash/sha/224.js", "../../node_modules/hash.js/lib/hash/sha/512.js", "../../node_modules/hash.js/lib/hash/sha/384.js", "../../node_modules/hash.js/lib/hash/sha.js", "../../node_modules/hash.js/lib/hash/ripemd.js", "../../node_modules/hash.js/lib/hash/hmac.js", "../../node_modules/hash.js/lib/hash.js", "../../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js", "../../node_modules/elliptic/lib/elliptic/curves.js", "../../node_modules/hmac-drbg/lib/hmac-drbg.js", "../../node_modules/elliptic/lib/elliptic/ec/key.js", "../../node_modules/elliptic/lib/elliptic/ec/signature.js", "../../node_modules/elliptic/lib/elliptic/ec/index.js", "../../node_modules/elliptic/lib/elliptic/eddsa/key.js", "../../node_modules/elliptic/lib/elliptic/eddsa/signature.js", "../../node_modules/elliptic/lib/elliptic/eddsa/index.js", "../../node_modules/elliptic/lib/elliptic.js", "../../node_modules/@ethersproject/bignumber/node_modules/bn.js/lib/bn.js", "../../node_modules/@ethersproject/logger/src.ts/_version.ts", "../../node_modules/@ethersproject/logger/src.ts/index.ts", "../../node_modules/@ethersproject/bytes/src.ts/_version.ts", "../../node_modules/@ethersproject/bytes/src.ts/index.ts", "../../node_modules/@ethersproject/bignumber/src.ts/_version.ts", "../../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts", "../../node_modules/@ethersproject/bignumber/src.ts/fixednumber.ts", "../../node_modules/@ethersproject/bignumber/src.ts/index.ts", "../../node_modules/@ethersproject/properties/src.ts/_version.ts", "../../node_modules/@ethersproject/properties/src.ts/index.ts", "../../node_modules/@ethersproject/abi/src.ts/_version.ts", "../../node_modules/@ethersproject/abi/src.ts/fragments.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/abstract-coder.ts", "../../node_modules/js-sha3/src/sha3.js", "../../node_modules/@ethersproject/keccak256/src.ts/index.ts", "../../node_modules/@ethersproject/rlp/src.ts/_version.ts", "../../node_modules/@ethersproject/rlp/src.ts/index.ts", "../../node_modules/@ethersproject/address/src.ts/_version.ts", "../../node_modules/@ethersproject/address/src.ts/index.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/address.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/anonymous.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/array.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/boolean.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/bytes.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/fixed-bytes.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/null.ts", "../../node_modules/@ethersproject/constants/src.ts/addresses.ts", "../../node_modules/@ethersproject/constants/src.ts/bignumbers.ts", "../../node_modules/@ethersproject/constants/src.ts/hashes.ts", "../../node_modules/@ethersproject/constants/src.ts/strings.ts", "../../node_modules/@ethersproject/constants/src.ts/index.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/number.ts", "../../node_modules/@ethersproject/strings/src.ts/_version.ts", "../../node_modules/@ethersproject/strings/src.ts/utf8.ts", "../../node_modules/@ethersproject/strings/src.ts/bytes32.ts", "../../node_modules/@ethersproject/strings/src.ts/idna.ts", "../../node_modules/@ethersproject/strings/src.ts/index.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/string.ts", "../../node_modules/@ethersproject/abi/src.ts/coders/tuple.ts", "../../node_modules/@ethersproject/abi/src.ts/abi-coder.ts", "../../node_modules/@ethersproject/hash/src.ts/id.ts", "../../node_modules/@ethersproject/hash/src.ts/_version.ts", "../../node_modules/@ethersproject/base64/src.ts/browser-base64.ts", "../../node_modules/@ethersproject/base64/src.ts/index.ts", "../../node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts", "../../node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts", "../../node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts", "../../node_modules/@ethersproject/hash/src.ts/namehash.ts", "../../node_modules/@ethersproject/hash/src.ts/message.ts", "../../node_modules/@ethersproject/hash/src.ts/typed-data.ts", "../../node_modules/@ethersproject/hash/src.ts/index.ts", "../../node_modules/@ethersproject/abi/src.ts/interface.ts", "../../node_modules/@ethersproject/abi/src.ts/index.ts", "../../node_modules/@ethersproject/abstract-provider/src.ts/_version.ts", "../../node_modules/@ethersproject/abstract-provider/src.ts/index.ts", "../../node_modules/@ethersproject/abstract-signer/src.ts/_version.ts", "../../node_modules/@ethersproject/abstract-signer/src.ts/index.ts", "../../node_modules/@ethersproject/signing-key/src.ts/elliptic.ts", "../../node_modules/@ethersproject/signing-key/src.ts/_version.ts", "../../node_modules/@ethersproject/signing-key/src.ts/index.ts", "../../node_modules/@ethersproject/transactions/src.ts/_version.ts", "../../node_modules/@ethersproject/transactions/src.ts/index.ts", "../../node_modules/@ethersproject/contracts/src.ts/_version.ts", "../../node_modules/@ethersproject/contracts/src.ts/index.ts", "../../node_modules/@ethersproject/basex/src.ts/index.ts", "../../node_modules/@ethersproject/sha2/src.ts/types.ts", "../../node_modules/@ethersproject/sha2/src.ts/_version.ts", "../../node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts", "../../node_modules/@ethersproject/sha2/src.ts/index.ts", "../../node_modules/@ethersproject/pbkdf2/src.ts/browser-pbkdf2.ts", "../../node_modules/@ethersproject/pbkdf2/src.ts/index.ts", "../../node_modules/@ethersproject/wordlists/src.ts/_version.ts", "../../node_modules/@ethersproject/wordlists/src.ts/wordlist.ts", "../../node_modules/@ethersproject/wordlists/src.ts/lang-cz.ts", "../../node_modules/@ethersproject/wordlists/src.ts/lang-en.ts", "../../node_modules/@ethersproject/wordlists/src.ts/lang-es.ts", "../../node_modules/@ethersproject/wordlists/src.ts/lang-fr.ts", "../../node_modules/@ethersproject/wordlists/src.ts/lang-ja.ts", "../../node_modules/@ethersproject/wordlists/src.ts/lang-ko.ts", "../../node_modules/@ethersproject/wordlists/src.ts/lang-it.ts", "../../node_modules/@ethersproject/wordlists/src.ts/lang-zh.ts", "../../node_modules/@ethersproject/wordlists/src.ts/wordlists.ts", "../../node_modules/@ethersproject/wordlists/src.ts/index.ts", "../../node_modules/@ethersproject/hdnode/src.ts/_version.ts", "../../node_modules/@ethersproject/hdnode/src.ts/index.ts", "../../node_modules/@ethersproject/random/src.ts/_version.ts", "../../node_modules/@ethersproject/random/src.ts/browser-random.ts", "../../node_modules/@ethersproject/random/src.ts/shuffle.ts", "../../node_modules/@ethersproject/random/src.ts/index.ts", "../../node_modules/@ethersproject/json-wallets/node_modules/aes-js/index.js", "../../node_modules/@ethersproject/json-wallets/src.ts/_version.ts", "../../node_modules/@ethersproject/json-wallets/src.ts/utils.ts", "../../node_modules/@ethersproject/json-wallets/src.ts/crowdsale.ts", "../../node_modules/@ethersproject/json-wallets/src.ts/inspect.ts", "../../node_modules/scrypt-js/scrypt.js", "../../node_modules/@ethersproject/json-wallets/src.ts/keystore.ts", "../../node_modules/@ethersproject/json-wallets/src.ts/index.ts", "../../node_modules/@ethersproject/wallet/src.ts/_version.ts", "../../node_modules/@ethersproject/wallet/src.ts/index.ts", "../../node_modules/@ethersproject/networks/src.ts/_version.ts", "../../node_modules/@ethersproject/networks/src.ts/index.ts", "../../node_modules/@ethersproject/web/src.ts/_version.ts", "../../node_modules/@ethersproject/web/src.ts/browser-geturl.ts", "../../node_modules/@ethersproject/web/src.ts/index.ts", "../../node_modules/bech32/index.js", "../../node_modules/@ethersproject/providers/src.ts/_version.ts", "../../node_modules/@ethersproject/providers/src.ts/formatter.ts", "../../node_modules/@ethersproject/providers/src.ts/base-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/browser-ws.ts", "../../node_modules/@ethersproject/providers/src.ts/websocket-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/ankr-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/fallback-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/infura-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/pocket-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/web3-provider.ts", "../../node_modules/@ethersproject/providers/src.ts/index.ts", "../../node_modules/@ethersproject/solidity/src.ts/_version.ts", "../../node_modules/@ethersproject/solidity/src.ts/index.ts", "../../node_modules/@ethersproject/units/src.ts/_version.ts", "../../node_modules/@ethersproject/units/src.ts/index.ts", "../../node_modules/@arx-research/libhalo/node_modules/ethers/src.ts/utils.ts", "../../node_modules/@arx-research/libhalo/node_modules/ethers/src.ts/_version.ts", "../../node_modules/@arx-research/libhalo/node_modules/ethers/src.ts/ethers.ts", "../../node_modules/@arx-research/libhalo/node_modules/ethers/src.ts/index.ts", "../../node_modules/@arx-research/libhalo/halo/utils.js", "../../node_modules/@arx-research/libhalo/drivers/credential.js", "../../node_modules/@arx-research/libhalo/drivers/webnfc.js", "../../node_modules/@arx-research/libhalo/halo/flags.js", "../../node_modules/js-sha256/src/sha256.js", "../../node_modules/@arx-research/libhalo/halo/cmdcodes.js", "../../node_modules/@arx-research/libhalo/halo/commands.js", "../../node_modules/@arx-research/libhalo/drivers/common.js", "../../node_modules/strict-uri-encode/index.js", "../../node_modules/decode-uri-component/index.js", "../../node_modules/split-on-first/index.js", "../../node_modules/filter-obj/index.js", "../../node_modules/query-string/index.js", "../../node_modules/@arx-research/libhalo/drivers/read_ndef.js", "../../node_modules/@arx-research/libhalo/drivers/nfc_manager.js", "../../node_modules/@arx-research/libhalo/drivers/pcsc.js", "../../node_modules/qrcode/lib/can-promise.js", "../../node_modules/qrcode/lib/core/utils.js", "../../node_modules/qrcode/lib/core/error-correction-level.js", "../../node_modules/qrcode/lib/core/bit-buffer.js", "../../node_modules/qrcode/lib/core/bit-matrix.js", "../../node_modules/qrcode/lib/core/alignment-pattern.js", "../../node_modules/qrcode/lib/core/finder-pattern.js", "../../node_modules/qrcode/lib/core/mask-pattern.js", "../../node_modules/qrcode/lib/core/error-correction-code.js", "../../node_modules/qrcode/lib/core/galois-field.js", "../../node_modules/qrcode/lib/core/polynomial.js", "../../node_modules/qrcode/lib/core/reed-solomon-encoder.js", "../../node_modules/qrcode/lib/core/version-check.js", "../../node_modules/qrcode/lib/core/regex.js", "../../node_modules/qrcode/lib/core/mode.js", "../../node_modules/qrcode/lib/core/version.js", "../../node_modules/qrcode/lib/core/format-info.js", "../../node_modules/qrcode/lib/core/numeric-data.js", "../../node_modules/qrcode/lib/core/alphanumeric-data.js", "../../node_modules/encode-utf8/index.js", "../../node_modules/qrcode/lib/core/byte-data.js", "../../node_modules/qrcode/lib/core/kanji-data.js", "../../node_modules/dijkstrajs/dijkstra.js", "../../node_modules/qrcode/lib/core/segments.js", "../../node_modules/qrcode/lib/core/qrcode.js", "../../node_modules/qrcode/lib/renderer/utils.js", "../../node_modules/qrcode/lib/renderer/canvas.js", "../../node_modules/qrcode/lib/renderer/svg-tag.js", "../../node_modules/qrcode/lib/browser.js", "../../node_modules/jose/dist/browser/runtime/webcrypto.js", "../../node_modules/jose/dist/browser/runtime/digest.js", "../../node_modules/jose/dist/browser/lib/buffer_utils.js", "../../node_modules/jose/dist/browser/runtime/base64url.js", "../../node_modules/jose/dist/browser/util/errors.js", "../../node_modules/jose/dist/browser/runtime/random.js", "../../node_modules/jose/dist/browser/lib/iv.js", "../../node_modules/jose/dist/browser/lib/check_iv_length.js", "../../node_modules/jose/dist/browser/runtime/check_cek_length.js", "../../node_modules/jose/dist/browser/runtime/timing_safe_equal.js", "../../node_modules/jose/dist/browser/runtime/env.js", "../../node_modules/jose/dist/browser/lib/crypto_key.js", "../../node_modules/jose/dist/browser/lib/invalid_key_input.js", "../../node_modules/jose/dist/browser/runtime/is_key_like.js", "../../node_modules/jose/dist/browser/runtime/decrypt.js", "../../node_modules/jose/dist/browser/runtime/zlib.js", "../../node_modules/jose/dist/browser/lib/is_disjoint.js", "../../node_modules/jose/dist/browser/lib/is_object.js", "../../node_modules/jose/dist/browser/runtime/bogus.js", "../../node_modules/jose/dist/browser/runtime/aeskw.js", "../../node_modules/jose/dist/browser/runtime/ecdhes.js", "../../node_modules/jose/dist/browser/lib/check_p2s.js", "../../node_modules/jose/dist/browser/runtime/pbes2kw.js", "../../node_modules/jose/dist/browser/runtime/subtle_rsaes.js", "../../node_modules/jose/dist/browser/runtime/check_key_length.js", "../../node_modules/jose/dist/browser/runtime/rsaes.js", "../../node_modules/jose/dist/browser/lib/cek.js", "../../node_modules/jose/dist/browser/lib/format_pem.js", "../../node_modules/jose/dist/browser/runtime/asn1.js", "../../node_modules/jose/dist/browser/runtime/jwk_to_key.js", "../../node_modules/jose/dist/browser/key/import.js", "../../node_modules/jose/dist/browser/lib/check_key_type.js", "../../node_modules/jose/dist/browser/runtime/encrypt.js", "../../node_modules/jose/dist/browser/lib/aesgcmkw.js", "../../node_modules/jose/dist/browser/lib/decrypt_key_management.js", "../../node_modules/jose/dist/browser/lib/validate_crit.js", "../../node_modules/jose/dist/browser/lib/validate_algorithms.js", "../../node_modules/jose/dist/browser/jwe/flattened/decrypt.js", "../../node_modules/jose/dist/browser/jwe/compact/decrypt.js", "../../node_modules/jose/dist/browser/jwe/general/decrypt.js", "../../node_modules/jose/dist/browser/runtime/key_to_jwk.js", "../../node_modules/jose/dist/browser/key/export.js", "../../node_modules/jose/dist/browser/lib/encrypt_key_management.js", "../../node_modules/jose/dist/browser/jwe/flattened/encrypt.js", "../../node_modules/jose/dist/browser/jwe/general/encrypt.js", "../../node_modules/jose/dist/browser/runtime/subtle_dsa.js", "../../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js", "../../node_modules/jose/dist/browser/runtime/verify.js", "../../node_modules/jose/dist/browser/jws/flattened/verify.js", "../../node_modules/jose/dist/browser/jws/compact/verify.js", "../../node_modules/jose/dist/browser/jws/general/verify.js", "../../node_modules/jose/dist/browser/lib/epoch.js", "../../node_modules/jose/dist/browser/lib/secs.js", "../../node_modules/jose/dist/browser/lib/jwt_claims_set.js", "../../node_modules/jose/dist/browser/jwt/verify.js", "../../node_modules/jose/dist/browser/jwt/decrypt.js", "../../node_modules/jose/dist/browser/jwe/compact/encrypt.js", "../../node_modules/jose/dist/browser/runtime/sign.js", "../../node_modules/jose/dist/browser/jws/flattened/sign.js", "../../node_modules/jose/dist/browser/jws/compact/sign.js", "../../node_modules/jose/dist/browser/jws/general/sign.js", "../../node_modules/jose/dist/browser/jwt/produce.js", "../../node_modules/jose/dist/browser/jwt/sign.js", "../../node_modules/jose/dist/browser/jwt/encrypt.js", "../../node_modules/jose/dist/browser/jwk/thumbprint.js", "../../node_modules/jose/dist/browser/jwk/embedded.js", "../../node_modules/jose/dist/browser/jwks/local.js", "../../node_modules/jose/dist/browser/runtime/fetch_jwks.js", "../../node_modules/jose/dist/browser/jwks/remote.js", "../../node_modules/jose/dist/browser/jwt/unsecured.js", "../../node_modules/jose/dist/browser/util/base64url.js", "../../node_modules/jose/dist/browser/util/decode_protected_header.js", "../../node_modules/jose/dist/browser/util/decode_jwt.js", "../../node_modules/jose/dist/browser/runtime/generate.js", "../../node_modules/jose/dist/browser/key/generate_key_pair.js", "../../node_modules/jose/dist/browser/key/generate_secret.js", "../../node_modules/jose/dist/browser/index.js", "../../node_modules/@arx-research/libhalo/halo/jwe_util.js", "../../node_modules/@arx-research/libhalo/halo/gateway/requestor.js", "../../node_modules/@arx-research/libhalo/web/web_utils.js", "../../node_modules/@arx-research/libhalo/index.js", "../../src/scripts.ts", "../../node_modules/ethers/src.ts/_version.ts", "../../node_modules/ethers/src.ts/utils/properties.ts", "../../node_modules/ethers/src.ts/utils/errors.ts", "../../node_modules/ethers/src.ts/utils/data.ts", "../../node_modules/ethers/src.ts/utils/maths.ts", "../../node_modules/ethers/src.ts/utils/utf8.ts", "../../node_modules/@noble/hashes/esm/_assert.js", "../../node_modules/@noble/hashes/esm/cryptoBrowser.js", "../../node_modules/@noble/hashes/esm/utils.js", "../../node_modules/@noble/hashes/esm/hmac.js", "../../node_modules/@noble/hashes/esm/_sha2.js", "../../node_modules/@noble/hashes/esm/sha256.js", "../../node_modules/@noble/hashes/esm/_u64.js", "../../node_modules/@noble/hashes/esm/sha512.js", "../../node_modules/ethers/src.ts/crypto/crypto-browser.ts", "../../node_modules/ethers/src.ts/crypto/hmac.ts", "../../node_modules/@noble/hashes/esm/sha3.js", "../../node_modules/ethers/src.ts/crypto/keccak.ts", "../../node_modules/ethers/src.ts/crypto/sha2.ts", "../../node_modules/@noble/secp256k1/lib/esm/index.js", "../../node_modules/ethers/src.ts/constants/hashes.ts", "../../node_modules/ethers/src.ts/constants/strings.ts", "../../node_modules/ethers/src.ts/crypto/signature.ts", "../../node_modules/ethers/src.ts/crypto/signing-key.ts", "../../node_modules/ethers/src.ts/address/address.ts", "../../node_modules/ethers/src.ts/transaction/address.ts", "../../node_modules/ethers/src.ts/hash/message.ts", "../../src/js/helpers/download.js", "../../src/js/helpers/splitHash.js", "../../src/js/helpers/parseKeysCli.js"],
  "sourcesContent": ["/* chnl v1.2.0 by Vitaliy Potapov @preserve */\n\"use strict\";function _typeof(e){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _inherits(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _isNativeReflectConstruct(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function _possibleConstructorReturn(e,t){return!t||\"object\"!=typeof t&&\"function\"!=typeof t?_assertThisInitialized(e):t}function _createSuper(r){var i=_isNativeReflectConstruct();return function(){var e,t=_getPrototypeOf(r);if(i){var n=_getPrototypeOf(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _possibleConstructorReturn(this,e)}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _iterableToArray(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _unsupportedIterableToArray(e,t){if(e){if(\"string\"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var Channel=function(){function c(e){_classCallCheck(this,c),this._listeners=[],this._mute=!1,this._accumulate=!1,this._accumulatedEvents=[],this._name=e||\"\",this._onListenerAdded=null,this._onFirstListenerAdded=null,this._onListenerRemoved=null,this._onLastListenerRemoved=null}return _createClass(c,[{key:\"addListener\",value:function(e,t){this._pushListener(e,t,!1)}},{key:\"addOnceListener\",value:function(e,t){this._pushListener(e,t,!0)}},{key:\"removeListener\",value:function(e,t){this._ensureListener(e);var n=this._indexOfListener(e,t);0<=n&&this._spliceListener(n)}},{key:\"removeAllListeners\",value:function(){for(;this.hasListeners();)this._spliceListener(0)}},{key:\"hasListener\",value:function(e,t){return this._ensureListener(e),0<=this._indexOfListener(e,t)}},{key:\"hasListeners\",value:function(){return 0<this._listeners.length}},{key:\"dispatch\",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this._invokeListeners({args:t,async:!1})}},{key:\"dispatchAsync\",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this._invokeListeners({args:t,async:!0})}},{key:\"mute\",value:function(e){var t=0<arguments.length&&void 0!==e?e:{};this._mute=!0,t.accumulate?this._accumulate=!0:(this._accumulate=!1,this._accumulatedEvents=[])}},{key:\"unmute\",value:function(){this._mute=!1,this._accumulate&&(this._dispatchAccumulated(),this._accumulate=!1)}},{key:\"_invokeListeners\",value:function(e){var t=this,n=0<arguments.length&&void 0!==e?e:{args:[],async:!1};this._mute?this._accumulate&&this._accumulatedEvents.push(n):this._listeners.slice().forEach(function(e){t._invokeListener(e,n),e.once&&t.removeListener(e.callback,e.context)})}},{key:\"_invokeListener\",value:function(e,t){var n,r,i=e.callback instanceof c;t.async?i?(n=e.callback).dispatchAsync.apply(n,_toConsumableArray(t.args)):setTimeout(function(){return e.callback.apply(e.context,t.args)},0):i?(r=e.callback).dispatch.apply(r,_toConsumableArray(t.args)):e.callback.apply(e.context,t.args)}},{key:\"_ensureListener\",value:function(e){if(!c.isValidListener(e))throw new Error(\"Channel \"+this._name+\": listener is not a function and not a Channel\")}},{key:\"_dispatchInnerAddEvents\",value:function(){var e,t;this._onListenerAdded&&(e=this._onListenerAdded).dispatch.apply(e,arguments);this._onFirstListenerAdded&&1===this._listeners.length&&(t=this._onFirstListenerAdded).dispatch.apply(t,arguments)}},{key:\"_dispatchInnerRemoveEvents\",value:function(){var e,t;this._onListenerRemoved&&(e=this._onListenerRemoved).dispatch.apply(e,arguments);this._onLastListenerRemoved&&0===this._listeners.length&&(t=this._onLastListenerRemoved).dispatch.apply(t,arguments)}},{key:\"_indexOfListener\",value:function(e,t){for(var n=0;n<this._listeners.length;n++){var r=this._listeners[n],i=r.callback===e,s=e instanceof c,o=void 0===t&&void 0===r.context,a=t===r.context;if(i&&(s||o||a))return n}}},{key:\"_dispatchAccumulated\",value:function(){var t=this;this._accumulatedEvents.forEach(function(e){return t._invokeListeners(e)}),this._accumulatedEvents=[]}},{key:\"_pushListener\",value:function(e,t,n){this._ensureListener(e),this._checkForDuplicates(e,t),this._listeners.push({callback:e,context:t,once:n}),this._dispatchInnerAddEvents(e,t,n)}},{key:\"_checkForDuplicates\",value:function(e,t){if(this.hasListener(e,t))throw new Error(\"Channel \"+this._name+\": duplicating listeners\")}},{key:\"_spliceListener\",value:function(e){var t=this._listeners[e],n=t.callback,r=t.context,i=t.once;this._listeners.splice(e,1),this._dispatchInnerRemoveEvents(n,r,i)}},{key:\"onListenerAdded\",get:function(){return this._onListenerAdded||(this._onListenerAdded=new c(\"\".concat(this._name,\":onListenerAdded\"))),this._onListenerAdded}},{key:\"onFirstListenerAdded\",get:function(){return this._onFirstListenerAdded||(this._onFirstListenerAdded=new c(\"\".concat(this._name,\":onFirstListenerAdded\"))),this._onFirstListenerAdded}},{key:\"onListenerRemoved\",get:function(){return this._onListenerRemoved||(this._onListenerRemoved=new c(\"\".concat(this._name,\":onListenerRemoved\"))),this._onListenerRemoved}},{key:\"onLastListenerRemoved\",get:function(){return this._onLastListenerRemoved||(this._onLastListenerRemoved=new c(\"\".concat(this._name,\":onLastListenerRemoved\"))),this._onLastListenerRemoved}}],[{key:\"isValidListener\",value:function(e){return\"function\"==typeof e||e instanceof c}}]),c}(),EventEmitter=function(){function e(){_classCallCheck(this,e),this._channels=new Map}return _createClass(e,[{key:\"addListener\",value:function(e,t,n){this._getChannel(e).addListener(t,n)}},{key:\"on\",value:function(e,t,n){this.addListener(e,t,n)}},{key:\"addOnceListener\",value:function(e,t,n){this._getChannel(e).addOnceListener(t,n)}},{key:\"once\",value:function(e,t,n){this.addOnceListener(e,t,n)}},{key:\"removeListener\",value:function(e,t,n){this._getChannel(e).removeListener(t,n)}},{key:\"off\",value:function(e,t,n){this.removeListener(e,t,n)}},{key:\"hasListener\",value:function(e,t,n){return this._getChannel(e).hasListener(t,n)}},{key:\"has\",value:function(e,t,n){return this.hasListener(e,t,n)}},{key:\"hasListeners\",value:function(e){return this._getChannel(e).hasListeners()}},{key:\"dispatch\",value:function(e){for(var t,n=arguments.length,r=new Array(1<n?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];(t=this._getChannel(e)).dispatch.apply(t,r)}},{key:\"emit\",value:function(e){for(var t=arguments.length,n=new Array(1<t?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];this.dispatch.apply(this,[e].concat(n))}},{key:\"_getChannel\",value:function(e){return this._channels.has(e)||this._channels.set(e,new Channel(e)),this._channels.get(e)}}]),e}(),SubscriptionItem=function(){function t(e){_classCallCheck(this,t),this._params=e,this._isOn=!1,this._assertParams()}return _createClass(t,[{key:\"on\",value:function(){if(!this._isOn){var e=this._params.channel,t=e.addListener||e.addEventListener||e.on;this._applyMethod(t),this._isOn=!0}}},{key:\"off\",value:function(){if(this._isOn){var e=this._params.channel,t=e.removeListener||e.removeEventListener||e.off;this._applyMethod(t),this._isOn=!1}}},{key:\"_applyMethod\",value:function(e){var t=this._params,n=t.channel,r=t.event,i=t.listener,s=r?[r,i]:[i];e.apply(n,s)}},{key:\"_assertParams\",value:function(){var e=this._params,t=e.channel,n=e.event,r=e.listener;if(!t||\"object\"!==_typeof(t))throw new Error(\"Channel should be object\");if(n&&\"string\"!=typeof n)throw new Error(\"Event should be string\");if(!r||!Channel.isValidListener(r))throw new Error(\"Listener should be function or Channel\")}}]),t}(),Subscription=function(){function t(e){_classCallCheck(this,t),this._items=e.map(function(e){return new SubscriptionItem(e)})}return _createClass(t,[{key:\"on\",value:function(){return this._items.forEach(function(e){return e.on()}),this}},{key:\"off\",value:function(){return this._items.forEach(function(e){return e.off()}),this}}]),t}(),ReactSubscription=function(){_inherits(i,Subscription);var r=_createSuper(i);function i(e,t){var n;return _classCallCheck(this,i),(n=r.call(this,t))._overrideComponentCallback(e,\"componentDidMount\",\"on\"),n._overrideComponentCallback(e,\"componentWillUnmount\",\"off\"),n}return _createClass(i,[{key:\"_overrideComponentCallback\",value:function(r,e,i){var s=this,o=r[e];r[e]=function(){if(s[i](),\"function\"==typeof o){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return o.apply(r,t)}}}}]),i}(),chnl=Channel;chnl.EventEmitter=EventEmitter,chnl.Subscription=Subscription,chnl.ReactSubscription=ReactSubscription,module.exports=chnl;\n", "/**\n * @typedef {Object} Options\n *\n * @property {Number} [timeout=0] - Timeout in ms after that promise will be rejected automatically.\n * @property {String|Function} [timeoutReason] - Rejection reason for timeout.\n * Promise will be rejected with {@link PromiseController.TimeoutError} and this message. The message can contain\n * placeholder `{timeout}` for actual timeout value. If timeoutReason is a function,\n * it will be evaluated and returned value will be used as message.\n * @property {String|Function} [resetReason] - Rejection reason used when `.reset()` is called while promise is pending.\n * Promise will be rejected with {@link PromiseController.ResetError} and this message. If resetReason is a function,\n * it will be evaluated and returned value will be used as message.\n */\n\nmodule.exports = {\n  timeout: 0,\n  timeoutReason: 'Promise rejected by PromiseController timeout {timeout} ms.',\n  resetReason: 'Promise rejected by PromiseController reset.',\n};\n", "\n/**\n * Simple check for Promise.\n * @param {*} p\n * @returns {Boolean}\n * @ignore\n */\nexports.isPromise = function (p) {\n  return p && typeof p.then === 'function';\n};\n\n/**\n * Calls argument if it is function\n * @param {*} value\n * @returns {*}\n * @ignore\n */\nexports.tryCall = function (value) {\n  return typeof value === 'function' ? value() : value;\n};\n\n/**\n * Just `class MyError extends Error` does not work with transpiler.\n * See: https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\n * @ignore\n */\nexports.createErrorType = function (name) {\n  function E(message) {\n    if (!Error.captureStackTrace) {\n      this.stack = (new Error()).stack;\n    } else {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    this.message = message;\n  }\n  E.prototype = new Error();\n  E.prototype.name = name;\n  E.prototype.constructor = E;\n  return E;\n};\n", "/**\n * @ignore\n */\nconst defaults = require('./defaults');\nconst {isPromise, createErrorType, tryCall} = require('./utils');\n\n/**\n * @typicalname pc\n */\nclass PromiseController {\n  /**\n   * Creates promise controller. Unlike original Promise, it does not immediately call any function.\n   * Instead it has [.call()](#PromiseController+call) method that calls provided function\n   * and stores `resolve / reject` methods for future access.\n   *\n   * @param {Options} [options]\n   */\n  constructor(options) {\n    this._options = Object.assign({}, defaults, options);\n    this._resolve = null;\n    this._reject = null;\n    this._isPending = false;\n    this._isFulfilled = false;\n    this._isRejected = false;\n    this._value = undefined;\n    this._promise = null;\n    this._timer = null;\n  }\n\n  /**\n   * Returns promise itself.\n   *\n   * @returns {Promise}\n   */\n  get promise() {\n    return this._promise;\n  }\n\n  /**\n   * Returns value with that promise was settled (fulfilled or rejected).\n   *\n   * @returns {*}\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * Returns true if promise is pending.\n   *\n   * @returns {Boolean}\n   */\n  get isPending() {\n    return this._isPending;\n  }\n\n  /**\n   * Returns true if promise is fulfilled.\n   *\n   * @returns {Boolean}\n   */\n  get isFulfilled() {\n    return this._isFulfilled;\n  }\n\n  /**\n   * Returns true if promise rejected.\n   *\n   * @returns {Boolean}\n   */\n  get isRejected() {\n    return this._isRejected;\n  }\n\n  /**\n   * Returns true if promise is fulfilled or rejected.\n   *\n   * @returns {Boolean}\n   */\n  get isSettled() {\n    return this._isFulfilled || this._isRejected;\n  }\n\n  /**\n   * Calls `fn` and returns promise OR just returns existing promise from previous `call()` if it is still pending.\n   * To fulfill returned promise you should use\n   * {@link PromiseController#resolve} / {@link PromiseController#reject} methods.\n   * If `fn` itself returns promise, then external promise is attached to it and fulfills together.\n   * If no `fn` passed - promiseController is initialized as well.\n   *\n   * @param {Function} [fn] function to be called.\n   * @returns {Promise}\n   */\n  call(fn) {\n    if (!this._isPending) {\n      this.reset();\n      this._createPromise();\n      this._createTimer();\n      this._callFn(fn);\n    }\n    return this._promise;\n  }\n\n  /**\n   * Resolves pending promise with specified `value`.\n   *\n   * @param {*} [value]\n   */\n  resolve(value) {\n    if (this._isPending) {\n      if (isPromise(value)) {\n        this._tryAttachToPromise(value);\n      } else {\n        this._settle(value);\n        this._isFulfilled = true;\n        this._resolve(value);\n      }\n    }\n  }\n\n  /**\n   * Rejects pending promise with specified `value`.\n   *\n   * @param {*} [value]\n   */\n  reject(value) {\n    if (this._isPending) {\n      this._settle(value);\n      this._isRejected = true;\n      this._reject(value);\n    }\n  }\n\n  /**\n   * Resets to initial state.\n   * If promise is pending it will be rejected with {@link PromiseController.ResetError}.\n   */\n  reset() {\n    if (this._isPending) {\n      const message = tryCall(this._options.resetReason);\n      const error = new PromiseController.ResetError(message);\n      this.reject(error);\n    }\n    this._promise = null;\n    this._isPending = false;\n    this._isFulfilled = false;\n    this._isRejected = false;\n    this._value = undefined;\n    this._clearTimer();\n  }\n\n  /**\n   * Re-assign one or more options.\n   *\n   * @param {Options} options\n   */\n  configure(options) {\n    Object.assign(this._options, options);\n  }\n\n  _createPromise() {\n    this._promise = new Promise((resolve, reject) => {\n      this._isPending = true;\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  _handleTimeout() {\n    const messageTpl = tryCall(this._options.timeoutReason);\n    const message = typeof messageTpl === 'string' ? messageTpl.replace('{timeout}', this._options.timeout) : '';\n    const error = new PromiseController.TimeoutError(message);\n    this.reject(error);\n  }\n\n  _createTimer() {\n    if (this._options.timeout) {\n      this._timer = setTimeout(() => this._handleTimeout(), this._options.timeout);\n    }\n  }\n\n  _clearTimer() {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  }\n\n  _settle(value) {\n    this._isPending = false;\n    this._value = value;\n    this._clearTimer();\n  }\n\n  _callFn(fn) {\n    if (typeof fn === 'function') {\n      try {\n        const result = fn();\n        this._tryAttachToPromise(result);\n      } catch (e) {\n        this.reject(e);\n      }\n    }\n  }\n\n  _tryAttachToPromise(p) {\n    if (isPromise(p)) {\n      p.then(value => this.resolve(value), e => this.reject(e));\n    }\n  }\n}\n\n/**\n * Error for rejection in case of timeout.\n * @type {PromiseController.TimeoutError}\n */\nPromiseController.TimeoutError = createErrorType('TimeoutError');\n\n/**\n * Error for rejection in case of call `.reset()` while promise is pending.\n * @type {PromiseController.ResetError}\n */\nPromiseController.ResetError = createErrorType('ResetError');\n\nmodule.exports = PromiseController;\n", null, "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\ntry {\n\tnull.error; // eslint-disable-line no-unused-expressions\n} catch (e) {\n\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\tvar errorProto = getProto(getProto(e));\n\tINTRINSICS['%Error.prototype%'] = errorProto;\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n", "'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n", "'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n", "'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar supportsDescriptors = origDefineProperty && hasPropertyDescriptors;\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value; // eslint-disable-line no-param-reassign\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n", "'use strict';\n\nmodule.exports = function requirePromise() {\n\tif (typeof Promise !== 'function') {\n\t\tthrow new TypeError('`Promise.prototype.finally` requires a global `Promise` be available.');\n\t}\n};\n", "'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n", "'use strict';\n\n// http://262.ecma-international.org/5.1/#sec-9.11\n\nmodule.exports = require('is-callable');\n", "'use strict';\n\n// TODO: remove, semver-major\n\nmodule.exports = require('get-intrinsic');\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar has = require('has');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nmodule.exports = function IsPropertyDescriptor(ES, Desc) {\n\tif (ES.Type(Desc) !== 'Object') {\n\t\treturn false;\n\t}\n\tvar allowed = {\n\t\t'[[Configurable]]': true,\n\t\t'[[Enumerable]]': true,\n\t\t'[[Get]]': true,\n\t\t'[[Set]]': true,\n\t\t'[[Value]]': true,\n\t\t'[[Writable]]': true\n\t};\n\n\tfor (var key in Desc) { // eslint-disable-line no-restricted-syntax\n\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (ES.IsDataDescriptor(Desc) && ES.IsAccessorDescriptor(Desc)) {\n\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t}\n\treturn true;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Array = GetIntrinsic('%Array%');\n\n// eslint-disable-next-line global-require\nvar toStr = !$Array.isArray && require('call-bind/callBound')('Object.prototype.toString');\n\nmodule.exports = $Array.isArray || function IsArray(argument) {\n\treturn toStr(argument) === '[object Array]';\n};\n", "'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors');\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors() && GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasArrayLengthDefineBug = hasPropertyDescriptors.hasArrayLengthDefineBug();\n\n// eslint-disable-next-line global-require\nvar isArray = hasArrayLengthDefineBug && require('../helpers/IsArray');\n\nvar callBound = require('call-bind/callBound');\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\n\n// eslint-disable-next-line max-params\nmodule.exports = function DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, desc) {\n\tif (!$defineProperty) {\n\t\tif (!IsDataDescriptor(desc)) {\n\t\t\t// ES3 does not support getters/setters\n\t\t\treturn false;\n\t\t}\n\t\tif (!desc['[[Configurable]]'] || !desc['[[Writable]]']) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// fallback for ES3\n\t\tif (P in O && $isEnumerable(O, P) !== !!desc['[[Enumerable]]']) {\n\t\t\t// a non-enumerable existing property\n\t\t\treturn false;\n\t\t}\n\n\t\t// property does not exist at all, or exists but is enumerable\n\t\tvar V = desc['[[Value]]'];\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tO[P] = V; // will use [[Define]]\n\t\treturn SameValue(O[P], V);\n\t}\n\tif (\n\t\thasArrayLengthDefineBug\n\t\t&& P === 'length'\n\t\t&& '[[Value]]' in desc\n\t\t&& isArray(O)\n\t\t&& O.length !== desc['[[Value]]']\n\t) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tO.length = desc['[[Value]]'];\n\t\treturn O.length === desc['[[Value]]'];\n\t}\n\n\t$defineProperty(O, P, FromPropertyDescriptor(desc));\n\treturn true;\n};\n", "'use strict';\n\nvar has = require('has');\n\n// https://262.ecma-international.org/13.0/#sec-match-records\n\nmodule.exports = function isMatchRecord(record) {\n\treturn (\n\t\thas(record, '[[StartIndex]]')\n        && has(record, '[[EndIndex]]')\n        && record['[[StartIndex]]'] >= 0\n        && record['[[EndIndex]]'] >= record['[[StartIndex]]']\n        && String(parseInt(record['[[StartIndex]]'], 10)) === String(record['[[StartIndex]]'])\n        && String(parseInt(record['[[EndIndex]]'], 10)) === String(record['[[EndIndex]]'])\n\t);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar isMatchRecord = require('./isMatchRecord');\n\nvar predicates = {\n\t// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type\n\t'Property Descriptor': function isPropertyDescriptor(Desc) {\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tif (!Desc) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\t// https://262.ecma-international.org/13.0/#sec-match-records\n\t'Match Record': isMatchRecord,\n\t'Iterator Record': function isIteratorRecord(value) {\n\t\treturn has(value, '[[Iterator]]') && has(value, '[[NextMethod]]') && has(value, '[[Done]]');\n\t},\n\t'PromiseCapability Record': function isPromiseCapabilityRecord(value) {\n\t\treturn !!value\n\t\t\t&& has(value, '[[Resolve]]')\n\t\t\t&& typeof value['[[Resolve]]'] === 'function'\n\t\t\t&& has(value, '[[Reject]]')\n\t\t\t&& typeof value['[[Reject]]'] === 'function'\n\t\t\t&& has(value, '[[Promise]]')\n\t\t\t&& value['[[Promise]]']\n\t\t\t&& typeof value['[[Promise]]'].then === 'function';\n\t},\n\t'AsyncGeneratorRequest Record': function isAsyncGeneratorRequestRecord(value) {\n\t\treturn !!value\n\t\t\t&& has(value, '[[Completion]]') // TODO: confirm is a completion record\n\t\t\t&& has(value, '[[Capability]]')\n\t\t\t&& predicates['PromiseCapability Record'](value['[[Capability]]']);\n\t}\n};\n\nmodule.exports = function assertRecord(Type, recordType, argumentName, value) {\n\tvar predicate = predicates[recordType];\n\tif (typeof predicate !== 'function') {\n\t\tthrow new $SyntaxError('unknown record type: ' + recordType);\n\t}\n\tif (Type(value) !== 'Object' || !predicate(value)) {\n\t\tthrow new $TypeError(argumentName + ' must be a ' + recordType);\n\t}\n};\n", "'use strict';\n\nmodule.exports = function fromPropertyDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn Desc;\n\t}\n\tvar obj = {};\n\tif ('[[Value]]' in Desc) {\n\t\tobj.value = Desc['[[Value]]'];\n\t}\n\tif ('[[Writable]]' in Desc) {\n\t\tobj.writable = !!Desc['[[Writable]]'];\n\t}\n\tif ('[[Get]]' in Desc) {\n\t\tobj.get = Desc['[[Get]]'];\n\t}\n\tif ('[[Set]]' in Desc) {\n\t\tobj.set = Desc['[[Set]]'];\n\t}\n\tif ('[[Enumerable]]' in Desc) {\n\t\tobj.enumerable = !!Desc['[[Enumerable]]'];\n\t}\n\tif ('[[Configurable]]' in Desc) {\n\t\tobj.configurable = !!Desc['[[Configurable]]'];\n\t}\n\treturn obj;\n};\n", "'use strict';\n\n// https://262.ecma-international.org/5.1/#sec-8\n\nmodule.exports = function Type(x) {\n\tif (x === null) {\n\t\treturn 'Null';\n\t}\n\tif (typeof x === 'undefined') {\n\t\treturn 'Undefined';\n\t}\n\tif (typeof x === 'function' || typeof x === 'object') {\n\t\treturn 'Object';\n\t}\n\tif (typeof x === 'number') {\n\t\treturn 'Number';\n\t}\n\tif (typeof x === 'boolean') {\n\t\treturn 'Boolean';\n\t}\n\tif (typeof x === 'string') {\n\t\treturn 'String';\n\t}\n};\n", "'use strict';\n\nvar ES5Type = require('../5/Type');\n\n// https://262.ecma-international.org/11.0/#sec-ecmascript-data-types-and-values\n\nmodule.exports = function Type(x) {\n\tif (typeof x === 'symbol') {\n\t\treturn 'Symbol';\n\t}\n\tif (typeof x === 'bigint') {\n\t\treturn 'BigInt';\n\t}\n\treturn ES5Type(x);\n};\n", "'use strict';\n\nvar assertRecord = require('../helpers/assertRecord');\nvar fromPropertyDescriptor = require('../helpers/fromPropertyDescriptor');\n\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-frompropertydescriptor\n\nmodule.exports = function FromPropertyDescriptor(Desc) {\n\tif (typeof Desc !== 'undefined') {\n\t\tassertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\t}\n\n\treturn fromPropertyDescriptor(Desc);\n};\n", "'use strict';\n\nvar has = require('has');\n\nvar Type = require('./Type');\n\nvar assertRecord = require('../helpers/assertRecord');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.1\n\nmodule.exports = function IsAccessorDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tassertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar has = require('has');\n\nvar Type = require('./Type');\n\nvar assertRecord = require('../helpers/assertRecord');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.2\n\nmodule.exports = function IsDataDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tassertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\n// https://262.ecma-international.org/6.0/#sec-ispropertykey\n\nmodule.exports = function IsPropertyKey(argument) {\n\treturn typeof argument === 'string' || typeof argument === 'symbol';\n};\n", "'use strict';\n\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n", "'use strict';\n\nvar $isNaN = require('../helpers/isNaN');\n\n// http://262.ecma-international.org/5.1/#sec-9.12\n\nmodule.exports = function SameValue(x, y) {\n\tif (x === y) { // 0 === -0, but they are not identical.\n\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\treturn true;\n\t}\n\treturn $isNaN(x) && $isNaN(y);\n};\n", "'use strict';\n\n// http://262.ecma-international.org/5.1/#sec-9.2\n\nmodule.exports = function ToBoolean(value) { return !!value; };\n", "'use strict';\n\nvar has = require('has');\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('./Type');\nvar ToBoolean = require('./ToBoolean');\nvar IsCallable = require('./IsCallable');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.5\n\nmodule.exports = function ToPropertyDescriptor(Obj) {\n\tif (Type(Obj) !== 'Object') {\n\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t}\n\n\tvar desc = {};\n\tif (has(Obj, 'enumerable')) {\n\t\tdesc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);\n\t}\n\tif (has(Obj, 'configurable')) {\n\t\tdesc['[[Configurable]]'] = ToBoolean(Obj.configurable);\n\t}\n\tif (has(Obj, 'value')) {\n\t\tdesc['[[Value]]'] = Obj.value;\n\t}\n\tif (has(Obj, 'writable')) {\n\t\tdesc['[[Writable]]'] = ToBoolean(Obj.writable);\n\t}\n\tif (has(Obj, 'get')) {\n\t\tvar getter = Obj.get;\n\t\tif (typeof getter !== 'undefined' && !IsCallable(getter)) {\n\t\t\tthrow new $TypeError('getter must be a function');\n\t\t}\n\t\tdesc['[[Get]]'] = getter;\n\t}\n\tif (has(Obj, 'set')) {\n\t\tvar setter = Obj.set;\n\t\tif (typeof setter !== 'undefined' && !IsCallable(setter)) {\n\t\t\tthrow new $TypeError('setter must be a function');\n\t\t}\n\t\tdesc['[[Set]]'] = setter;\n\t}\n\n\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t}\n\treturn desc;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-definepropertyorthrow\n\nmodule.exports = function DefinePropertyOrThrow(O, P, desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\n\tvar Desc = isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, desc) ? desc : ToPropertyDescriptor(desc);\n\tif (!isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n\t}\n\n\treturn DefineOwnProperty(\n\t\tIsDataDescriptor,\n\t\tSameValue,\n\t\tFromPropertyDescriptor,\n\t\tO,\n\t\tP,\n\t\tDesc\n\t);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic.js');\n\nvar $construct = GetIntrinsic('%Reflect.construct%', true);\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\ntry {\n\tDefinePropertyOrThrow({}, '', { '[[Get]]': function () {} });\n} catch (e) {\n\t// Accessor properties aren't supported\n\tDefinePropertyOrThrow = null;\n}\n\n// https://262.ecma-international.org/6.0/#sec-isconstructor\n\nif (DefinePropertyOrThrow && $construct) {\n\tvar isConstructorMarker = {};\n\tvar badArrayLike = {};\n\tDefinePropertyOrThrow(badArrayLike, 'length', {\n\t\t'[[Get]]': function () {\n\t\t\tthrow isConstructorMarker;\n\t\t},\n\t\t'[[Enumerable]]': true\n\t});\n\n\tmodule.exports = function IsConstructor(argument) {\n\t\ttry {\n\t\t\t// `Reflect.construct` invokes `IsConstructor(target)` before `Get(args, 'length')`:\n\t\t\t$construct(argument, badArrayLike);\n\t\t} catch (err) {\n\t\t\treturn err === isConstructorMarker;\n\t\t}\n\t};\n} else {\n\tmodule.exports = function IsConstructor(argument) {\n\t\t// unfortunately there's no way to truly check this without try/catch `new argument` in old environments\n\t\treturn typeof argument === 'function' && !!argument.prototype;\n\t};\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $species = GetIntrinsic('%Symbol.species%', true);\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsConstructor = require('./IsConstructor');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-speciesconstructor\n\nmodule.exports = function SpeciesConstructor(O, defaultConstructor) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tvar C = O.constructor;\n\tif (typeof C === 'undefined') {\n\t\treturn defaultConstructor;\n\t}\n\tif (Type(C) !== 'Object') {\n\t\tthrow new $TypeError('O.constructor is not an Object');\n\t}\n\tvar S = $species ? C[$species] : void 0;\n\tif (S == null) {\n\t\treturn defaultConstructor;\n\t}\n\tif (IsConstructor(S)) {\n\t\treturn S;\n\t}\n\tthrow new $TypeError('no constructor found');\n};\n", "'use strict';\n\nvar requirePromise = require('./requirePromise');\n\nrequirePromise();\n\nvar IsCallable = require('es-abstract/2022/IsCallable');\nvar SpeciesConstructor = require('es-abstract/2022/SpeciesConstructor');\nvar Type = require('es-abstract/2022/Type');\n\nvar promiseResolve = function PromiseResolve(C, value) {\n\treturn new C(function (resolve) {\n\t\tresolve(value);\n\t});\n};\n\nvar OriginalPromise = Promise;\n\nvar createThenFinally = function CreateThenFinally(C, onFinally) {\n\treturn function (value) {\n\t\tvar result = onFinally();\n\t\tvar promise = promiseResolve(C, result);\n\t\tvar valueThunk = function () {\n\t\t\treturn value;\n\t\t};\n\t\treturn promise.then(valueThunk);\n\t};\n};\n\nvar createCatchFinally = function CreateCatchFinally(C, onFinally) {\n\treturn function (reason) {\n\t\tvar result = onFinally();\n\t\tvar promise = promiseResolve(C, result);\n\t\tvar thrower = function () {\n\t\t\tthrow reason;\n\t\t};\n\t\treturn promise.then(thrower);\n\t};\n};\n\nvar promiseFinally = function finally_(onFinally) {\n\t/* eslint no-invalid-this: 0 */\n\n\tvar promise = this;\n\n\tif (Type(promise) !== 'Object') {\n\t\tthrow new TypeError('receiver is not an Object');\n\t}\n\n\tvar C = SpeciesConstructor(promise, OriginalPromise); // may throw\n\n\tvar thenFinally = onFinally;\n\tvar catchFinally = onFinally;\n\tif (IsCallable(onFinally)) {\n\t\tthenFinally = createThenFinally(C, onFinally);\n\t\tcatchFinally = createCatchFinally(C, onFinally);\n\t}\n\n\treturn promise.then(thenFinally, catchFinally);\n};\n\nif (Object.getOwnPropertyDescriptor) {\n\tvar descriptor = Object.getOwnPropertyDescriptor(promiseFinally, 'name');\n\tif (descriptor && descriptor.configurable) {\n\t\tObject.defineProperty(promiseFinally, 'name', { configurable: true, value: 'finally' });\n\t}\n}\n\nmodule.exports = promiseFinally;\n", "'use strict';\n\nvar requirePromise = require('./requirePromise');\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\trequirePromise();\n\treturn typeof Promise.prototype['finally'] === 'function' ? Promise.prototype['finally'] : implementation;\n};\n", "'use strict';\n\nvar requirePromise = require('./requirePromise');\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimPromiseFinally() {\n\trequirePromise();\n\n\tvar polyfill = getPolyfill();\n\tdefine(Promise.prototype, { 'finally': polyfill }, {\n\t\t'finally': function testFinally() {\n\t\t\treturn Promise.prototype['finally'] !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar bound = callBind(getPolyfill());\n\ndefine(bound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = bound;\n", "/**\n * Class for manage pending requests.\n * @private\n */\n\nconst PromiseController = require('promise-controller');\nconst promiseFinally = require('promise.prototype.finally');\n\nmodule.exports = class Requests {\n  constructor() {\n    this._items = new Map();\n  }\n\n  /**\n   * Creates new request and stores it in the list.\n   *\n   * @param {String|Number} requestId\n   * @param {Function} fn\n   * @param {Number} timeout\n   * @returns {Promise}\n   */\n  create(requestId, fn, timeout) {\n    this._rejectExistingRequest(requestId);\n    return this._createNewRequest(requestId, fn, timeout);\n  }\n\n  resolve(requestId, data) {\n    if (requestId && this._items.has(requestId)) {\n      this._items.get(requestId).resolve(data);\n    }\n  }\n\n  rejectAll(error) {\n    this._items.forEach(request => request.isPending ? request.reject(error) : null);\n  }\n\n  _rejectExistingRequest(requestId) {\n    const existingRequest = this._items.get(requestId);\n    if (existingRequest && existingRequest.isPending) {\n      existingRequest.reject(new Error(`WebSocket request is replaced, id: ${requestId}`));\n    }\n  }\n\n  _createNewRequest(requestId, fn, timeout) {\n    const request = new PromiseController({\n      timeout,\n      timeoutReason: `WebSocket request was rejected by timeout (${timeout} ms). RequestId: ${requestId}`\n    });\n    this._items.set(requestId, request);\n    return promiseFinally(request.call(fn), () => this._deleteRequest(requestId, request));\n  }\n\n  _deleteRequest(requestId, request) {\n    // this check is important when request was replaced\n    if (this._items.get(requestId) === request) {\n      this._items.delete(requestId);\n    }\n  }\n};\n", "/**\n * Default options.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Function} [createWebSocket=url => new WebSocket(url)] - custom function for WebSocket construction.\n  *\n * @property {Function} [packMessage=noop] - packs message for sending. For example, `data => JSON.stringify(data)`.\n *\n * @property {Function} [unpackMessage=noop] - unpacks received message. For example, `data => JSON.parse(data)`.\n *\n * @property {Function} [attachRequestId=noop] - injects request id into data.\n * For example, `(data, requestId) => Object.assign({requestId}, data)`.\n *\n * @property {Function} [extractRequestId=noop] - extracts request id from received data.\n * For example, `data => data.requestId`.\n *\n * @property {Function} [extractMessageData=event => event.data] - extracts data from event object.\n *\n * @property {Number} timeout=0 - timeout for opening connection and sending messages.\n *\n * @property {Number} connectionTimeout=0 - special timeout for opening connection, by default equals to `timeout`.\n *\n * @defaults\n * please see [options.js](https://github.com/vitalets/websocket-as-promised/blob/master/src/options.js)\n */\n\nmodule.exports = {\n  /**\n   * See {@link Options.createWebSocket}\n   *\n   * @param {String} url\n   * @returns {WebSocket}\n   */\n  createWebSocket: url => new WebSocket(url),\n\n  /**\n   * See {@link Options.packMessage}\n   *\n   * @param {*} data\n   * @returns {String|ArrayBuffer|Blob}\n   */\n  packMessage: null,\n\n  /**\n   * See {@link Options.unpackMessage}\n   *\n   * @param {String|ArrayBuffer|Blob} data\n   * @returns {*}\n   */\n  unpackMessage: null,\n\n  /**\n   * See {@link Options.attachRequestId}\n   *\n   * @param {*} data\n   * @param {String|Number} requestId\n   * @returns {*}\n   */\n  attachRequestId: null,\n\n  /**\n   * See {@link Options.extractRequestId}\n   *\n   * @param {*} data\n   * @returns {String|Number|undefined}\n   */\n  extractRequestId: null,\n\n  /**\n   * See {@link Options.extractMessageData}\n   *\n   * @param {*} event\n   * @returns {*}\n   */\n  extractMessageData: event => event.data,\n\n  /**\n   * See {@link Options.timeout}\n   */\n  timeout: 0,\n\n  /**\n   * See {@link Options.connectionTimeout}\n   */\n  connectionTimeout: 0,\n};\n", "\nexports.throwIf = (condition, message) => {\n  if (condition) {\n    throw new Error(message);\n  }\n};\n\nexports.isPromise = value => {\n  return value && typeof value.then === 'function';\n};\n", "/**\n * WebSocket with promise api\n */\n\n/**\n * @external Channel\n */\n\nconst Channel = require('chnl');\n// todo: maybe remove PromiseController and just use promised-map with 2 items?\nconst PromiseController = require('promise-controller');\nconst { PromisedMap } = require('promised-map');\n// todo: maybe remove Requests and just use promised-map?\nconst Requests = require('./requests');\nconst defaultOptions = require('./options');\nconst {throwIf, isPromise} = require('./utils');\n\n// see: https://developer.mozilla.org/en-US/docs/Web/API/WebSocket#Ready_state_constants\nconst STATE = {\n  CONNECTING: 0,\n  OPEN: 1,\n  CLOSING: 2,\n  CLOSED: 3,\n};\n\n/**\n * @typicalname wsp\n */\nclass WebSocketAsPromised {\n  /**\n   * Constructor. Unlike original WebSocket it does not immediately open connection.\n   * Please call `open()` method to connect.\n   *\n   * @param {String} url WebSocket URL\n   * @param {Options} [options]\n   */\n  constructor(url, options) {\n    this._assertOptions(options);\n    this._url = url;\n    this._options = Object.assign({}, defaultOptions, options);\n    this._requests = new Requests();\n    this._promisedMap = new PromisedMap();\n    this._ws = null;\n    this._wsSubscription = null;\n    this._createOpeningController();\n    this._createClosingController();\n    this._createChannels();\n  }\n\n  /**\n   * Returns original WebSocket instance created by `options.createWebSocket`.\n   *\n   * @returns {WebSocket}\n   */\n  get ws() {\n    return this._ws;\n  }\n\n  /**\n   * Returns WebSocket url.\n   *\n   * @returns {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Is WebSocket connection in opening state.\n   *\n   * @returns {Boolean}\n   */\n  get isOpening() {\n    return Boolean(this._ws && this._ws.readyState === STATE.CONNECTING);\n  }\n\n  /**\n   * Is WebSocket connection opened.\n   *\n   * @returns {Boolean}\n   */\n  get isOpened() {\n    return Boolean(this._ws && this._ws.readyState === STATE.OPEN);\n  }\n\n  /**\n   * Is WebSocket connection in closing state.\n   *\n   * @returns {Boolean}\n   */\n  get isClosing() {\n    return Boolean(this._ws && this._ws.readyState === STATE.CLOSING);\n  }\n\n  /**\n   * Is WebSocket connection closed.\n   *\n   * @returns {Boolean}\n   */\n  get isClosed() {\n    return Boolean(!this._ws || this._ws.readyState === STATE.CLOSED);\n  }\n\n  /**\n   * Event channel triggered when connection is opened.\n   *\n   * @see https://vitalets.github.io/chnl/#channel\n   * @example\n   * wsp.onOpen.addListener(() => console.log('Connection opened'));\n   *\n   * @returns {Channel}\n   */\n  get onOpen() {\n    return this._onOpen;\n  }\n\n  /**\n   * Event channel triggered every time when message is sent to server.\n   *\n   * @see https://vitalets.github.io/chnl/#channel\n   * @example\n   * wsp.onSend.addListener(data => console.log('Message sent', data));\n   *\n   * @returns {Channel}\n   */\n  get onSend() {\n    return this._onSend;\n  }\n\n  /**\n   * Event channel triggered every time when message received from server.\n   *\n   * @see https://vitalets.github.io/chnl/#channel\n   * @example\n   * wsp.onMessage.addListener(message => console.log(message));\n   *\n   * @returns {Channel}\n   */\n  get onMessage() {\n    return this._onMessage;\n  }\n\n  /**\n   * Event channel triggered every time when received message is successfully unpacked.\n   * For example, if you are using JSON transport, the listener will receive already JSON parsed data.\n   *\n   * @see https://vitalets.github.io/chnl/#channel\n   * @example\n   * wsp.onUnpackedMessage.addListener(data => console.log(data.foo));\n   *\n   * @returns {Channel}\n   */\n  get onUnpackedMessage() {\n    return this._onUnpackedMessage;\n  }\n\n  /**\n   * Event channel triggered every time when response to some request comes.\n   * Received message considered a response if requestId is found in it.\n   *\n   * @see https://vitalets.github.io/chnl/#channel\n   * @example\n   * wsp.onResponse.addListener(data => console.log(data));\n   *\n   * @returns {Channel}\n   */\n  get onResponse() {\n    return this._onResponse;\n  }\n\n  /**\n   * Event channel triggered when connection closed.\n   * Listener accepts single argument `{code, reason}`.\n   *\n   * @see https://vitalets.github.io/chnl/#channel\n   * @example\n   * wsp.onClose.addListener(event => console.log(`Connections closed: ${event.reason}`));\n   *\n   * @returns {Channel}\n   */\n  get onClose() {\n    return this._onClose;\n  }\n\n  /**\n   * Event channel triggered when by Websocket 'error' event.\n   *\n   * @see https://vitalets.github.io/chnl/#channel\n   * @example\n   * wsp.onError.addListener(event => console.error(event));\n   *\n   * @returns {Channel}\n   */\n  get onError() {\n    return this._onError;\n  }\n\n  /**\n   * Opens WebSocket connection. If connection already opened, promise will be resolved with \"open event\".\n   *\n   * @returns {Promise<Event>}\n   */\n  open() {\n    if (this.isClosing) {\n      return Promise.reject(new Error(`Can't open WebSocket while closing.`));\n    }\n    if (this.isOpened) {\n      return this._opening.promise;\n    }\n    return this._opening.call(() => {\n      this._opening.promise.catch(e => this._cleanup(e));\n      this._createWS();\n    });\n  }\n\n  /**\n   * Performs request and waits for response.\n   *\n   * @param {*} data\n   * @param {Object} [options]\n   * @param {String|Number} [options.requestId=<auto-generated>]\n   * @param {Number} [options.timeout=0]\n   * @returns {Promise}\n   */\n  sendRequest(data, options = {}) {\n    const requestId = options.requestId || `${Math.random()}`;\n    const timeout = options.timeout !== undefined ? options.timeout : this._options.timeout;\n    return this._requests.create(requestId, () => {\n      this._assertRequestIdHandlers();\n      const finalData = this._options.attachRequestId(data, requestId);\n      this.sendPacked(finalData);\n    }, timeout);\n  }\n\n  /**\n   * Packs data with `options.packMessage` and sends to the server.\n   *\n   * @param {*} data\n   */\n  sendPacked(data) {\n    this._assertPackingHandlers();\n    const message = this._options.packMessage(data);\n    this.send(message);\n  }\n\n  /**\n   * Sends data without packing.\n   *\n   * @param {String|Blob|ArrayBuffer} data\n   */\n  send(data) {\n    throwIf(!this.isOpened, `Can't send data because WebSocket is not opened.`);\n    this._ws.send(data);\n    this._onSend.dispatchAsync(data);\n  }\n\n  /**\n   * Waits for particular message to come.\n   *\n   * @param {Function} predicate function to check incoming message.\n   * @param {Object} [options]\n   * @param {Number} [options.timeout=0]\n   * @param {Error} [options.timeoutError]\n   * @returns {Promise}\n   *\n   * @example\n   * const response = await wsp.waitUnpackedMessage(data => data && data.foo === 'bar');\n   */\n  waitUnpackedMessage(predicate, options = {}) {\n    throwIf(typeof predicate !== 'function', `Predicate must be a function, got ${typeof predicate}`);\n    if (options.timeout) {\n      setTimeout(() => {\n        if (this._promisedMap.has(predicate)) {\n          const error = options.timeoutError || new Error('Timeout');\n          this._promisedMap.reject(predicate, error);\n        }\n      }, options.timeout);\n    }\n    return this._promisedMap.set(predicate);\n  }\n\n  /**\n   * Closes WebSocket connection. If connection already closed, promise will be resolved with \"close event\".\n   *\n   * @param {number=} [code=1000] A numeric value indicating the status code.\n   * @param {string=} [reason] A human-readable reason for closing connection.\n   * @returns {Promise<Event>}\n   */\n  close(code, reason) { // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close\n    return this.isClosed\n      ? Promise.resolve(this._closing.value)\n      : this._closing.call(() => this._ws.close(code, reason));\n  }\n\n  /**\n   * Removes all listeners from WSP instance. Useful for cleanup.\n   */\n  removeAllListeners() {\n    this._onOpen.removeAllListeners();\n    this._onMessage.removeAllListeners();\n    this._onUnpackedMessage.removeAllListeners();\n    this._onResponse.removeAllListeners();\n    this._onSend.removeAllListeners();\n    this._onClose.removeAllListeners();\n    this._onError.removeAllListeners();\n  }\n\n  _createOpeningController() {\n    const connectionTimeout = this._options.connectionTimeout || this._options.timeout;\n    this._opening = new PromiseController({\n      timeout: connectionTimeout,\n      timeoutReason: `Can't open WebSocket within allowed timeout: ${connectionTimeout} ms.`\n    });\n  }\n\n  _createClosingController() {\n    const closingTimeout = this._options.timeout;\n    this._closing = new PromiseController({\n      timeout: closingTimeout,\n      timeoutReason: `Can't close WebSocket within allowed timeout: ${closingTimeout} ms.`\n    });\n  }\n\n  _createChannels() {\n    this._onOpen = new Channel();\n    this._onMessage = new Channel();\n    this._onUnpackedMessage = new Channel();\n    this._onResponse = new Channel();\n    this._onSend = new Channel();\n    this._onClose = new Channel();\n    this._onError = new Channel();\n  }\n\n  _createWS() {\n    this._ws = this._options.createWebSocket(this._url);\n    this._wsSubscription = new Channel.Subscription([\n      { channel: this._ws, event: 'open', listener: e => this._handleOpen(e) },\n      { channel: this._ws, event: 'message', listener: e => this._handleMessage(e) },\n      { channel: this._ws, event: 'error', listener: e => this._handleError(e) },\n      { channel: this._ws, event: 'close', listener: e => this._handleClose(e) },\n    ]).on();\n  }\n\n  _handleOpen(event) {\n    this._onOpen.dispatchAsync(event);\n    this._opening.resolve(event);\n  }\n\n  _handleMessage(event) {\n    const data = this._options.extractMessageData(event);\n    this._onMessage.dispatchAsync(data);\n    this._tryUnpack(data);\n  }\n\n  _tryUnpack(data) {\n    if (this._options.unpackMessage) {\n      data = this._options.unpackMessage(data);\n      if (isPromise(data)) {\n        data.then(data => this._handleUnpackedData(data));\n      } else {\n        this._handleUnpackedData(data);\n      }\n    }\n  }\n\n  _handleUnpackedData(data) {\n    if (data !== undefined) {\n      // todo: maybe trigger onUnpackedMessage always?\n      this._onUnpackedMessage.dispatchAsync(data);\n      this._tryHandleResponse(data);\n    }\n    this._tryHandleWaitingMessage(data);\n  }\n\n  _tryHandleResponse(data) {\n    if (this._options.extractRequestId) {\n      const requestId = this._options.extractRequestId(data);\n      if (requestId) {\n        this._onResponse.dispatchAsync(data, requestId);\n        this._requests.resolve(requestId, data);\n      }\n    }\n  }\n\n  _tryHandleWaitingMessage(data) {\n    this._promisedMap.forEach((_, predicate) => {\n      let isMatched = false;\n      try {\n        isMatched = predicate(data);\n      } catch (e) {\n        this._promisedMap.reject(predicate, e);\n        return;\n      }\n      if (isMatched) {\n        this._promisedMap.resolve(predicate, data);\n      }\n    });\n  }\n\n  _handleError(event) {\n    this._onError.dispatchAsync(event);\n  }\n\n  _handleClose(event) {\n    this._onClose.dispatchAsync(event);\n    this._closing.resolve(event);\n    const error = new Error(`WebSocket closed with reason: ${event.reason} (${event.code}).`);\n    if (this._opening.isPending) {\n      this._opening.reject(error);\n    }\n    this._cleanup(error);\n  }\n\n  _cleanupWS() {\n    if (this._wsSubscription) {\n      this._wsSubscription.off();\n      this._wsSubscription = null;\n    }\n    this._ws = null;\n  }\n\n  _cleanup(error) {\n    this._cleanupWS();\n    this._requests.rejectAll(error);\n  }\n\n  _assertOptions(options) {\n    Object.keys(options || {}).forEach(key => {\n      if (!defaultOptions.hasOwnProperty(key)) {\n        throw new Error(`Unknown option: ${key}`);\n      }\n    });\n  }\n\n  _assertPackingHandlers() {\n    const { packMessage, unpackMessage } = this._options;\n    throwIf(!packMessage || !unpackMessage,\n      `Please define 'options.packMessage / options.unpackMessage' for sending packed messages.`\n    );\n  }\n\n  _assertRequestIdHandlers() {\n    const { attachRequestId, extractRequestId } = this._options;\n    throwIf(!attachRequestId || !extractRequestId,\n      `Please define 'options.attachRequestId / options.extractRequestId' for sending requests.`\n    );\n  }\n}\n\nmodule.exports = WebSocketAsPromised;\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\n/**\n * This error is thrown when there is an error response from the tag itself.\n * The \"name\" property will contain the exact error name (e.g. ERROR_CODE_INVALID_KEY_NO).\n */\nclass HaloTagError extends Error {\n    constructor(name, message) {\n        super(\"The NFC tag encountered an error when executing command: \" + message);\n        this.name = name;\n    }\n}\n\n/**\n * There is an unexpected logic error while processing information on the client's side.\n * Check \"message\" property for the detailed information.\n */\nclass HaloLogicError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"HaloLogicError\";\n    }\n}\n\n/**\n * The user has denied NFC access permission.\n */\nclass NFCPermissionRequestDenied extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"NFCPermissionRequestDenied\";\n    }\n}\n\n/**\n * This NFC access method is not supported by the user's browser\n * or the method is invoked incorrectly. Check \"message\" property\n * for the detailed explanation.\n */\nclass NFCMethodNotSupported extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"NFCMethodNotSupported\";\n    }\n}\n\n/**\n * When executeNFCCommand() is concurrently executed multiple times,\n * all calls except one will fail with NFCAbortedError.\n * This error should be ignored on the frontend.\n */\nclass NFCAbortedError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"NFCAbortedError\";\n    }\n}\n\n/**\n * There was a low-level failure of the NFC command execution mechanism.\n * Check \"message\" property for more details.\n */\nclass NFCOperationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"NFCOperationError\";\n    }\n}\n\nmodule.exports = {\n    HaloTagError,\n    HaloLogicError,\n    NFCPermissionRequestDenied,\n    NFCMethodNotSupported,\n    NFCAbortedError,\n    NFCOperationError\n};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nlet ERROR_CODES = {\n    0x01: [\"ERROR_CODE_UNKNOWN_CMD\", \"Unknown command code.\"],\n    0x02: [\"ERROR_CODE_INVALID_KEY_NO\", \"Invalid key number.\"],\n    0x03: [\"ERROR_CODE_INVALID_LENGTH\", \"Invalid length.\"],\n    0x04: [\"ERROR_CODE_RESERVED_1\", \"Reserved (1).\"],\n    0x05: [\"ERROR_CODE_CONFIG_NOT_LOCKED\", \"Config is not locked.\"],\n    0x06: [\"ERROR_CODE_KEY_ALREADY_EXISTS\", \"Key already exists.\"],\n    0x07: [\"ERROR_CODE_INVALID_LATCH_SLOT\", \"Invalid latch slot number.\"],\n    0x08: [\"ERROR_CODE_SLOT_ALREADY_LATCHED\", \"This slot was already written. It's not possible to override latch slot.\"],\n    0x09: [\"ERROR_CODE_SLOT_NOT_LATCHED\", \"Unable to fetch latch slot information. The latch slot is empty.\"],\n    0x0A: [\"ERROR_CODE_KEY_NOT_INITIALIZED\", \"Targeted key is not initialized.\"],\n    0x0B: [\"ERROR_CODE_SUBDOMAIN_LOCKED\", \"Unable to modify NDEF subdomain. The subdomain is already permanently locked.\"],\n    0x0C: [\"ERROR_CODE_CRYPTO_ERROR\", \"Cryptographic error. No details available.\"],\n    0x0D: [\"ERROR_CODE_INVALID_DATA\", \"Invalid data provided.\"],\n    0x0E: [\"ERROR_CODE_CMD_TOO_LONG\", \"Command is too long to be displayed.\"],\n    0x0F: [\"ERROR_CODE_RESP_TOO_LONG\", \"Response is too long to be displayed.\"],\n    0x10: [\"ERROR_CODE_PWD_NOT_SET\", \"Password was not set.\"],\n    0x11: [\"ERROR_CODE_WRONG_PWD\", \"Wrong password provided.\"],\n    0x12: [\"ERROR_CODE_PWD_ALREADY_SET\", \"Password is already set.\"],\n    0x13: [\"ERROR_CODE_NO_ADDON\", \"HaLo Addons are not installed on this tag.\"]\n};\n\nmodule.exports = {ERROR_CODES};\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "{\n  \"name\": \"elliptic\",\n  \"version\": \"6.5.4\",\n  \"description\": \"EC cryptography\",\n  \"main\": \"lib/elliptic.js\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint lib test\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:indutny/elliptic\"\n  },\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"author\": \"Fedor Indutny <fedor@indutny.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"devDependencies\": {\n    \"brfs\": \"^2.0.2\",\n    \"coveralls\": \"^3.1.0\",\n    \"eslint\": \"^7.6.0\",\n    \"grunt\": \"^1.2.1\",\n    \"grunt-browserify\": \"^5.3.0\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"grunt-contrib-connect\": \"^3.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^5.0.0\",\n    \"grunt-mocha-istanbul\": \"^5.0.2\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^8.0.1\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.9\",\n    \"brorand\": \"^1.1.0\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.1\",\n    \"inherits\": \"^2.0.4\",\n    \"minimalistic-assert\": \"^1.0.1\",\n    \"minimalistic-crypto-utils\": \"^1.0.1\"\n  }\n}\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n", "'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n", "'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n", "'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n", "var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n", "module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n", "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n", "'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "export const version = \"logger/5.7.0\";\n", "\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n", "export const version = \"bytes/5.7.0\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n", "export const version = \"bignumber/5.7.0\";\n", "\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n", "export { BigNumber, BigNumberish } from \"./bignumber\";\nexport { formatFixed, FixedFormat, FixedNumber, parseFixed } from \"./fixednumber\";\n\n// Internal methods used by address\nexport { _base16To36, _base36To16 } from \"./bignumber\";\n", "export const version = \"properties/5.7.0\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n", "export const version = \"abi/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n", "\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n", "/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n", "\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n", "export const version = \"rlp/5.7.0\";\n", "\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n", "export const version = \"address/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n", "\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n", "export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n", "import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n", "export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n", "// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n", "\"use strict\";\n\nexport { AddressZero } from \"./addresses\";\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256\n} from \"./bignumbers\";\nexport { HashZero } from \"./hashes\";\nexport { EtherSymbol } from \"./strings\";\n\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n", "export const version = \"strings/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n", "\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n", "\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n", "\"use strict\";\n\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, Utf8ErrorFunc, Utf8ErrorFuncs, Utf8ErrorReason } from \"./utf8\";\n\nexport {\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n\n    Utf8ErrorFunc,\n    Utf8ErrorFuncs,\n    Utf8ErrorReason,\n\n    UnicodeNormalizationForm,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    nameprep\n}\n", "\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n", "\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n", "import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n", "export const version = \"hash/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n", "\"use strict\";\n\nexport { decode, encode } from \"./base64\";\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n", "import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n", "import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n", "import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n", "\"use strict\";\n\nimport { id } from \"./id\";\nimport { dnsEncode, isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\n\nimport { ensNormalize } from \"./namehash\";\n\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\n\nexport {\n    id,\n\n    dnsEncode,\n    namehash,\n    isValidName,\n\n    ensNormalize,\n\n    messagePrefix,\n    hashMessage,\n\n    _TypedDataEncoder,\n}\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let message = \"\";\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${ JSON.stringify(errorArgs[0]) }`;\n                    } else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${ errorArgs[0] }`;\n                    }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) { }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment | string, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = BigNumber.from(value).toHexString();\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = (<EventFragment>eventFragment).inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n", "\"use strict\";\n\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, JsonFragmentType, ParamType } from \"./fragments\";\nimport { AbiCoder, CoerceFunc, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Indexed, Interface, LogDescription, Result, TransactionDescription } from \"./interface\";\n\nexport {\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    Fragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    AbiCoder,\n    defaultAbiCoder,\n\n    Interface,\n    Indexed,\n\n    /////////////////////////\n    // Types\n\n    CoerceFunc,\n    JsonFragment,\n    JsonFragmentType,\n\n    Result,\n    checkResultErrors,\n\n    LogDescription,\n    TransactionDescription\n};\n", "export const version = \"abstract-provider/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n", "export const version = \"abstract-signer/5.7.0\";\n", "\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n", "import _ec from \"elliptic\";\nimport EC = _ec.ec;\n\nexport { EC }\n", "export const version = \"signing-key/5.7.0\";\n", "\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n", "export const version = \"transactions/5.7.0\";\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n", "export const version = \"contracts/5.7.0\";\n", "\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n", "/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n", "export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n", "export const version = \"sha2/5.7.0\";\n", "\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n", "import { computeHmac, ripemd160, sha256, sha512 } from \"./sha2\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nexport {\n    computeHmac,\n\n    ripemd160,\n\n    sha256,\n    sha512,\n\n    SupportedAlgorithm\n}\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n", "\nexport { pbkdf2 } from \"./pbkdf2\";\n", "export const version = \"wordlists/5.7.0\";\n", "\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n", "\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\nconst words = \"AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk\";\n\nlet wordlist: Array<string> = null;\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangCz extends Wordlist {\n    constructor() {\n        super(\"cz\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langCz = new LangCz();\nWordlist.register(langCz);\n\nexport { langCz };\n\n", "\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n", "\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { logger, Wordlist } from \"./wordlist\";\n\n\nconst words = \"A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo\";\n\nconst lookup: { [word: string]: number } = {};\nlet wordlist: Array<string> = null;\n\nfunction dropDiacritic(word: string): string {\n    logger.checkNormalize();\n    return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), (c: number) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\n\nfunction expand(word: string): string {\n    const output: Array<number> = [];\n    Array.prototype.forEach.call(toUtf8Bytes(word), (c: number) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n        // n-tilde\n        } else if (c === 126) {\n            output.push(110);\n            output.push(204);\n            output.push(131);\n        } else {\n            output.push(c);\n        }\n    });\n\n    return toUtf8String(output);\n}\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand(w));\n    wordlist.forEach((word, index) => {\n        lookup[dropDiacritic(word)] = index;\n    });\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for es (Spanish) FAILED\");\n    }\n}\n\nclass LangEs extends Wordlist {\n    constructor() {\n        super(\"es\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return lookup[dropDiacritic(word)];\n    }\n}\n\nconst langEs = new LangEs();\nWordlist.register(langEs);\n\nexport { langEs };\n", "\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { logger, Wordlist } from \"./wordlist\";\n\n\nconst words = \"\";\n\nlet wordlist: Array<string> = null;\nconst lookup: { [word: string]: number } = { }\n\nfunction dropDiacritic(word: string): string {\n    logger.checkNormalize();\n    return toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize(\"NFD\").toLowerCase()), (c: number) => {\n        return ((c >= 65 && c <= 90) || (c >= 97 && c <= 123));\n    }));\n}\n\nfunction expand(word: string): string {\n    const output: Array<number> = [];\n\n    Array.prototype.forEach.call(toUtf8Bytes(word), (c: number) => {\n        // Acute accent\n        if (c === 47) {\n            output.push(204);\n            output.push(129);\n\n        // Grave accent\n        } else if (c === 45) {\n            output.push(204);\n            output.push(128);\n\n        } else {\n            output.push(c);\n        }\n    });\n\n    return toUtf8String(output);\n}\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \").map((w) => expand(w));\n    wordlist.forEach((word, index) => {\n        lookup[dropDiacritic(word)] = index;\n    });\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for fr (French) FAILED\");\n    }\n}\n\nclass LangFr extends Wordlist {\n    constructor() {\n        super(\"fr\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return lookup[dropDiacritic(word)];\n    }\n}\n\nconst langFr = new LangFr();\nWordlist.register(langFr);\n\nexport { langFr };\n", "\"use strict\";\n\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { logger, Wordlist } from \"./wordlist\";\n\n\nconst data = [\n\n    // 4-kana words\n    \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n\n    // 5-kana words\n    \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n\n    // 6-kana words\n    \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n\n    // 7-kana words\n    \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n\n    // 8-kana words\n    \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n\n    // 9-kana words\n    \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n\n    // 10-kana words\n    \"IJBEJqXZJ\"\n];\n\n// Maps each character into its kana value (the index)\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\"\n\nlet wordlist: Array<string> = null;\n\nfunction hex(word: string) {\n    return hexlify(toUtf8Bytes(word));\n}\n\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\"\n\nfunction loadWords(lang: Wordlist) {\n    if (wordlist !== null) { return; }\n\n    wordlist = [];\n\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    const transform: { [key: string]: string | boolean } = {};\n\n    // Delete the diacritic marks\n    transform[toUtf8String([227, 130, 154])] = false;\n    transform[toUtf8String([227, 130, 153])] = false;\n\n    // Some simple transforms that sort out most of the order\n    transform[toUtf8String([227, 130, 133])] = toUtf8String([227, 130, 134]);\n    transform[toUtf8String([227, 129, 163])] = toUtf8String([227, 129, 164]);\n    transform[toUtf8String([227, 130, 131])] = toUtf8String([227, 130, 132]);\n    transform[toUtf8String([227, 130, 135])] = toUtf8String([227, 130, 136]);\n\n\n    // Normalize words using the transform\n    function normalize(word: string) {\n        let result = \"\";\n        for (let i = 0; i < word.length; i++) {\n            let kana = word[i];\n            const target = transform[kana];\n            if (target === false) { continue; }\n            if (target) { kana = <string>target; }\n            result += kana;\n        }\n        return result;\n    }\n\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a: string, b: string) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) { return -1; }\n        if (a > b) { return 1; }\n        return 0;\n    }\n\n    // Load all the words\n    for (let length = 3; length <= 9; length++) {\n        const d = data[length - 3];\n        for (let offset = 0; offset < d.length; offset += length) {\n            const word = [];\n            for (let i = 0; i < length; i++) {\n                 const k = mapping.indexOf(d[offset + i]);\n                 word.push(227);\n                 word.push((k & 0x40) ? 130: 129);\n                 word.push((k & 0x3f) + 128);\n            }\n            wordlist.push(toUtf8String(word));\n        }\n    }\n    wordlist.sort(sortJapanese);\n\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n\n    // This should ignore \"if\", but that doesn't work here??\n    /* istanbul ignore next */\n    if (hex(wordlist[442]) === KiYoKu && hex(wordlist[443]) === KyoKu) {\n        const tmp = wordlist[442];\n        wordlist[442] = wordlist[443];\n        wordlist[443] = tmp;\n    }\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n    }\n}\n\nclass LangJa extends Wordlist {\n    constructor() {\n        super(\"ja\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n\n    split(mnemonic: string): Array<string> {\n        logger.checkNormalize();\n        return mnemonic.split(/(?:\\u3000| )+/g);\n    }\n\n    join(words: Array<string>): string {\n        return words.join(\"\\u3000\");\n    }\n}\n\nconst langJa = new LangJa();\nWordlist.register(langJa);\n\nexport { langJa };\n\n", "\"use strict\";\n\nimport { toUtf8String } from \"@ethersproject/strings\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst data = [\n    \"OYAa\",\n    \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@HgLnrHgMT8HgMX8HgMboHgOnrHgQToHgRg3HgoHgHgrCbHgrFnHgrLVHgvAcHgvAfHnAloHnCTrHnCnvHnGTrHnGZ8HnGnvHnJT8HnLf8HnLkvHnMg8HnRTrITvFUITvFnJTAXrJTCV8JTFT3JTFT8JTFn4JTGgvJTHT8JTJT8JTJXvJTJl3JTJnvJTLX4JTLf8JTLhvJTMT8JTMXrJTMnrJTObrJTQT8JTSlvJT8DUJT8FkJT8MTJT8OXJT8OgJT8QUJT8RfJUHZoJXFT4JXFlrJXGZ8JXGnrJXLV8JXLgvJXMXoJXMX3JXNboJXPlvJXoJTJXoLkJXrAXJXrHUJXrJgJXvJTJXvOnJX4KnJYAl3JYJT8JYLhvJYQToJYrQXJY6NUJbAl3JbCZrJbDloJbGT8JbGgrJbJXvJbJboJbLf8JbLhrJbLl3JbMnvJbRg8JbSZ8JboDbJbrCZJbrSUJb3KnJb8LnJfRn8JgAXrJgCZrJgDTrJgGZrJgGZ8JgHToJgJT8JgJXoJgJgvJgLX4JgLZ3JgLZ8JgLn4JgMgrJgMn4JgOgvJgPX6JgRnvJgSToJgoCZJgoJbJgoMYJgrJXJgrJgJgrLjJg6MTJlCn3JlGgvJlJl8Jl4AnJl8FnJl8HgJnAToJnATrJnAbvJnDUoJnGnrJnJXrJnJXvJnLhvJnLnrJnLnvJnMToJnMT8JnMXvJnMX3JnMg8JnMlrJnMn4JnOX8JnST4JnSX3JnoAgJnoAnJnoJTJnoObJnrAbJnrAkJnrHnJnrJTJnrJYJnrOYJnrScJnvCUJnvFaJnvJgJnvJnJnvOYJnvQUJnvRUJn3FnJn3JTKnFl3KnLT6LTDlvLTMnoLTOn3LTRl3LTSb4LTSlrLToAnLToJgLTrAULTrAcLTrCULTrHgLTrMgLT3JnLULnrLUMX8LUoJgLVATrLVDTrLVLb8LVoJgLV8MgLV8RTLXDg3LXFlrLXrCnLXrLXLX3GTLX4GgLX4OYLZAXrLZAcrLZAgrLZAhrLZDXyLZDlrLZFbrLZFl3LZJX6LZJX8LZLc8LZLnrLZSU8LZoJTLZoJnLZrAgLZrAnLZrJYLZrLULZrMgLZrSkLZvAnLZvGULZvJeLZvOTLZ3FZLZ4JXLZ8STLZ8ScLaAT3LaAl3LaHT8LaJTrLaJT8LaJXrLaJgvLaJl4LaLVoLaMXrLaMXvLaMX8LbClvLbFToLbHlrLbJn4LbLZ3LbLhvLbMXrLbMnoLbvSULcLnrLc8HnLc8MTLdrMnLeAgoLeOgvLeOn3LfAl3LfLnvLfMl3LfOX8Lf8AnLf8JXLf8LXLgJTrLgJXrLgJl8LgMX8LgRZrLhCToLhrAbLhrFULhrJXLhvJYLjHTrLjHX4LjJX8LjLhrLjSX3LjSZ4LkFX4LkGZ8LkGgvLkJTrLkMXoLkSToLkSU8LkSZ8LkoOYLl3FfLl3MgLmAZrLmCbrLmGgrLmHboLmJnoLmJn3LmLfoLmLhrLmSToLnAX6LnAb6LnCZ3LnCb3LnDTvLnDb8LnFl3LnGnrLnHZvLnHgvLnITvLnJT8LnJX8LnJlvLnLf8LnLg6LnLhvLnLnoLnMXrLnMg8LnQlvLnSbrLnrAgLnrAnLnrDbLnrFkLnrJdLnrMULnrOYLnrSTLnvAnLnvDULnvHgLnvOYLnvOnLn3GgLn4DULn4JTLn4JnMTAZoMTAloMTDb8MTFT8MTJnoMTJnrMTLZrMTLhrMTLkvMTMX8MTRTrMToATMTrDnMTrOnMT3JnMT4MnMT8FUMT8FaMT8FlMT8GTMT8GbMT8GnMT8HnMT8JTMT8JbMT8OTMUCl8MUJTrMUJU8MUMX8MURTrMUSToMXAX6MXAb6MXCZoMXFXrMXHXrMXLgvMXOgoMXrAUMXrAnMXrHgMXrJYMXrJnMXrMTMXrMgMXrOYMXrSZMXrSgMXvDUMXvOTMX3JgMX3OTMX4JnMX8DbMX8FnMX8HbMX8HgMX8HnMX8LbMX8MnMX8OnMYAb8MYGboMYHTvMYHX4MYLTrMYLnvMYMToMYOgvMYRg3MYSTrMbAToMbAXrMbAl3MbAn8MbGZ8MbJT8MbJXrMbMXvMbMX8MbMnoMbrMUMb8AfMb8FbMb8FkMcJXoMeLnrMgFl3MgGTvMgGXoMgGgrMgGnrMgHT8MgHZrMgJnoMgLnrMgLnvMgMT8MgQUoMgrHnMgvAnMg8HgMg8JYMg8LfMloJnMl8ATMl8AXMl8JYMnAToMnAT4MnAZ8MnAl3MnAl4MnCl8MnHT8MnHg8MnJnoMnLZoMnLhrMnMXoMnMX3MnMnrMnOgvMnrFbMnrFfMnrFnMnrNTMnvJXNTMl8OTCT3OTFV8OTFn3OTHZvOTJXrOTOl3OT3ATOT3JUOT3LZOT3LeOT3MbOT8ATOT8AbOT8AgOT8MbOUCXvOUMX3OXHXvOXLl3OXrMUOXvDbOX6NUOX8JbOYFZoOYLbrOYLkoOYMg8OYSX3ObHTrObHT4ObJgrObLhrObMX3ObOX8Ob8FnOeAlrOeJT8OeJXrOeJnrOeLToOeMb8OgJXoOgLXoOgMnrOgOXrOgOloOgoAgOgoJbOgoMYOgoSTOg8AbOjLX4OjMnoOjSV8OnLVoOnrAgOn3DUPXQlrPXvFXPbvFTPdAT3PlFn3PnvFbQTLn4QToAgQToMTQULV8QURg8QUoJnQXCXvQbFbrQb8AaQb8AcQb8FbQb8MYQb8ScQeAlrQeLhrQjAn3QlFXoQloJgQloSnRTLnvRTrGURTrJTRUJZrRUoJlRUrQnRZrLmRZrMnRZrSnRZ8ATRZ8JbRZ8ScRbMT8RbST3RfGZrRfMX8RfMgrRfSZrRnAbrRnGT8RnvJgRnvLfRnvMTRn8AaSTClvSTJgrSTOXrSTRg3STRnvSToAcSToAfSToAnSToHnSToLjSToMTSTrAaSTrEUST3BYST8AgST8LmSUAZvSUAgrSUDT4SUDT8SUGgvSUJXoSUJXvSULTrSU8JTSU8LjSV8AnSV8JgSXFToSXLf8SYvAnSZrDUSZrMUSZrMnSZ8HgSZ8JTSZ8JgSZ8MYSZ8QUSaQUoSbCT3SbHToSbQYvSbSl4SboJnSbvFbSb8HbSb8JgSb8OTScGZrScHgrScJTvScMT8ScSToScoHbScrMTScvAnSeAZrSeAcrSeHboSeJUoSeLhrSeMT8SeMXrSe6JgSgHTrSkJnoSkLnvSk8CUSlFl3SlrSnSl8GnSmAboSmGT8SmJU8\",\n    \"ATLnDlATrAZoATrJX4ATrMT8ATrMX4ATrRTrATvDl8ATvJUoATvMl8AT3AToAT3MX8AT8CT3AT8DT8AT8HZrAT8HgoAUAgFnAUCTFnAXoMX8AXrAT8AXrGgvAXrJXvAXrOgoAXvLl3AZvAgoAZvFbrAZvJXoAZvJl8AZvJn3AZvMX8AZvSbrAZ8FZoAZ8LZ8AZ8MU8AZ8OTvAZ8SV8AZ8SX3AbAgFZAboJnoAbvGboAb8ATrAb8AZoAb8AgrAb8Al4Ab8Db8Ab8JnoAb8LX4Ab8LZrAb8LhrAb8MT8Ab8OUoAb8Qb8Ab8ST8AcrAUoAcrAc8AcrCZ3AcrFT3AcrFZrAcrJl4AcrJn3AcrMX3AcrOTvAc8AZ8Ac8MT8AfAcJXAgoFn4AgoGgvAgoGnrAgoLc8AgoMXoAgrLnrAkrSZ8AlFXCTAloHboAlrHbrAlrLhrAlrLkoAl3CZrAl3LUoAl3LZrAnrAl4AnrMT8An3HT4BT3IToBX4MnvBb!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n    \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n    \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n    \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n    \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n    \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n]\n\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\"\n\nfunction getHangul(code: number): string {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    } else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n\n    return toUtf8String([ 225, (code >> 6) + 132, (code & 0x3f) + 128]);\n}\n\nlet wordlist: Array<string> = null;\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n\n    wordlist = [];\n\n    data.forEach((data, length) => {\n        length += 4;\n        for (let i = 0; i < data.length; i += length) {\n            let word = \"\";\n            for (let j = 0; j < length; j++) {\n                word += getHangul(codes.indexOf(data[i + j]));\n            }\n            wordlist.push(word)\n        }\n    });\n\n    wordlist.sort();\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n    }\n}\n\n\nclass LangKo extends Wordlist {\n    constructor() {\n        super(\"ko\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langKo = new LangKo();\nWordlist.register(langKo);\n\nexport { langKo }\n", "\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\nconst words = \"AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa\";\n\nlet wordlist: Array<string> = null;\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for it (Italian) FAILED\");\n    }\n}\n\nclass LangIt extends Wordlist {\n    constructor() {\n        super(\"it\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langIt = new LangIt();\nWordlist.register(langIt);\n\nexport { langIt }\n", "\"use strict\";\n\nimport { toUtf8String } from \"@ethersproject/strings\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\n\n// @TODO: Load lazily\n\nconst wordlist: { [key: string]: Array<string> } = {\n    zh_cn: null,\n    zh_tw: null\n}\n\nconst Checks: { [key: string]: string } = {\n    zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n    zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n}\n\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\"\n\nfunction loadWords(lang: Wordlist) {\n    if (wordlist[lang.locale] !== null) { return; }\n\n    wordlist[lang.locale] = [];\n\n    let deltaOffset = 0;\n    for (let i = 0; i < 2048; i++) {\n        const s = style.indexOf(data[i * 3]);\n        const bytes = [\n            228 + (s >> 2),\n            128 + codes.indexOf(data[i * 3 + 1]),\n            128 + codes.indexOf(data[i * 3 + 2]),\n        ];\n\n        if (lang.locale === \"zh_tw\") {\n            const common = s % 4;\n            for (let i = common; i < 3; i++) {\n                bytes[i] = codes.indexOf(deltaData[deltaOffset++]) + ((i == 0) ? 228: 128);\n            }\n        }\n\n        wordlist[lang.locale].push(toUtf8String(bytes));\n    }\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== Checks[lang.locale]) {\n        wordlist[lang.locale] = null;\n        throw new Error(\"BIP39 Wordlist for \" + lang.locale + \" (Chinese) FAILED\");\n    }\n}\n\nclass LangZh extends Wordlist {\n    constructor(country: string) {\n        super(\"zh_\" + country);\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[this.locale][index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist[this.locale].indexOf(word);\n    }\n\n    split(mnemonic: string): Array<string> {\n        mnemonic = mnemonic.replace(/(?:\\u3000| )+/g, \"\");\n        return mnemonic.split(\"\");\n    }\n}\n\nconst langZhCn = new LangZh(\"cn\");\nWordlist.register(langZhCn);\nWordlist.register(langZhCn, \"zh\");\n\nconst langZhTw = new LangZh(\"tw\");\nWordlist.register(langZhTw);\n\nexport { langZhCn, langZhTw };\n", "import { Wordlist } from \"./wordlist\";\n\nimport { langCz as cz } from \"./lang-cz\";\nimport { langEn as en } from \"./lang-en\";\nimport { langEs as es } from \"./lang-es\";\nimport { langFr as fr } from \"./lang-fr\";\nimport { langJa as ja } from \"./lang-ja\";\nimport { langKo as ko } from \"./lang-ko\";\nimport { langIt as it } from \"./lang-it\";\nimport { langZhCn as zh_cn, langZhTw as zh_tw } from \"./lang-zh\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n    cz: cz,\n    en: en,\n    es: es,\n    fr: fr,\n    it: it,\n    ja: ja,\n    ko: ko,\n    zh: zh_cn,\n    zh_cn: zh_cn,\n    zh_tw: zh_tw\n};\n\n\n", "\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\nimport { logger, Wordlist } from \"./wordlist\";\n\nimport { wordlists } from \"./wordlists\";\n\nexport {\n    logger,\n    Wordlist,\n    wordlists\n}\n", "export const version = \"hdnode/5.7.0\";\n", "\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n", "export const version = \"random/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n", "\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n", "\"use strict\";\n\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n", "\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n", "export const version = \"json-wallets/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n", "\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n", "\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n", "\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n", "\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n", "export const version = \"wallet/5.7.0\";\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const signature = this._signingKey().signDigest(keccak256(serialize(<UnsignedTransaction>tx)));\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n", "export const version = \"networks/5.7.1\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n", "export const version = \"web/5.7.1\";\n", "\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n", "\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n", "'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n", "export const version = \"providers/5.7.2\";\n", "\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n", "\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n", "\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n", "\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n", "\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n", "\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n", "\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n", "\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n", "\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n", "\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n", "\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n", "\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n", "/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n", "\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n", "\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n", "\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n", "export const version = \"solidity/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n", "export const version = \"units/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n", "\"use strict\";\n\nimport { AbiCoder, checkResultErrors, ConstructorFragment, defaultAbiCoder, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, Result, TransactionDescription }from \"@ethersproject/abi\";\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\nimport * as base64 from \"@ethersproject/base64\";\nimport { Base58 as base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder, dnsEncode, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\nimport { defaultPath, entropyToMnemonic, getAccountPath, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction, TransactionTypes } from \"@ethersproject/transactions\";\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\n\n////////////////////////\n// Enums\n\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\nimport { UnsignedTransaction } from \"@ethersproject/transactions\";\n\n////////////////////////\n// Types and Interfaces\n\nimport { CoerceFunc } from \"@ethersproject/abi\";\nimport { Bytes, BytesLike, Hexable } from \"@ethersproject/bytes\"\nimport { Mnemonic } from \"@ethersproject/hdnode\";\nimport { EncryptOptions, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { Deferrable } from \"@ethersproject/properties\";\nimport { Utf8ErrorFunc } from \"@ethersproject/strings\";\nimport { AccessList, AccessListish } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, FetchJsonResponse, OnceBlockable, OncePollable, PollOptions } from \"@ethersproject/web\";\n\n////////////////////////\n// Exports\n\nexport {\n    AbiCoder,\n    defaultAbiCoder,\n\n    Fragment,\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    checkResultErrors,\n    Result,\n\n    Logger,\n\n    RLP,\n\n    _fetchData,\n    fetchJson,\n    poll,\n\n    checkProperties,\n    deepCopy,\n    defineReadOnly,\n    getStatic,\n    resolveProperties,\n    shallowCopy,\n\n    arrayify,\n\n    concat,\n    stripZeros,\n    zeroPad,\n\n    isBytes,\n    isBytesLike,\n\n    defaultPath,\n    HDNode,\n    SigningKey,\n\n    Interface,\n\n    LogDescription,\n    TransactionDescription,\n\n    base58,\n    base64,\n\n    hexlify,\n    isHexString,\n    hexConcat,\n    hexStripZeros,\n    hexValue,\n    hexZeroPad,\n    hexDataLength,\n    hexDataSlice,\n\n    nameprep,\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n    Utf8ErrorFuncs,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    dnsEncode,\n    hashMessage,\n    namehash,\n    isValidName,\n    id,\n\n    _TypedDataEncoder,\n\n    getAddress,\n    getIcapAddress,\n    getContractAddress,\n    getCreate2Address,\n    isAddress,\n\n    formatEther,\n    parseEther,\n\n    formatUnits,\n    parseUnits,\n\n    commify,\n\n    computeHmac,\n    keccak256,\n    ripemd160,\n    sha256,\n    sha512,\n\n    randomBytes,\n    shuffled,\n\n    solidityPack,\n    solidityKeccak256,\n    soliditySha256,\n\n    splitSignature,\n    joinSignature,\n\n    accessListify,\n    parseTransaction,\n    serializeTransaction,\n    TransactionTypes,\n\n    getJsonWalletAddress,\n\n    computeAddress,\n    recoverAddress,\n\n    computePublicKey,\n    recoverPublicKey,\n\n    verifyMessage,\n    verifyTypedData,\n\n    getAccountPath,\n    mnemonicToEntropy,\n    entropyToMnemonic,\n    isValidMnemonic,\n    mnemonicToSeed,\n\n\n    ////////////////////////\n    // Enums\n\n    SupportedAlgorithm,\n\n    UnicodeNormalizationForm,\n    Utf8ErrorReason,\n\n    ////////////////////////\n    // Types\n\n    Bytes,\n    BytesLike,\n    Hexable,\n\n    AccessList,\n    AccessListish,\n    UnsignedTransaction,\n\n    CoerceFunc,\n\n    Indexed,\n\n    Mnemonic,\n\n    Deferrable,\n\n    Utf8ErrorFunc,\n\n    ConnectionInfo,\n    OnceBlockable,\n    OncePollable,\n    PollOptions,\n    FetchJsonResponse,\n\n    EncryptOptions,\n    ProgressCallback\n}\n\n", "export const version = \"ethers/5.7.2\";\n", "\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n", "\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst Buffer = require('buffer/').Buffer;\nconst EC = require('elliptic').ec;\nconst ethers = require('ethers');\nconst {HaloLogicError} = require(\"./exceptions\");\nconst BN = require('bn.js').BN;\n\nconst ec = new EC('secp256k1');\n\nfunction hex2arr(hexString) {\n    return new Uint8Array(\n        hexString.match(/.{1,2}/g).map(\n            byte => parseInt(byte, 16)\n        )\n    );\n}\n\nfunction arr2hex(buffer) {\n    return [...new Uint8Array(buffer)]\n        .map(x => x.toString(16).padStart(2, '0'))\n        .join('');\n}\n\nfunction parsePublicKeys(buffer) {\n    let buf;\n\n    if (typeof buffer === \"string\") {\n        buf = Buffer.from(buffer, 'hex');\n    } else {\n        buf = Buffer.from(buffer);\n    }\n\n    let out = {};\n    let keyNo = 1;\n\n    while (true) {\n        let keyLength = buf[0];\n\n        if (typeof keyLength === \"undefined\" || keyLength === 0) {\n            break;\n        }\n\n        let key = buf.slice(1, 1 + keyLength);\n        out[keyNo] = key.toString('hex');\n        buf = buf.slice(1 + keyLength);\n        keyNo++;\n    }\n\n    return out;\n}\n\nfunction parseSig(res) {\n    if (res[0] !== 0x30 || res[2] !== 0x02) {\n        throw new HaloLogicError(\"Unable to parse signature, unexpected header (1).\");\n    }\n\n    let rLen = res[3];\n\n    if (res[rLen + 4] !== 0x02) {\n        throw new HaloLogicError(\"Unable to parse signature, unexpected header (2).\");\n    }\n\n    let sLen = res[rLen + 5];\n\n    if (res.length !== rLen + 4 + 2 + sLen) {\n        throw new HaloLogicError(\"Unable to parse signature, unexpected length.\");\n    }\n\n    let r = res.slice(4, rLen + 4);\n    let s = res.slice(rLen + 4 + 2, rLen + 4 + 2 + sLen);\n    let rn = BigInt('0x' + r.toString('hex'));\n    let sn = BigInt('0x' + s.toString('hex'));\n\n    // SECP256k1 order constant\n    let curveOrder = 115792089237316195423570985008687907852837564279074904382605163141518161494337n;\n\n    if (sn > curveOrder / 2n) {\n        // malleable signature, not compliant with Ethereum's EIP-2\n        // we need to flip s value in the signature\n        sn = -sn + curveOrder;\n    }\n\n    return {\n        r: rn.toString(16).padStart(64, '0'),\n        s: sn.toString(16).padStart(64, '0')\n    };\n}\n\nfunction convertSignature(digest, signature, publicKey) {\n    signature = Buffer.from(signature, \"hex\");\n    let fixedSig = parseSig(signature);\n\n    let recoveryParam = null;\n\n    for (let i = 0; i < 2; i++) {\n        if (publicKey === ec.recoverPubKey(new BN(digest, 16), fixedSig, i).encode('hex')) {\n            recoveryParam = i;\n            break;\n        }\n    }\n\n    if (recoveryParam === null) {\n        throw new HaloLogicError(\"Failed to get recovery param.\");\n    }\n\n    let finalSig = '0x' + fixedSig.r\n        + fixedSig.s\n        + Buffer.from([27 + recoveryParam]).toString('hex');\n\n    let pkeyAddress = ethers.utils.computeAddress('0x' + publicKey);\n    let recoveredAddress = ethers.utils.recoverAddress('0x' + digest, finalSig);\n\n    if (pkeyAddress !== recoveredAddress) {\n        throw new HaloLogicError(\"Failed to correctly recover public key from the signature.\");\n    }\n\n    return {\n        \"raw\": {\n            ...fixedSig,\n            v: recoveryParam + 0x1b\n        },\n        \"der\": signature.toString('hex'),\n        \"ether\": finalSig.toString('hex')\n    };\n}\n\nfunction recoverPublicKey(digest, signature) {\n    let out = [];\n\n    signature = Buffer.from(signature, \"hex\");\n    let fixedSig = parseSig(signature);\n\n    for (let i = 0; i < 2; i++) {\n        out.push(ec.recoverPubKey(new BN(digest, 16), fixedSig, i).encode('hex'));\n    }\n\n    return out;\n}\n\nfunction mode(arr) {\n    return arr.sort((a, b) =>\n        arr.filter(v => v === a).length\n        - arr.filter(v => v === b).length\n    ).pop();\n}\n\nmodule.exports = {\n    hex2arr,\n    arr2hex,\n    parseSig,\n    convertSignature,\n    parsePublicKeys,\n    recoverPublicKey,\n    mode\n};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst {HaloTagError, HaloLogicError, NFCOperationError, NFCMethodNotSupported} = require(\"../halo/exceptions\");\nconst {ERROR_CODES} = require(\"../halo/errors\");\nconst {arr2hex} = require(\"../halo/utils\");\n\nconst FLAG_USE_NEW_MODE = 0x00;\n\nasync function execCredential(request, options) {\n    if (!window.isSecureContext) {\n        throw new NFCMethodNotSupported(\"This method can be invoked only in the secure context (HTTPS).\");\n    }\n\n    options = Object.assign({}, options) || {};\n\n    if (!options.debugCallback) {\n        options.debugCallback = () => null;\n    }\n\n    if (!options.statusCallback) {\n        options.statusCallback = () => null;\n    }\n\n    let challenge = new Uint8Array(32);\n    crypto.getRandomValues(challenge);\n\n    let encodedRequest;\n\n    if (!options.compatibleCallMode) {\n        encodedRequest = new Uint8Array([FLAG_USE_NEW_MODE, 0x00, ...request]);\n    } else {\n        encodedRequest = new Uint8Array([...request]);\n    }\n\n    let u2fReq = {\n        \"publicKey\": {\n            \"allowCredentials\": [\n                {\n                    \"id\": encodedRequest,\n                    \"transports\": ['nfc'],\n                    \"type\": \"public-key\"\n                }\n            ],\n            \"challenge\": challenge,\n            \"timeout\": 60000,\n            \"userVerification\": \"discouraged\"\n        }\n    };\n\n    let u2fRes;\n\n    options.statusCallback(\"init\", \"get-credential\");\n    options.debugCallback(\"get-credential\");\n\n    try {\n        u2fRes = await navigator.credentials.get(u2fReq);\n    } catch (e) {\n        if (e.name === \"NotSupportedError\") {\n            throw new NFCMethodNotSupported(\"The call threw NotSupportedError. Please update your browser.\");\n        } else {\n            throw new NFCOperationError(\"Failed to execute command. \" + e.name + \": \" + e.message);\n        }\n    }\n\n    options.statusCallback(\"scanned\", \"get-credential-done\");\n    options.debugCallback(\"get-credential-done\");\n\n    let res = u2fRes.response.signature;\n    let resBuf = new Uint8Array(res);\n\n    if (!options.compatibleCallMode) {\n        // the tag will respond with E101 (ERROR_UNKNOWN_CMD) if it doesn't understand new call protocol\n        // which is available only since C5 version\n        if (resBuf.length === 2 && resBuf[0] === 0xE1 && resBuf[1] === 0x01) {\n            throw new HaloLogicError(\"Command failed. The tag doesn't support new call protocol. Please set options.compatibleCallMode = true.\");\n        }\n\n        // 30 <remaining length> 04 00 04 <remaining length> <data ...>\n        if (resBuf[0] !== 0x30 || resBuf[2] !== 0x04) {\n            throw new HaloLogicError(\"Tag's response is not correctly structured.\");\n        }\n\n        let skipLength = resBuf[3];\n\n        // cut ASN.1 encoding to get pure response\n        resBuf = resBuf.slice(skipLength + 6);\n    }\n\n    if (resBuf.length === 2 && resBuf[0] === 0xE1) {\n        if (ERROR_CODES.hasOwnProperty(resBuf[1])) {\n            let err = ERROR_CODES[resBuf[1]];\n            throw new HaloTagError(err[0], err[1]);\n        } else {\n            throw new HaloTagError(\"Command returned an unknown error: \" + arr2hex(resBuf));\n        }\n    }\n\n    return await new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve({\n                \"result\": arr2hex(resBuf),\n                \"extra\": {}\n            });\n        }, 1);\n    });\n}\n\nmodule.exports = {\n    execCredential\n};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst {ERROR_CODES} = require(\"../halo/errors\");\nconst {\n    HaloTagError,\n    NFCMethodNotSupported,\n    NFCPermissionRequestDenied,\n    NFCAbortedError\n} = require(\"../halo/exceptions\");\nconst {arr2hex} = require(\"../halo/utils\");\n\nlet ndef = null;\nlet ctrl = null;\n\nasync function execWebNFC(request, options) {\n    if (!window.isSecureContext) {\n        throw new NFCMethodNotSupported(\"This method can be invoked only in the secure context (HTTPS).\");\n    }\n\n    options = Object.assign({}, options) || {};\n\n    if (!options.debugCallback) {\n        options.debugCallback = () => null;\n    }\n\n    if (!options.statusCallback) {\n        options.statusCallback = () => null;\n    }\n\n    options.debugCallback(\"nfc-init\");\n\n    if (!ndef) {\n        try {\n            ndef = new NDEFReader();\n        } catch (e) {\n            if (e instanceof ReferenceError) {\n                throw new NFCMethodNotSupported(\"Method is not supported by the browser or device.\");\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    let writeStatus = \"nfc-write\";\n\n    while (true) {\n        if (ctrl) {\n            ctrl.abort();\n        }\n\n        ctrl = new AbortController();\n\n        try {\n            options.debugCallback(writeStatus);\n\n            if (writeStatus === \"nfc-write\") {\n                options.statusCallback(\"init\", \"nfc-write\");\n            } else if (writeStatus === \"nfc-write-error\") {\n                options.statusCallback(\"retry\", \"nfc-write-error\");\n            }\n\n            await ndef.write({records: [{recordType: \"unknown\", data: request}]});\n            break;\n        } catch (e) {\n            if (e.name === \"NotAllowedError\") {\n                throw new NFCPermissionRequestDenied(\"NFC permission request denied by the user.\");\n            } else if (e.name === \"AbortError\") {\n                throw new NFCAbortedError(\"Operation restarted by the user.\");\n            } else {\n                writeStatus = \"nfc-write-error\";\n            }\n        }\n    }\n\n    await ndef.scan({signal: ctrl.signal});\n\n    options.debugCallback(\"nfc-read\");\n\n    return new Promise((resolve, reject) => {\n        ndef.onreadingerror = (event) => {\n            options.debugCallback(\"nfc-read-error\");\n            options.statusCallback(\"retry\", \"nfc-read-error\");\n        };\n\n        ndef.onreading = (event) => {\n            try {\n                let out = {};\n                let decoded = new TextDecoder(\"utf-8\").decode(event.message.records[0].data);\n                let url = new URL(decoded);\n\n                for (let k of url.searchParams.keys()) {\n                    out[k] = url.searchParams.get(k);\n                }\n\n                let resBuf = hex2arr(out.res);\n\n                if (resBuf[0] === 0xE1) {\n                    if (ERROR_CODES.hasOwnProperty(resBuf[1])) {\n                        let err = ERROR_CODES[resBuf[1]];\n                        ndef.onreading = () => null;\n                        ndef.onreadingerror = () => null;\n                        reject(new HaloTagError(err[0], err[1]));\n                    } else {\n                        ndef.onreading = () => null;\n                        ndef.onreadingerror = () => null;\n                        reject(new HaloTagError(\"Command returned an unknown error: \" + arr2hex(resBuf)));\n                    }\n\n                    return;\n                }\n\n                options.debugCallback(\"nfc-success\");\n                options.statusCallback(\"scanned\", \"nfc-success\");\n\n                ndef.onreading = () => null;\n                ndef.onreadingerror = () => null;\n\n                delete out['res'];\n\n                setTimeout(() => {\n                    resolve({\n                        result: arr2hex(resBuf),\n                        extra: out\n                    });\n                }, 1);\n            } catch (e) {\n                options.debugCallback(\"nfc-parse-error\");\n                options.statusCallback(\"retry\", \"nfc-parse-error\");\n            }\n        };\n    });\n}\n\nmodule.exports = {\n    execWebNFC\n};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst FLAGS = {\n    flagUseText:       [0, 0x01],\n    flagHidePk1:       [0, 0x02],\n    flagHidePk2:       [0, 0x04],\n    flagHidePk3:       [0, 0x08],\n    flagShowPk1Attest: [0, 0x10],\n    flagShowPk2Attest: [0, 0x20],\n    flagHideRNDSIG:    [0, 0x40],\n    flagHideCMDRES:    [0, 0x80],\n\n    flagShowPk3Attest: [1, 0x01],\n    flagShowLatch1Sig: [1, 0x02],\n    flagShowLatch2Sig: [1, 0x04],\n    flagLegacyStatic:  [1, 0x08]\n};\n\nmodule.exports = {FLAGS};\n", "/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst CMD_CODES = {\n    // user commands, can be executed through any interface\n    \"SHARED_CMD_SIGN\": 0x01,\n    \"SHARED_CMD_GET_PKEYS\": 0x02,\n    \"SHARED_CMD_GENERATE_3RD_KEY\": 0x03,\n    \"SHARED_CMD_GENERATE_3RD_KEY_CONT\": 0x09,\n    \"SHARED_CMD_GENERATE_3RD_KEY_FINALIZE\": 0x12,\n    \"SHARED_CMD_GET_ATTEST\": 0x04,\n    // reserved, do not use\n    \"SHARED_CMD_RESERVED_1\": 0x05,\n    \"SHARED_CMD_FETCH_SIGN\": 0x06,\n    \"SHARED_CMD_GET_FW_VERSION\": 0x07,\n    \"SHARED_CMD_SIGN_RANDOM\": 0x08,\n    \"SHARED_CMD_GET_ADDON_FW_VERSION\": 0x09,\n    \"SHARED_CMD_SIGN_CHALLENGE\": 0x11,\n\n    \"SHARED_CMD_SIGN_PWD\": 0xA1,\n    \"SHARED_CMD_FETCH_SIGN_PWD\": 0xA2,\n    \"SHARED_CMD_SET_PASSWORD\": 0xA3,\n    \"SHARED_CMD_UNSET_PASSWORD\": 0xA4,\n    // reserved, do not use\n    \"SHARED_CMD_RESERVED_2\": 0xCC,\n\n    \"SHARED_CMD_GET_LATCH\": 0xD1,\n    \"SHARED_CMD_LATCH_DATA\": 0xD3,\n    \"SHARED_CMD_SET_URL_SUBDOMAIN\": 0xD4,\n    \"SHARED_CMD_LOCK_URL_SUBDOMAIN\": 0xD5,\n    \"SHARED_CMD_GET_DATA_VERSION\": 0xD7,\n    \"SHARED_CMD_GET_URL_SUBDOMAIN\": 0xD6,\n    \"SHARED_CMD_SET_NDEF_MODE\": 0xD8,\n};\n\nmodule.exports = {CMD_CODES};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst Buffer = require('buffer/').Buffer;\nconst ethers = require('ethers');\nconst {HaloLogicError, HaloTagError} = require(\"./exceptions\");\nconst {convertSignature, mode, parseSig, parsePublicKeys} = require(\"./utils\");\nconst {FLAGS} = require(\"./flags\");\nconst {sha256} = require(\"js-sha256\");\nconst EC = require(\"elliptic\").ec;\nconst CMD = require('./cmdcodes').CMD_CODES;\n\nconst ec = new EC('secp256k1');\n\n/**\n * NOTE: Since LibHaLo supports multiple driver backends which differ in their implementation and behavior,\n * there are few things to consider when implementing a new command or modifying the existing code.\n *\n * Web-based drivers (webnfc, credential):\n * -> the command implementation may only call options.exec() once;\n *\n * React Native driver (nfc-manager) and PC/SC driver (pcsc):\n * -> there are no limitations on the number of calls to options.exec();\n *\n * The command could provide a different implementation for a given driver, but that should be\n * a last-resort solution. Optimally, the command implementation should be independent of the driver used,\n * if that's possible.\n */\n\nfunction extractPublicKeyWebNFC(keyNo, resp) {\n    let publicKey = null;\n    let pkKey = \"pk\" + keyNo;\n\n    if (resp.extra.hasOwnProperty(pkKey)) {\n        publicKey = Buffer.from(resp.extra[pkKey], \"hex\");\n    } else if (resp.extra.hasOwnProperty(\"static\")) {\n        let pkeys = parsePublicKeys(Buffer.from(resp.extra[\"static\"], \"hex\"));\n        publicKey = pkeys[pkKey];\n    }\n\n    return publicKey;\n}\n\nasync function cmdGetPkeys(options, args) {\n    let payload = Buffer.concat([\n        Buffer.from([CMD.SHARED_CMD_GET_PKEYS])\n    ]);\n\n    let resp = await options.exec(payload);\n    let res = Buffer.from(resp.result, \"hex\");\n\n    return {\"publicKeys\": parsePublicKeys(res)};\n}\n\nasync function cmdSign(options, args) {\n    let checks = [\n        args.hasOwnProperty(\"digest\") && typeof args.digest !== \"undefined\",\n        args.hasOwnProperty(\"message\") && typeof args.message !== \"undefined\",\n        args.hasOwnProperty(\"typedData\") && typeof args.typedData !== \"undefined\"\n    ];\n\n    let numDataArgs = checks.filter((x) => !!x).length;\n\n    if (numDataArgs !== 1) {\n        throw new HaloLogicError(\"One of the following arguments are required: digest, message, typedData.\");\n    }\n\n    let messageBuf = null;\n    let digestBuf = null;\n\n    if (args.hasOwnProperty(\"message\") && typeof args.message !== \"undefined\") {\n        if (args.format === \"text\") {\n            messageBuf = Buffer.from(args.message);\n        } else if (!args.format || args.format === \"hex\") {\n            messageBuf = Buffer.from(args.message, \"hex\");\n        } else {\n            throw new HaloLogicError(\"Invalid message format specified. Valid formats: text, hex.\");\n        }\n\n        digestBuf = Buffer.from(ethers.utils.hashMessage(messageBuf).slice(2), \"hex\");\n    } else if (args.hasOwnProperty(\"typedData\") && typeof args.typedData !== \"undefined\") {\n        let hashStr;\n\n        try {\n            hashStr = ethers.utils._TypedDataEncoder.hash(args.typedData.domain, args.typedData.types, args.typedData.value);\n        } catch (e) {\n            throw new HaloLogicError(\"Unable to encode typed data. Please check if the data provided conforms to the required schema.\");\n        }\n\n        digestBuf = Buffer.from(hashStr.slice(2), \"hex\");\n    } else if (args.hasOwnProperty(\"digest\") && typeof args.digest !== \"undefined\") {\n        digestBuf = Buffer.from(args.digest, \"hex\");\n    } else {\n        throw new HaloLogicError(\"Either args.digest, args.message or args.typedData is required.\");\n    }\n\n    let payload;\n\n    if (args.legacySignCommand || options.method === \"webnfc\") {\n        // the public key will be available through URL parameters\n        // we only need to sign the digest\n        payload = Buffer.concat([\n            Buffer.from([CMD.SHARED_CMD_SIGN, args.keyNo]),\n            digestBuf\n        ]);\n    } else {\n        // sign the digest and also fetch the public key\n        payload = Buffer.concat([\n            Buffer.from([CMD.SHARED_CMD_FETCH_SIGN, args.keyNo]),\n            digestBuf\n        ]);\n    }\n\n    let resp;\n\n    try {\n        resp = await options.exec(payload);\n    } catch (e) {\n        if (e instanceof HaloTagError) {\n            if (e.name === \"ERROR_CODE_UNKNOWN_CMD\") {\n                throw new HaloLogicError(\"The tag doesn't support the new signing command. Please set command.legacySignCommand = true.\");\n            }\n        }\n\n        throw e;\n    }\n\n    let sigBuf = Buffer.from(resp.result, \"hex\");\n    let sigLen = sigBuf[1] + 2;\n    let sig = sigBuf.slice(0, sigLen).toString('hex');\n    let publicKey = null;\n\n    if (!args.legacySignCommand && options.method !== \"webnfc\") {\n        if (sigBuf[sigLen] !== 0x04) {\n            throw new HaloLogicError(\"Assertion failed, expected public key first byte to be 0x04.\");\n        }\n\n        publicKey = sigBuf.slice(sigLen, sigLen + 65);\n    } else if (options.method === \"webnfc\") {\n        publicKey = extractPublicKeyWebNFC(args.keyNo, resp);\n    }\n\n    let inputObj = {\n        \"keyNo\": args.keyNo,\n        \"digest\": digestBuf.toString('hex'),\n    };\n\n    if (messageBuf !== null) {\n        inputObj.message = messageBuf.toString('hex');\n    } else if (args.typedData) {\n        inputObj.typedData = args.typedData;\n\n        inputObj.primaryType = ethers.utils._TypedDataEncoder.getPrimaryType(args.typedData.types);\n        inputObj.domainHash = ethers.utils._TypedDataEncoder.hashDomain(args.typedData.domain).slice(2);\n    }\n\n    if (publicKey) {\n        return {\n            \"input\": inputObj,\n            \"signature\": convertSignature(digestBuf.toString('hex'), sig.toString('hex'), publicKey.toString('hex')),\n            publicKey: publicKey.toString('hex')\n        };\n    } else {\n        return {\n            \"input\": inputObj,\n            \"signature\": {\n                \"der\": sig.toString('hex')\n            }\n        };\n    }\n}\n\nasync function cmdWriteLatch(options, args) {\n    let payload = Buffer.concat([\n        Buffer.from([CMD.SHARED_CMD_LATCH_DATA, args.latchNo]),\n        Buffer.from(args.data, \"hex\")\n    ]);\n\n    await options.exec(payload);\n    return {\"status\": \"ok\"};\n}\n\nasync function cmdSignRandom(options, args) {\n    let resp = await options.exec(Buffer.from([CMD.SHARED_CMD_SIGN_RANDOM, args.keyNo]));\n\n    let resBuf = Buffer.from(resp.result, 'hex');\n    let digest = resBuf.slice(0, 32);\n    let signature = resBuf.slice(32, 32 + resBuf[33] + 2);\n    let publicKey = resBuf.slice(32 + resBuf[33] + 2);\n\n    let counter = digest.readUInt32BE(0);\n\n    return {\n        \"counter\": counter,\n        \"digest\": digest.toString('hex'),\n        \"signature\": signature.toString('hex'),\n        \"publicKey\": publicKey.toString('hex')\n    };\n}\n\nasync function cmdSignChallenge(options, args) {\n    let challengeBuf = Buffer.from(args.challenge, \"hex\");\n    let resp = await options.exec(Buffer.from([CMD.SHARED_CMD_SIGN_CHALLENGE, args.keyNo, ...challengeBuf]));\n\n    let resBuf = Buffer.from(resp.result, 'hex');\n    let sigLen = 2 + resBuf[1];\n\n    let signature = resBuf.slice(0, sigLen);\n    let publicKey = resBuf.slice(sigLen);\n\n    return {\n        \"signature\": signature.toString('hex'),\n        \"publicKey\": publicKey.toString('hex')\n    };\n}\n\nasync function cmdCfgNDEF(options, args) {\n    if (args.flagHidePk1 && args.flagHidePk2) {\n        throw new HaloLogicError(\"It's not allowed to use both flagHidePk1 and flagHidePk2.\");\n    }\n\n    let flagBuf = Buffer.alloc(2);\n\n    Object.keys(args)\n        .filter((k) => k.startsWith('flag') && args[k])\n        .map((k) => FLAGS[k])\n        .forEach((v) => {\n            flagBuf[v[0]] |= v[1];\n        });\n\n    let payload = Buffer.concat([\n        Buffer.from([CMD.SHARED_CMD_SET_NDEF_MODE]),\n        flagBuf\n    ]);\n    await options.exec(payload);\n\n    return {\"status\": \"ok\"};\n}\n\nasync function cmdGenKey(options, args) {\n    if (!args.entropy) {\n        let payload = Buffer.concat([\n            Buffer.from([CMD.SHARED_CMD_GENERATE_3RD_KEY])\n        ]);\n        let resp = await options.exec(payload);\n        let res = Buffer.from(resp.result, \"hex\");\n\n        return {\"status\": \"ok\", \"publicKey\": res.toString('hex'), \"needsConfirm\": false};\n    } else {\n        let entropyBuf = Buffer.from(args.entropy, \"hex\");\n\n        if (entropyBuf.length !== 32) {\n            throw new HaloLogicError(\"The command.entropy should be exactly 32 bytes, hex encoded.\");\n        }\n\n        let payload = Buffer.concat([\n            Buffer.from([CMD.SHARED_CMD_GENERATE_3RD_KEY]),\n            entropyBuf\n        ]);\n\n        let resp;\n\n        try {\n            resp = await options.exec(payload);\n        } catch (e) {\n            if (e instanceof HaloTagError) {\n                if (e.name === \"ERROR_CODE_INVALID_LENGTH\") {\n                    throw new HaloLogicError(\"The hardened key generation algorithm is not supported with this tag version.\");\n                }\n            }\n\n            throw e;\n        }\n\n        let res = Buffer.from(resp.result, \"hex\");\n\n        if (res.length === 65) {\n            throw new HaloLogicError(\"The hardened key generation algorithm is not supported with this tag version.\");\n        }\n\n        let msg1 = Buffer.from(sha256(res.slice(0, 32)), 'hex');\n        let msg2 = Buffer.from(sha256(res.slice(32, 64)), 'hex');\n        let sig = res.slice(64);\n        let sig1Length = sig[1];\n        let sig1 = sig.slice(0, 2 + sig1Length);\n        let sig2 = sig.slice(2 + sig1Length);\n\n        let candidates = [];\n\n        for (let i = 0; i < 2; i++) {\n            candidates.push(ec.recoverPubKey(msg1, parseSig(sig1), i).encode('hex'));\n            candidates.push(ec.recoverPubKey(msg2, parseSig(sig2), i).encode('hex'));\n        }\n\n        let bestPk = Buffer.from(mode(candidates), 'hex');\n        return {\"status\": \"ok\", \"publicKey\": bestPk.toString('hex'), \"needsConfirm\": true};\n    }\n}\n\nasync function cmdGenKeyConfirm(options, args) {\n    let payload = Buffer.concat([\n        Buffer.from([CMD.SHARED_CMD_GENERATE_3RD_KEY_CONT]),\n        Buffer.from(args.publicKey, \"hex\")\n    ]);\n\n    await options.exec(payload);\n\n    return {\"status\": \"ok\"};\n}\n\nasync function cmdGenKeyFinalize(options, args) {\n    let payload = Buffer.concat([\n        Buffer.from([CMD.SHARED_CMD_GENERATE_3RD_KEY_FINALIZE])\n    ]);\n\n    await options.exec(payload);\n\n    return {\"status\": \"ok\"};\n}\n\nmodule.exports = {\n    cmdSign,\n    cmdSignRandom,\n    cmdWriteLatch,\n    cmdCfgNDEF,\n    cmdGenKey,\n    cmdGenKeyConfirm,\n    cmdGetPkeys,\n    cmdGenKeyFinalize,\n    cmdSignChallenge\n};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst {execCredential} = require(\"./credential\");\nconst {execWebNFC} = require(\"./webnfc\");\nconst {\n    NFCAbortedError,\n    NFCMethodNotSupported,\n    HaloLogicError,\n    HaloTagError\n} = require(\"../halo/exceptions\");\nconst {\n    cmdGetPkeys, cmdSign, cmdCfgNDEF, cmdWriteLatch, cmdSignRandom, cmdGenKey, cmdGenKeyConfirm, cmdGenKeyFinalize,\n    cmdSignChallenge\n} = require(\"../halo/commands\");\nconst {ERROR_CODES} = require(\"../halo/errors\");\n\nlet isCallRunning = null;\n\nfunction detectMethod() {\n    try {\n        new NDEFReader();\n    } catch (e) {\n        // WebNFC not supported\n        return \"credential\";\n    }\n\n    return \"webnfc\";\n}\n\nasync function execHaloCmd(command, options) {\n    command = Object.assign({}, command);\n\n    let commandName = command.name;\n    delete command['name'];\n\n    switch (commandName) {\n        case 'get_pkeys':\n            return await cmdGetPkeys(options, command);\n        case 'sign':\n            return await cmdSign(options, command);\n        case 'sign_random':\n            return await cmdSignRandom(options, command);\n        case 'sign_challenge':\n            return await cmdSignChallenge(options, command);\n        case 'write_latch':\n            return await cmdWriteLatch(options, command);\n        case 'cfg_ndef':\n            return await cmdCfgNDEF(options, command);\n        case 'gen_key':\n            return await cmdGenKey(options, command);\n        case 'gen_key_confirm':\n            return await cmdGenKeyConfirm(options, command);\n        case 'gen_key_finalize':\n            return await cmdGenKeyFinalize(options, command);\n        default:\n            throw new HaloLogicError(\"Unsupported command.name parameter specified.\");\n    }\n}\n\nfunction makeDefault(curValue, defaultValue) {\n    if (typeof curValue === \"undefined\") {\n        return defaultValue;\n    }\n\n    if (curValue === null) {\n        return defaultValue;\n    }\n\n    return curValue;\n}\n\nfunction checkErrors(res) {\n    if (res.length === 2 && res[0] === 0xE1) {\n        if (ERROR_CODES.hasOwnProperty(res[1])) {\n            let err = ERROR_CODES[res[1]];\n            throw new HaloTagError(err[0], \"Tag responded with error: [\" + err[0] + \"] \" + err[1]);\n        } else {\n            throw new HaloLogicError(\"Tag responded with unknown error: \" + res.toString('hex'));\n        }\n    }\n}\n\n/**\n * Execute the NFC command from the web browser.\n * @param command Command specification object.\n * @param options Additional options for the command executor.\n * @returns {Promise<*>} Command execution result.\n */\nasync function execHaloCmdWeb(command, options) {\n    if (options && !options.noDebounce && isCallRunning) {\n        throw new NFCAbortedError(\"The operation was debounced.\");\n    }\n\n    isCallRunning = true;\n\n    options = options ? Object.assign({}, options) : {};\n    options.method = makeDefault(options.method, detectMethod());\n    options.noDebounce = makeDefault(options.noDebounce, false);\n    options.compatibleCallMode = makeDefault(options.compatibleCallMode, true);\n\n    command = command ? Object.assign({}, command) : {};\n\n    try {\n        let cmdOpts = {};\n\n        if (options.method === \"credential\") {\n            cmdOpts = {\n                method: \"credential\",\n                exec: async (command) => await execCredential(command, {\n                    debugCallback: options.debugCallback,\n                    statusCallback: options.statusCallback,\n                    compatibleCallMode: options.compatibleCallMode\n                })\n            };\n        } else if (options.method === \"webnfc\") {\n            cmdOpts = {\n                method: \"webnfc\",\n                exec: async (command) => await execWebNFC(command, {\n                    debugCallback: options.debugCallback,\n                    statusCallback: options.statusCallback\n                })\n            };\n        } else {\n            throw new NFCMethodNotSupported(\"Unsupported options.method parameter specified.\");\n        }\n\n        return await execHaloCmd(command, cmdOpts);\n    } finally {\n        isCallRunning = false;\n    }\n}\n\nmodule.exports = {\n    execHaloCmdWeb,\n    execHaloCmd,\n    checkErrors\n};\n", "'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n", "'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n", "'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n", "'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n", "'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst Buffer = require('buffer/').Buffer;\nconst queryString = require('query-string');\nconst {HaloLogicError} = require(\"../halo/exceptions\");\n\nlet cachedResult = null;\n\nasync function readNDEF(transceive, options) {\n    options = options || {};\n\n    if (options.allowCache && cachedResult) {\n        return cachedResult;\n    }\n\n    let resSelect = await transceive(Buffer.from(\"00A4040007D276000085010100\", \"hex\"));\n\n    if (resSelect.compare(Buffer.from([0x90, 0x00])) !== 0) {\n        throw new HaloLogicError(\"Unable to read NDEF, failed to select NDEF application.\");\n    }\n\n    // assume that NDEF file is 0xE104\n    let resSelectFile = await transceive(Buffer.from(\"00A4000C02E10400\", \"hex\"));\n\n    if (resSelectFile.compare(Buffer.from([0x90, 0x00])) !== 0) {\n        throw new HaloLogicError(\"Unable to read NDEF, failed to select NDEF file.\");\n    }\n\n    let readCmdBuf = Buffer.from(\"00B0000002\", \"hex\");\n    let resReadLength = await transceive(readCmdBuf);\n\n    if (resReadLength.slice(-2).compare(Buffer.from([0x90, 0x00])) !== 0) {\n        throw new HaloLogicError(\"Unable to read NDEF, failed to read length bytes.\");\n    }\n\n    let ndefLen = resReadLength.readUInt16BE(0) + 2;\n    let tmpNdefLen = ndefLen;\n    let offset = 0;\n\n    let fullBuf = Buffer.alloc(0);\n\n    while (tmpNdefLen > 0) {\n        readCmdBuf.writeUInt16BE(offset, 2);\n        // ACR122U-A9 readers have a bug where they are returning 6F00 when Le is set to more than 0x3B\n        // sounds like a firmware bug, because it can't be reproduced with other kinds of readers\n        // (the same APDU is just working fine lol)\n        readCmdBuf[4] = 0x30;\n\n        let resReadNDEF = await transceive(readCmdBuf);\n\n        if (resReadNDEF.slice(-2).compare(Buffer.from([0x90, 0x00])) !== 0) {\n            throw new HaloLogicError(\"Unable to read NDEF, failed to read NDEF file.\");\n        }\n\n        fullBuf = Buffer.concat([fullBuf, resReadNDEF.slice(0, -2)]);\n        tmpNdefLen -= 0x30;\n        offset += 0x30;\n    }\n\n    fullBuf = fullBuf.slice(2, ndefLen);\n\n    // here we only implement a very small subset of NDEF to match with what is generated\n    // by HaLo tags\n\n    // URL record type\n    // (byte) 0xC1, (byte) 0x01, (byte) 0x00, (byte) 0x00 <len 2 bytes> 55 00\n    // TEXT record type (language = \"en\")\n    // (byte) 0xC1, (byte) 0x01, (byte) 0x00, (byte) 0x00 <len 2 bytes> 54 02 65 6E\n    if (fullBuf.slice(0, 4).compare(Buffer.from(\"C1010000\", \"hex\")) !== 0) {\n        throw new HaloLogicError(\"Failed to parse NDEF, unsupported NDEF header.\");\n    }\n\n    fullBuf = fullBuf.slice(4);\n    let lengthData = fullBuf.readUInt16BE(0);\n\n    if (fullBuf[2] !== 0x54 && fullBuf[2] !== 0x55) {\n        throw new HaloLogicError(\"Failed to parse NDEF, unsupported record type.\");\n    }\n\n    let skipLen = fullBuf[3];\n    fullBuf = fullBuf.slice(4 + skipLen, 4 + skipLen + lengthData);\n    let parsed = queryString.parseUrl(fullBuf.toString());\n\n    let out = {\n        url: parsed.url,\n        qs: {...parsed.query}\n    };\n\n    if (options.allowCache) {\n        cachedResult = out;\n    }\n\n    return out;\n}\n\nmodule.exports = {readNDEF};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst {checkErrors, execHaloCmd} = require(\"./common\");\nconst {HaloLogicError} = require(\"../halo/exceptions\");\nconst {readNDEF} = require(\"./read_ndef\");\nconst Buffer = require('buffer/').Buffer;\n\nasync function execCoreCommandRN(nfcManager, command) {\n    let selectCmd = [...Buffer.from(\"00A4040007481199130E9F0100\", \"hex\")];\n    let resSelect = Buffer.from(await nfcManager.isoDepHandler.transceive(selectCmd));\n\n    if (resSelect.compare(Buffer.from([0x90, 0x00])) !== 0) {\n        throw new HaloLogicError(\"Unable to initiate communication with the tag. Failed to select HaLo core.\");\n    }\n\n    const cmdBuf = Buffer.concat([\n        Buffer.from(\"B0510000\", \"hex\"),\n        Buffer.from([command.length]),\n        command,\n        Buffer.from(\"00\", \"hex\")\n    ]);\n\n    let res = Buffer.from(await nfcManager.isoDepHandler.transceive([...cmdBuf]));\n    checkErrors(res);\n\n    return {\n        result: res.toString('hex'),\n        extra: {}\n    };\n}\n\nasync function execHaloCmdRN(nfcManager, command, options) {\n    options = options ? Object.assign({}, options) : {};\n\n    if (command.name === \"read_ndef\") {\n        let wrappedTransceive = async (payload) => Buffer.from(await nfcManager.isoDepHandler.transceive([...payload]));\n        return await readNDEF(wrappedTransceive, {allowCache: true});\n    } else {\n        return await execHaloCmd(command, {\n            method: 'nfc-manager',\n            exec: async (command) => await execCoreCommandRN(nfcManager, command),\n        });\n    }\n}\n\nmodule.exports = {execHaloCmdRN};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst {readNDEF} = require(\"./read_ndef\");\nconst {HaloLogicError} = require(\"../halo/exceptions\");\nconst {execHaloCmd, checkErrors} = require(\"./common\");\n\nasync function selectCore(reader) {\n    let res = await reader.transmit(Buffer.from(\"00A4040007481199130E9F0100\", \"hex\"), 255);\n    let statusCheck = res.slice(-2).compare(Buffer.from([0x91, 0x00])) !== 0;\n\n    if (!statusCheck) {\n        throw new HaloLogicError(\"Unable to select HaLo core.\");\n    }\n}\n\nasync function transceive(reader, command, options) {\n    options = options || {};\n\n    let start = performance.now();\n    let res = await reader.transmit(command, 255);\n    let end = performance.now();\n\n    if (process.env.DEBUG_PCSC === \"1\") {\n        console.log('=> ' + command.toString('hex'));\n        console.log('<= [' + Math.round(end - start) + ' ms] ' + res.toString('hex'));\n    }\n\n    let check1 = res.slice(-2).compare(Buffer.from([0x90, 0x00])) !== 0;\n    let check2 = res.slice(-2).compare(Buffer.from([0x91, 0x00])) !== 0;\n\n    if (!options.noCheck) {\n        if (check1 && check2) {\n            throw new HaloLogicError(\"Command failed, cmd: \" + command.toString('hex') + \", response: \" + res.toString('hex'));\n        }\n\n        return res.slice(0, -2);\n    } else {\n        return res;\n    }\n}\n\nasync function getVersion(reader) {\n    let versionRes = await transceive(reader, Buffer.from(\"00510000010700\", \"hex\"), {noCheck: true});\n\n    if (versionRes.slice(-2).compare(Buffer.from([0x90, 0x00])) !== 0) {\n        // GET_FV_VERSION command not supported, fallback to NDEF\n        let wrappedTransceive = async (payload) => await transceive(reader, payload, {noCheck: true});\n        let url = await readNDEF(wrappedTransceive, {allowCache: true});\n\n        if (!url.qs.v) {\n            return '01.C1.000001.00000000';\n        } else if (url.qs.v.toLowerCase() === 'c2') {\n            return '01.C2.000002.00000000';\n        } else if (url.qs.v.toLowerCase() === 'c3') {\n            return '01.C3.000003.00000000';\n        } else {\n            return url.qs.v;\n        }\n    } else {\n        return versionRes.slice(0, -2).toString();\n    }\n}\n\nasync function getAddonVersion(reader) {\n    let addonVersionRes = await transceive(reader, Buffer.from(\"00510000011000\", \"hex\"), {noCheck: true});\n\n    if (addonVersionRes.slice(-2).compare(Buffer.from([0x90, 0x00])) !== 0) {\n        return null;\n    }\n\n    return addonVersionRes.slice(0, -2).toString();\n}\n\nasync function execCoreCommand(reader, command) {\n    const cmdBuf = Buffer.concat([\n        Buffer.from(\"B0510000\", \"hex\"),\n        Buffer.from([command.length]),\n        command,\n        Buffer.from(\"00\", \"hex\")\n    ]);\n\n    let res = await transceive(reader, cmdBuf);\n    checkErrors(res);\n\n    return {\n        result: res.toString('hex'),\n        extra: {}\n    };\n}\n\nfunction makeOptions(reader) {\n    return {\n        method: 'pcsc',\n        exec: async (command) => await execCoreCommand(reader, command),\n    }\n}\n\nasync function execHaloCmdPCSC(command, reader) {\n    let version = await getVersion(reader);\n\n    let [verMajor, verMinor, verSeq, verShortId] = version.split('.');\n    verSeq = parseInt(verSeq, 10);\n\n    if (verMajor > 1) {\n        throw new HaloLogicError(\"This version of CLI doesn't support major release version \" + verMajor + \". Please update.\");\n    }\n\n    let options = makeOptions(reader);\n    command = {...command};\n\n    if (command.name === \"version\") {\n        // PCSC-specific version retrieval command\n        let addonVersion = await getAddonVersion(reader);\n        let addonParts = null;\n\n        if (addonVersion) {\n            let [verAMajor, verAMinor, verASeq, verAShortId] = addonVersion.split('.');\n            verASeq = parseInt(verASeq, 10);\n            addonParts = {\n                verAMajor,\n                verAMinor,\n                verASeq,\n                verAShortId\n            };\n        }\n\n        return {\n            \"core\": {\n                \"ver\": version,\n                \"parts\": {\n                    verMajor,\n                    verMinor,\n                    verSeq,\n                    verShortId\n                }\n            },\n            \"addons\": {\n                \"ver\": addonVersion,\n                \"parts\": addonParts\n            }\n        };\n    } else if (command.name === \"read_ndef\") {\n        // PCSC-specific NDEF reader command\n        let wrappedTransceive = async (payload) => await transceive(reader, payload, {noCheck: true});\n        return await readNDEF(wrappedTransceive, {allowCache: true});\n    } else {\n        // divert to the common command execution flow\n        await selectCore(reader);\n        return await execHaloCmd(command, options);\n    }\n}\n\nmodule.exports = {execHaloCmdPCSC};\n", "// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n", "let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n", "exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n", "function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n", "/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n", "/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n", "const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n", "/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n", "const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n", "const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n", "const GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n", "const Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n", "/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n", "const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n", "const VersionCheck = require('./version-check')\nconst Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n", "const Utils = require('./utils')\nconst ECCode = require('./error-correction-code')\nconst ECLevel = require('./error-correction-level')\nconst Mode = require('./mode')\nconst VersionCheck = require('./version-check')\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n", "const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n", "const Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n", "const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n", "'use strict'\n\nmodule.exports = function encodeUtf8 (input) {\n  var result = []\n  var size = input.length\n\n  for (var index = 0; index < size; index++) {\n    var point = input.charCodeAt(index)\n\n    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {\n      var second = input.charCodeAt(index + 1)\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000\n        index += 1\n      }\n    }\n\n    // US-ASCII\n    if (point < 0x80) {\n      result.push(point)\n      continue\n    }\n\n    // 2-byte UTF-8\n    if (point < 0x800) {\n      result.push((point >> 6) | 192)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 3-byte UTF-8\n    if (point < 0xD800 || (point >= 0xE000 && point < 0x10000)) {\n      result.push((point >> 12) | 224)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 4-byte UTF-8\n    if (point >= 0x10000 && point <= 0x10FFFF) {\n      result.push((point >> 18) | 240)\n      result.push(((point >> 12) & 63) | 128)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // Invalid character\n    result.push(0xEF, 0xBF, 0xBD)\n  }\n\n  return new Uint8Array(result).buffer\n}\n", "const encodeUtf8 = require('encode-utf8')\nconst Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    data = encodeUtf8(data)\n  }\n  this.data = new Uint8Array(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n", "const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n", "'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n", "const Mode = require('./mode')\nconst NumericData = require('./numeric-data')\nconst AlphanumericData = require('./alphanumeric-data')\nconst ByteData = require('./byte-data')\nconst KanjiData = require('./kanji-data')\nconst Regex = require('./regex')\nconst Utils = require('./utils')\nconst dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n", "const Utils = require('./utils')\nconst ECLevel = require('./error-correction-level')\nconst BitBuffer = require('./bit-buffer')\nconst BitMatrix = require('./bit-matrix')\nconst AlignmentPattern = require('./alignment-pattern')\nconst FinderPattern = require('./finder-pattern')\nconst MaskPattern = require('./mask-pattern')\nconst ECCode = require('./error-correction-code')\nconst ReedSolomonEncoder = require('./reed-solomon-encoder')\nconst Version = require('./version')\nconst FormatInfo = require('./format-info')\nconst Mode = require('./mode')\nconst Segments = require('./segments')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n", "function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n", "const Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n", "const Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n", "\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n", "export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n", "import crypto from './webcrypto.js';\nconst digest = async (algorithm, data) => {\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\n    return new Uint8Array(await crypto.subtle.digest(subtleDigest, data));\n};\nexport default digest;\n", "import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n", "export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n", "import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n", "import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n", "import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n", "import { JWEInvalid } from '../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\nexport default checkCekLength;\n", "const timingSafeEqual = (a, b) => {\n    if (!(a instanceof Uint8Array)) {\n        throw new TypeError('First argument must be a buffer');\n    }\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('Second argument must be a buffer');\n    }\n    if (a.length !== b.length) {\n        throw new TypeError('Input buffers must have the same length');\n    }\n    const len = a.length;\n    let out = 0;\n    let i = -1;\n    while (++i < len) {\n        out |= a[i] ^ b[i];\n    }\n    return out === 0;\n};\nexport default timingSafeEqual;\n", "export function isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\n", "import { isCloudflareWorkers } from '../runtime/env.js';\nfunction unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                if (isCloudflareWorkers()) {\n                    if (isAlgorithm(key.algorithm, 'NODE-ED25519'))\n                        break;\n                    throw unusable('Ed25519, Ed448, or NODE-ED25519');\n                }\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n", "function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n", "import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n", "import { JOSENotSupported } from '../util/errors.js';\nexport const inflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n};\nexport const deflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n};\n", "const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n", "const bogusWebCrypto = [\n    { hash: 'SHA-256', name: 'HMAC' },\n    true,\n    ['sign'],\n];\nexport default bogusWebCrypto;\n", "import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n", "import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    let length;\n    if (publicKey.algorithm.name === 'X25519') {\n        length = 256;\n    }\n    else if (publicKey.algorithm.name === 'X448') {\n        length = 448;\n    }\n    else {\n        length =\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey,\n    }, privateKey, length));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\n        key.algorithm.name === 'X25519' ||\n        key.algorithm.name === 'X448');\n}\n", "import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n", "import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n", "export default (b64, descriptor) => {\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n};\n", "import { isCloudflareWorkers } from './env.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    var _a, _b;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    try {\n        return await crypto.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n    }\n    catch (err) {\n        if (algorithm.name === 'Ed25519' &&\n            (err === null || err === void 0 ? void 0 : err.name) === 'NotSupportedError' &&\n            isCloudflareWorkers()) {\n            algorithm = { name: 'NODE-ED25519', namedCurve: 'NODE-ED25519' };\n            return await crypto.subtle.importKey(keyFormat, keyData, algorithm, (_b = options === null || options === void 0 ? void 0 : options.extractable) !== null && _b !== void 0 ? _b : false, keyUsages);\n        }\n        throw err;\n    }\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n", "import { isCloudflareWorkers } from './env.js';\nimport crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { decode as base64url } from './base64url.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages,\n    ];\n    if (algorithm.name === 'PBKDF2') {\n        return crypto.subtle.importKey('raw', base64url(jwk.k), ...rest);\n    }\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    try {\n        return await crypto.subtle.importKey('jwk', keyData, ...rest);\n    }\n    catch (err) {\n        if (algorithm.name === 'Ed25519' &&\n            (err === null || err === void 0 ? void 0 : err.name) === 'NotSupportedError' &&\n            isCloudflareWorkers()) {\n            rest[0] = { name: 'NODE-ED25519', namedCurve: 'NODE-ED25519' };\n            return await crypto.subtle.importKey('jwk', keyData, ...rest);\n        }\n        throw err;\n    }\n};\nexport default parse;\n", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexport default checkKeyType;\n", "import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n", "import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport generateIv from './iv.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = generateIv(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: base64url(iv), tag: base64url(tag) };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n", "import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                partyUInfo = base64url(joseHeader.apu);\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                partyVInfo = base64url(joseHeader.apv);\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, base64url(joseHeader.p2s));\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            const iv = base64url(joseHeader.iv);\n            const tag = base64url(joseHeader.tag);\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n", "const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = base64url(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    const iv = base64url(jwe.iv);\n    const tag = base64url(jwe.tag);\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await decrypt(enc, cek, base64url(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = base64url(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n", "import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n", "import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n", "import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n", "import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport { deflate } from '../../runtime/zlib.js';\nimport generateIv from '../../lib/iv.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n            iv: base64url(this._iv),\n            tag: base64url(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n", "import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options, ...options });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = generateCek(enc);\n        let jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) ||\n                ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) ||\n                ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n", "import { isCloudflareWorkers } from './env.js';\nimport { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            if (isCloudflareWorkers() && algorithm.name === 'NODE-ED25519') {\n                return { name: 'NODE-ED25519', namedCurve: 'NODE-ED25519' };\n            }\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getCryptoKey(alg, key, usage) {\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    const signature = base64url(jws.signature);\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = base64url(jws.payload);\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { issuer } = options;\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    const { subject } = options;\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    const { audience } = options;\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || options.maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (options.maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof options.maxTokenAge === 'number' ? options.maxTokenAge : secs(options.maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n", "import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n", "import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload Option (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n", "import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nexport class ProduceJWT {\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\n", "import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n", "import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n", "import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n", "import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n", "import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nexport function isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token === null || token === void 0 ? void 0 : token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch (_a) {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n", "import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n", "import fetchJwks from '../runtime/fetch_jwks.js';\nimport { isCloudflareWorkers } from '../runtime/env.js';\nimport { JWKSInvalid, JWKSNoMatchingKey } from '../util/errors.js';\nimport { isJWKSLike, LocalJWKSet } from './local.js';\nclass RemoteJWKSet extends LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            if (!isJWKSLike(json)) {\n                throw new JWKSInvalid('JSON Web Key Set malformed');\n            }\n            this._jwks = { keys: json.keys };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n", "import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch (_a) {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n", "import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch (_a) {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch (_a) {\n        throw new JWTInvalid('Failed to parse the base64url encoded payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch (_b) {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n", "import { isCloudflareWorkers } from './env.js';\nimport crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    var _a, _b, _c, _d;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'EdDSA':\n            keyUsages = ['sign', 'verify'];\n            const crv = (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : 'Ed25519';\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\n            }\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            keyUsages = ['deriveKey', 'deriveBits'];\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n            switch (crv) {\n                case 'P-256':\n                case 'P-384':\n                case 'P-521': {\n                    algorithm = { name: 'ECDH', namedCurve: crv };\n                    break;\n                }\n                case 'X25519':\n                case 'X448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    try {\n        return (await crypto.subtle.generateKey(algorithm, (_c = options === null || options === void 0 ? void 0 : options.extractable) !== null && _c !== void 0 ? _c : false, keyUsages));\n    }\n    catch (err) {\n        if (algorithm.name === 'Ed25519' &&\n            (err === null || err === void 0 ? void 0 : err.name) === 'NotSupportedError' &&\n            isCloudflareWorkers()) {\n            algorithm = { name: 'NODE-ED25519', namedCurve: 'NODE-ED25519' };\n            return (await crypto.subtle.generateKey(algorithm, (_d = options === null || options === void 0 ? void 0 : options.extractable) !== null && _d !== void 0 ? _d : false, keyUsages));\n        }\n        throw err;\n    }\n}\n", "import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n", "import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n", "export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nimport * as errors_1 from './util/errors.js';\nexport { errors_1 as errors };\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nimport * as base64url_1 from './util/base64url.js';\nexport { base64url_1 as base64url };\n", "const Buffer = require('buffer/').Buffer;\nconst crypto = require('crypto');\nconst subtle = crypto.webcrypto && crypto.webcrypto.subtle ? crypto.webcrypto.subtle : globalThis.crypto.subtle;\nconst jose = require('jose');\n\nclass JWEUtil {\n    constructor() {\n\n    }\n\n    async generateKey() {\n        let sharedKey = crypto.randomBytes(16)\n        let sharedKeyEnc = sharedKey\n            .toString('base64')\n            .replace('+', '-')\n            .replace('/', '_')\n            .replace('==', '');\n\n        this.sharedKeyObj = await subtle.importKey(\"raw\", sharedKey, \"AES-GCM\", true, [\n            \"encrypt\",\n            \"decrypt\",\n        ]);\n        return sharedKeyEnc;\n    }\n\n    async loadKey(sharedKey) {\n        // automatically add \"=\" padding if it's not present\n        let padLen = (-sharedKey.length % 3) + 3;\n\n        if (padLen === 3) {\n            padLen = 0;\n        }\n\n        const fixedKeyStr = (sharedKey + \"=\".repeat(padLen))\n            .replace('-', '+')\n            .replace('_', '/');\n        const sharedKeyBuf = Buffer.from(fixedKeyStr, 'base64');\n        this.sharedKeyObj = await subtle.importKey(\"raw\", sharedKeyBuf, \"AES-GCM\", true, [\n            \"encrypt\",\n            \"decrypt\",\n        ]);\n    }\n\n    async encrypt(data) {\n        return await new jose.CompactEncrypt(\n            new TextEncoder().encode(JSON.stringify(data)))\n            .setProtectedHeader({alg: 'dir', enc: 'A128GCM'})\n            .encrypt(this.sharedKeyObj);\n    }\n\n    async decrypt(jwe) {\n        const hdr = jose.decodeProtectedHeader(jwe);\n\n        if (Object.keys(hdr).length !== 2 || hdr.alg !== \"dir\" || hdr.enc !== \"A128GCM\") {\n            throw new Error(\"Unexpected type of JWE provided.\");\n        }\n\n        const { plaintext, protectedHeader } = await jose.compactDecrypt(jwe, this.sharedKeyObj);\n        return JSON.parse(new TextDecoder().decode(plaintext));\n    }\n}\n\nmodule.exports = {JWEUtil};\n", "const QRCode = require(\"qrcode\");\nconst WebSocketAsPromised = require(\"websocket-as-promised\");\nconst crypto = require(\"crypto\");\nconst {JWEUtil} = require(\"../jwe_util\");\n\nfunction makeQR(url) {\n    return new Promise((resolve, reject) => {\n        QRCode.toDataURL(url, function (err, url) {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(url);\n            }\n        });\n    });\n}\n\nclass HaloGateway {\n    constructor(gatewayServer) {\n        this.jweUtil = new JWEUtil();\n        this.isRunning = false;\n\n        this.lastCommand = null;\n        this.gatewayServer = gatewayServer;\n\n        let urlObj = new URL(gatewayServer);\n\n        if (urlObj.protocol === 'wss:') {\n            urlObj.protocol = 'https:';\n        } else if (urlObj.protocol === 'ws:') {\n            urlObj.protocol = 'http:';\n        } else {\n            throw new Error(\"Unexpected protocol provided, expected ws:// or wss:// only.\");\n        }\n\n        if (!urlObj.pathname.endsWith('/')) {\n            urlObj.pathname += '/';\n        }\n\n        urlObj.pathname += 'e';\n\n        this.gatewayServerHttp = urlObj.toString();\n\n        this.ws = new WebSocketAsPromised(this.gatewayServer + '/ws?side=requestor', {\n            packMessage: data => JSON.stringify(data),\n            unpackMessage: data => JSON.parse(data),\n            attachRequestId: (data, requestId) => Object.assign({uid: requestId}, data),\n            extractRequestId: data => data && data.uid\n        });\n\n        this.ws.onSend.addListener(data => {\n            let obj = JSON.parse(data);\n\n            if (obj.type === \"request_cmd\") {\n                this.lastCommand = obj;\n            }\n        });\n\n        this.ws.onUnpackedMessage.addListener(data => {\n            if (data.type === \"executor_connected\" && this.lastCommand) {\n                // existing executor connection was replaced, repeat last command\n                this.ws.sendPacked(this.lastCommand);\n            }\n        });\n    }\n\n    waitForWelcomePacket() {\n        return new Promise((resolve, reject) => {\n            let welcomeWaitTimeout = setTimeout(() => {\n                reject(new Error(\"Server doesn't send welcome packet for 6 seconds after accepting the connection.\"));\n            }, 6000);\n\n            this.ws.onClose.addListener((event) => {\n                reject(new Error(\"WebSocket closed when waiting for welcome packet. Reason: [\" + event.code + \"] \" + event.reason));\n            });\n\n            this.ws.onUnpackedMessage.addListener(data => {\n                if (data.type === \"welcome\") {\n                    clearTimeout(welcomeWaitTimeout);\n                    resolve(data);\n                }\n            });\n        })\n    }\n\n    async startPairing() {\n        let sharedKey = await this.jweUtil.generateKey();\n\n        let waitPromise = this.waitForWelcomePacket();\n        await this.ws.open();\n        let welcomeMsg = await waitPromise;\n\n        /**\n         * URL format in the QR Code:\n         * <gateway server origin>/e?id=<session id>#!/<encryption key>/\n         *\n         * where:\n         * * gateway server origin - public HTTP(S) address to the gateway server\n         * * session id - unique identifier generated by the server, used to match requestor and executor\n         * * encryption key - end-to-end encryption key, passed only on client side, the gateway server doesn't see it\n         *\n         * note that the communication between requestor (e.g. PC) and executor (e.g. smartphone) is carried out\n         * in the form of JWE tokens encrypted with AES-128 shared key, the shared key is passed only on the\n         * client side so the gateway server doesn't \"see\" neither commands nor responses\n         *\n         * example:\n         * https://dev-gate.example.com/e?id=-l6QxdU3xLyDTR2oT7bjnw#!/3LKNuIJV0Ltp0dhNw09tCQ/\n         */\n        let execURL = this.gatewayServerHttp + '?id=' + welcomeMsg.sessionId + '#!/' + sharedKey + '/';\n        let qrCode = await makeQR(execURL);\n\n        return {\n            execURL: execURL,\n            qrCode: qrCode\n        };\n    }\n\n    waitConnected() {\n        return new Promise((resolve, reject) => {\n            this.ws.onClose.addListener((event) => {\n                reject(new Error(\"WebSocket closed when waiting for executor to connect. Reason: [\" + event.code + \"] \" + event.reason));\n            });\n\n            this.ws.onUnpackedMessage.addListener(data => {\n                if (data.type === \"executor_connected\") {\n                    resolve(data);\n                }\n            });\n        })\n    }\n\n    async execHaloCmd(command) {\n        if (this.isRunning) {\n            throw new Error(\"Can not make multiple calls to execHaloCmd() in parallel.\");\n        }\n\n        this.isRunning = true;\n        let nonce = crypto.randomBytes(8).toString('hex');\n\n        try {\n            let res = await this.ws.sendRequest({\n                \"type\": \"request_cmd\",\n                \"payload\": await this.jweUtil.encrypt({\n                    nonce,\n                    command\n                })\n            });\n\n            if (res.type !== \"result_cmd\") {\n                throw new Error(\"Unexpected packet type.\");\n            }\n\n            this.lastCommand = null;\n            let out;\n\n            try {\n                out = await this.jweUtil.decrypt(res.payload);\n            } catch (e) {\n                throw new Error(\"Failed to validate or decrypt response packet.\");\n            }\n\n            if (out.nonce !== nonce) {\n                throw new Error(\"Mismatched nonce in reply.\");\n            }\n\n            return out.response;\n        } finally {\n            this.isRunning = false;\n        }\n    }\n}\n\nmodule.exports = {\n    HaloGateway\n};\n", "const WebSocketAsPromised = require('websocket-as-promised');\n\nfunction haloCreateWs(url) {\n    return new WebSocketAsPromised(url, {\n        packMessage: data => JSON.stringify(data),\n        unpackMessage: data => JSON.parse(data),\n        attachRequestId: (data, requestId) => Object.assign({uid: requestId}, data),\n        extractRequestId: data => data && data.uid\n    });\n}\n\nfunction runHealthCheck(url, openTimeout) {\n    return new Promise((resolve, reject) => {\n        let closeTimeout = null;\n\n        const pingUrl = url.includes('?') ? (url + '&ping=1') : (url + '?ping=1');\n        const wsp = new WebSocketAsPromised(pingUrl, {timeout: openTimeout});\n\n        wsp.onClose.addListener(event => {\n            if (event.code === 4090) {\n                if (closeTimeout) {\n                    clearTimeout(closeTimeout);\n                }\n\n                resolve(url);\n            } else {\n                reject(new Error(\"Unexpected WebSocket close code: \" + event.code));\n            }\n        });\n\n        wsp.open()\n            .then(() => {\n                closeTimeout = setTimeout(() => {\n                    wsp.close();\n                    reject(new Error('WebSocket didn\\'t close as expected.'));\n                }, 2000);\n            })\n            .catch((err) => {\n                reject(err);\n            })\n    });\n}\n\nfunction createChecks(wsPort, wssPort) {\n    // detect Firefox\n    const isFirefox = window.hasOwnProperty(\"InternalError\");\n    const openTimeout = isFirefox ? 10000 : 5000;\n\n    let checks = [\n        runHealthCheck('ws://127.0.0.1:' + wsPort + '/ws', openTimeout)\n    ];\n\n    if (!isFirefox) {\n        // It seems like Firefox is processing one WebSocket request at time.\n        // A call to wss:// endpoint with incorrect certificate could hang the request\n        // for many seconds until it actually fails, and this would hang all remaining WS requests too.\n        // We need to skip this check on Firefox to avoid race conditions and have reasonable performance.\n        checks.push(runHealthCheck('wss://halo-bridge.internal:' + wssPort + '/ws', openTimeout));\n    }\n\n    return checks;\n}\n\nasync function haloFindBridge(options) {\n    options = Object.assign({}, options) || {};\n\n    if (!options.wsPort) {\n        options.wsPort = 32868;\n    }\n\n    if (!options.wssPort) {\n        options.wssPort = 32869;\n    }\n\n    const wsPort = options.wsPort;\n    const wssPort = options.wssPort;\n\n    if (options.diagnose) {\n        let res = await Promise.allSettled(createChecks(wsPort, wssPort));\n        let urls = [];\n        let errors = [];\n\n        for (let o of res) {\n            if (o.status === \"fulfilled\") {\n                urls.push(o.value);\n            } else {\n                errors.push(o.reason);\n            }\n        }\n\n        return {\n            urls,\n            errors\n        };\n    } else {\n        try {\n            return await Promise.any(createChecks(wsPort, wssPort));\n        } catch (e) {\n            throw new Error(\"Unable to locate halo bridge.\");\n        }\n    }\n}\n\nmodule.exports = {haloCreateWs, haloFindBridge};\n", "/**\n * LibHaLo - Programmatically interact with HaLo tags from the web browser, mobile application or the desktop.\n * Copyright by Arx Research, Inc., a Delaware corporation\n * License: MIT\n */\n\nconst {execHaloCmdRN} = require(\"./drivers/nfc_manager\");\nconst {execHaloCmdPCSC} = require(\"./drivers/pcsc\");\nconst {\n    execHaloCmdWeb\n} = require(\"./drivers/common\");\nconst {\n    HaloTagError,\n    HaloLogicError,\n    NFCPermissionRequestDenied,\n    NFCMethodNotSupported,\n    NFCAbortedError,\n    NFCOperationError\n} = require(\"./halo/exceptions\");\nconst {parsePublicKeys, convertSignature, recoverPublicKey} = require(\"./halo/utils\");\nconst {HaloGateway} = require(\"./halo/gateway/requestor\");\nconst {haloFindBridge} = require(\"./web/web_utils\");\n\n/**\n * The LibHaLo stable API. Please don't depend on the functions imported from anywhere else\n * except the lib's index.js. The library's structure is subject to change in the next versions.\n */\nmodule.exports = {\n    // for desktop usage\n    execHaloCmdPCSC,\n\n    // for web usage\n    execHaloCmdWeb,\n    haloFindBridge,\n\n    // for web usage with gateway\n    HaloGateway,\n\n    // for usage with react-native-nfc-manager\n    execHaloCmdRN,\n\n    // exported utils\n    haloParsePublicKeys: parsePublicKeys,\n    haloConvertSignature: convertSignature,\n    haloRecoverPublicKey: recoverPublicKey,\n\n    // exceptions\n    HaloTagError,\n    HaloLogicError,\n    NFCPermissionRequestDenied,\n    NFCMethodNotSupported,\n    NFCAbortedError,\n    NFCOperationError\n};\n", "import WebSocketAsPromised from 'websocket-as-promised'\nimport { computeAddress, hashMessage, sha256 } from 'ethers'\nimport { splitHash, parseKeysCli, download } from './js/helpers'\nimport { execHaloCmdWeb, haloRecoverPublicKey, haloConvertSignature, haloFindBridge } from '@arx-research/libhalo'\n\ntype modes = 'Legacy' | 'Standard'\n\nclass BulkScanner {\n  // State\n  Mode: modes = 'Standard'\n  ReaderConnected = false\n  Halos = {}\n\n  // Web sockets\n  wsp: WebSocketAsPromised\n\n  //Elements\n  Els = {\n    metadata: <HTMLInputElement>document.querySelector('#metadata'),\n    clear: document.querySelector('#clear')!,\n    export: document.querySelector('#export')!,\n    count: document.querySelector('#count')!,\n    settings: document.querySelector('#settings')!,\n    empty: document.querySelector('.empty-text')!,\n    records: document.querySelector('.records')!,\n    settingsDropdown: document.querySelector('.settings-dropdown')!,\n    scanButton: <HTMLButtonElement>document.querySelector('#scan')!,\n    signButton: <HTMLButtonElement>document.querySelector('#sign')!,\n    modeRadios: <NodeListOf<HTMLInputElement>>document.querySelectorAll('.settings-dropdown-dropdown-option-radio')!,\n  }\n\n  // Setup\n  constructor() {\n    // Retrieve\n    this.LoadHalosFromStorage()\n\n    // Update page\n    this.Render()\n    this.UpdateScanButton()\n\n    // Add event listeners\n    this.AddSettingsListeners()\n    this.AddClearListeners()\n    this.AddModeSelectListener()\n    this.AddMetadataListener()\n    this.AddScanClickListener()\n    this.AddExportListener()\n    this.AddSignListener()\n\n    // Setup websockets\n    this.SetupWebsockets()\n  }\n\n  // Helpers\n  GenerateDigest = (message) => {\n    let messageBytes = hashMessage(message)\n    return messageBytes.slice(2)\n  }\n\n  GenerateKeys = (keys) => {}\n\n  DevLog = (data) => {\n    document.querySelector('#console')!.innerHTML += JSON.stringify(data)\n  }\n\n  CheckMobile = () => {\n    // @ts-ignore\n    let check = false\n    ;(function (a) {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      )\n        check = true\n    })(navigator.userAgent || navigator.vendor || window.opera)\n    return check\n  }\n\n  // Storage\n  LoadHalosFromStorage = () => {\n    try {\n      // Get off local storage\n      const halos = localStorage.getItem('halos')\n\n      // Set on state\n      if (halos) this.Halos = JSON.parse(halos)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  UpdateLocalStorage = () => {\n    localStorage.setItem('halos', JSON.stringify(this.Halos))\n  }\n\n  // Websockets\n  SetupWebsockets = async () => {\n    try {\n      const bridgeUrl = await haloFindBridge()\n\n      // Setup listener\n      this.wsp = new WebSocketAsPromised(bridgeUrl, {\n        packMessage: (data: any) => JSON.stringify(data),\n        unpackMessage: (data: any) => JSON.parse(data),\n        attachRequestId: (data, requestId) => Object.assign({ uid: requestId }, data),\n        extractRequestId: (data) => data && data.uid,\n      })\n\n      this.wsp.open()\n\n      // Handle close\n      this.wsp.onClose.addListener((event) => this.HandleWebSocketsClose(event))\n\n      // Handle events\n      this.wsp.onUnpackedMessage.addListener(async (ev) => {\n        switch (ev.event) {\n          case 'reader_added':\n            this.ReaderConnected = true\n            this.UpdateScanButton()\n            break\n          case 'reader_removed':\n            this.ReaderConnected = false\n            this.UpdateScanButton()\n            break\n          case 'handle_added':\n            this.HandleReaderScan(ev)\n            break\n          case 'exec_exception':\n            this.HandleScanFailure(ev)\n            break\n          default:\n            console.log('default', ev)\n        }\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  HandleWebSocketsClose = async (event) => {\n    if (event.code === 4001) {\n      console.log('Connection closed, new client has connected.')\n    } else {\n      console.log('Connection closed: ' + event.code)\n\n      if (event.code === 4002) {\n        window.location.href = 'http://127.0.0.1:32868/consent?website=https://bulk.vrfy.ch/'\n      }\n    }\n  }\n\n  HandleScanFailure = (ev) => {\n    console.log('This scan failed', ev)\n  }\n\n  // Handle Scans\n  HandleReaderScan = async (ev) => {\n    /*\n      Get keys\n    */\n\n    const res1 = await this.wsp.sendRequest({\n      type: 'exec_halo',\n      handle: ev.data.handle,\n      command: {\n        name: 'get_pkeys',\n      },\n    })\n\n    if (!res1.data?.res?.publicKeys) return\n\n    // Create halo object\n    const keys = parseKeysCli(res1.data.res.publicKeys)\n    keys['address'] = computeAddress('0x' + keys['primaryPublicKeyRaw'])\n\n    // Return early if it already exists\n    // if (this.Halos[keys['primaryPublicKeyHash']] != undefined) {\n    //   this.UpdateScanButton()\n    //   return\n    // }\n\n    // Add metadata\n    const metadata = this.Els.metadata.value\n    if (metadata.length > 0) {\n      keys.metadata = metadata\n\n      /*\n      Get sign data\n    */\n\n      const res2 = await this.wsp.sendRequest({\n        type: 'exec_halo',\n        handle: ev.data.handle,\n        command: {\n          name: 'sign',\n          message: this.Els.metadata.value,\n          keyNo: 1,\n        },\n      })\n\n      if (res2?.data?.res?.signature) {\n        keys.sig = res2?.data?.res?.signature\n      }\n    }\n\n    /* \n      Update everything\n    */\n\n    // Add to state\n    this.Halos[keys['primaryPublicKeyHash']] = keys\n\n    // Update local storage\n    this.UpdateLocalStorage()\n\n    // Update page\n    this.Render()\n\n    // Reset scan button\n    this.UpdateScanButton()\n  }\n\n  HandleLegacyScan = async () => {\n    // @ts-ignore Get data\n    const res = await execHaloCmdWeb({ name: 'get_pkeys' })\n\n    // Create keys\n    const keys = parseKeysCli(res.publicKeys)\n    keys['address'] = computeAddress('0x' + keys['primaryPublicKeyRaw'])\n\n    // Add if doesnt exist\n    if (this.Halos[keys['primaryPublicKeyHash']] !== undefined) return\n    this.Halos[keys['primaryPublicKeyHash']] = keys\n    // document.querySelector('#console')!.innerHTML += JSON.stringify(this.Halos[keys['primaryPublicKeyHash']])\n\n    // Update storage\n    this.UpdateLocalStorage()\n\n    // Rebuild page\n    this.Render()\n  }\n\n  HandleLegacySign = async () => {\n    // Create digest\n    const metadata = this.Els.metadata.value\n    const digest = this.GenerateDigest(metadata)\n\n    // @ts-ignore Send it\n    const res = await execHaloCmdWeb({\n      name: 'sign',\n      keyNo: 1,\n      digest,\n      legacySignCommand: true,\n    })\n\n    // Find the record\n    const potentialKeys: string[] = haloRecoverPublicKey(res.input.digest, res.signature.der)\n    const potentialKey1 = sha256('0x' + potentialKeys[0].slice(2))\n    const potentialKey2 = sha256('0x' + potentialKeys[1].slice(2))\n\n    if (this.Halos[potentialKey1]) {\n      // @ts-ignore\n      const sig = haloConvertSignature(res.input.digest, res.signature.der, potentialKeys[0])\n      this.Halos[potentialKey1].sig = sig\n      this.Halos[potentialKey1].metadata = metadata\n    } else if (this.Halos[potentialKey2]) {\n      //@ts-ignore\n      const sig = haloConvertSignature(res.input.digest, res.signature.der, potentialKeys[1])\n      this.Halos[potentialKey2].sig = sig\n      this.Halos[potentialKey2].metadata = metadata\n    } else {\n      alert('Please scan chip before signing')\n    }\n\n    // Update storage\n    this.UpdateLocalStorage()\n\n    // Rerender\n    this.Render()\n  }\n\n  HandleStandardScan = async () => {\n    try {\n      alert('running handle standard scan')\n\n      const metadata = this.Els.metadata.value\n\n      // Create Digest\n      const digest = this.GenerateDigest(metadata)\n\n      // @ts-ignore Send it\n      const res = await execHaloCmdWeb({\n        name: 'sign',\n        keyNo: 1,\n        digest,\n      })\n\n      // Create keys\n      const keys = parseKeysCli({ 1: res.publicKey })\n      keys['address'] = computeAddress('0x' + keys['primaryPublicKeyRaw'])\n\n      if (metadata.length > 0) {\n        keys['metadata'] = metadata\n        keys['sig'] = res.signature\n      }\n\n      // Add if doesnt exist\n      if (this.Halos[keys['primaryPublicKeyHash']] !== undefined) return\n      this.Halos[keys['primaryPublicKeyHash']] = keys\n\n      // Rebuild page\n      this.Render()\n    } catch (err) {\n      if (err.name == 'HaloLogicError') {\n        alert('Please switch to legacy mode')\n      }\n    }\n  }\n\n  // Render page\n  Render = () => {\n    // Clear old stuff\n    this.Els.records.innerHTML = ''\n\n    // Get count\n    const haloCount = Object.entries(this.Halos).length\n\n    // If we have some\n    if (haloCount > 0) {\n      // Append a record row for each one\n      for (let primaryKeyHash in this.Halos) {\n        // Get data\n        const record = this.Halos[primaryKeyHash]\n\n        // Build html with it\n        const recordHTML = this.BuildRecordHTML(record)\n\n        // Append to dom\n        this.Els.records.appendChild(recordHTML)\n\n        // Add listeners to it\n        this.AddRecordListeners(recordHTML)\n      }\n\n      // Update buttons, counter, and empty text\n      this.UpdateButtonsCounterAndEmpty()\n    }\n  }\n\n  BuildRecordHTML = (record) => {\n    const el = document.createElement('div')\n    el.classList.add('record')\n    el.setAttribute('data-primary', record.primaryPublicKeyHash)\n\n    const pkSplit = splitHash(record.primaryPublicKeyHash)\n    let signatureStuff = ''\n\n    if (record.sig) {\n      signatureStuff = `\n      <div class=\"record-body-section\">\n      <h2>Signature DER</h2>\n      <div class=\"record-body-section-box\">\n        ${record.sig.der}\n      </div>\n    </div>\n      `\n    }\n\n    el.innerHTML = `\n      <div class=\"record-header\">\n        <button class=\"record-header-delete\">\n          <img src=\"./assets/delete.svg\">\n        </button>\n        <div class=\"record-header-pk\">\n          <div class=\"record-header-pk-start\">\n            ${pkSplit.start}\n          </div>\n          <div class=\"record-header-pk-end\">${pkSplit.end}</div>\n        </div>\n        <div class=\"record-header-chevron\">\n          <img src=\"./assets/chevron-down.svg\">\n        </div>\n      </div>\n      <div class=\"record-body\">\n        ${\n          record.metadata\n            ? `<div class=\"record-body-section\">\n          <h2>Metadata</h2>\n          <div class=\"record-body-section-box\">${record.metadata}</div>\n        </div>`\n            : ''\n        }\n        <div class=\"record-body-section\">\n          <h2>Primary public key</h2>\n          <div class=\"record-body-section-box\">\n            ${record.primaryPublicKeyRaw}\n          </div>\n        </div>\n        <div class=\"record-body-section\">\n          <h2>Address</h2>\n          <div class=\"record-body-section-box\">\n            ${record.address}\n          </div>\n        </div>\n        ${signatureStuff}\n      </div>\n      `\n\n    return el\n  }\n\n  UpdateButtonsCounterAndEmpty = () => {\n    const haloCount = Object.entries(this.Halos).length\n\n    // Toggle element visiblity\n    if (haloCount > 0) {\n      this.Els.clear.classList.remove('hide')\n      this.Els.export.classList.remove('hide')\n      this.Els.count.classList.remove('hide')\n      this.Els.empty.classList.add('hide')\n    } else {\n      this.Els.clear.classList.add('hide')\n      this.Els.export.classList.add('hide')\n      this.Els.count.classList.add('hide')\n      this.Els.empty.classList.remove('hide')\n    }\n\n    // Update count\n    this.Els.count.textContent = haloCount.toString()\n  }\n\n  UpdateScanButton = () => {\n    if (this.Mode === 'Standard') {\n      // Hide sign button\n      this.Els.signButton.classList.add('hide')\n\n      let buttonText = 'Scan'\n\n      if (this.ReaderConnected) {\n        buttonText = 'Hold chip to reader to scan'\n      } else if (this.Els.metadata.value.length > 0) {\n        buttonText += ' and sign'\n      }\n      this.Els.scanButton.querySelector('span')!.textContent = buttonText\n    } else {\n      this.Els.signButton.classList.remove('hide')\n      this.Els.scanButton.querySelector('span')!.textContent = 'Scan'\n    }\n\n    if (this.ReaderConnected && this.Mode == 'Standard') {\n      this.Els.scanButton.classList.add('no-click')\n      this.Els.scanButton.disabled = false\n    } else if (\n      !this.ReaderConnected &&\n      this.Mode == 'Standard' &&\n      navigator.platform.indexOf('Win') === -1 &&\n      !this.CheckMobile()\n    ) {\n      this.Els.scanButton.classList.add('no-click')\n      this.Els.scanButton.disabled = true\n    } else {\n      this.Els.scanButton.classList.remove('no-click')\n      this.Els.scanButton.disabled = false\n    }\n\n    this.Els.signButton.disabled = this.Els.metadata.value.length === 0\n  }\n\n  // Event Listeners\n  AddSettingsListeners = () => {\n    this.Els.settings.addEventListener('click', () => {\n      this.Els.settingsDropdown.classList.toggle('settings-dropdown-active')\n    })\n\n    this.Els.settingsDropdown.addEventListener('click', (e) => e.stopPropagation())\n\n    document.querySelector('html, body')!.addEventListener('click', () => {\n      this.Els.settingsDropdown.classList.remove('settings-dropdown-active')\n    })\n  }\n\n  AddClearListeners = () => {\n    this.Els.clear.addEventListener('click', () => {\n      if (confirm('Clear all scanned chips?')) {\n        this.Halos = {}\n        this.Els.records.innerHTML = ''\n        this.UpdateLocalStorage()\n        this.UpdateButtonsCounterAndEmpty()\n      }\n    })\n  }\n\n  AddRecordListeners = (recordEl) => {\n    const deleteButton = recordEl.querySelector('.record-header-delete')\n    const toggleArea = recordEl.querySelector('.record-header')\n\n    deleteButton.addEventListener('click', (e) => {\n      // so toggle not triggered\n      e.stopPropagation()\n\n      // Get record key\n      const pk = recordEl.getAttribute('data-primary')\n\n      // Remove record from dom\n      recordEl?.remove()\n\n      // Remove from stored halos\n      delete this.Halos[pk]\n\n      // Update buttons n stuff\n      this.UpdateButtonsCounterAndEmpty()\n\n      // Update local storage\n      this.UpdateLocalStorage()\n    })\n\n    toggleArea.addEventListener('click', (e) => {\n      recordEl.classList.toggle('record--active')\n    })\n  }\n\n  AddModeSelectListener = () => {\n    this.Els.modeRadios.forEach((radio) => {\n      radio.addEventListener('change', (e: any) => {\n        const mode: modes = e.target.value\n        this.Mode = mode\n        this.UpdateScanButton()\n      })\n    })\n  }\n\n  AddExportListener = () => {\n    this.Els.export.addEventListener('click', () => {\n      download(JSON.stringify(this.Halos), 'halo-export.json')\n    })\n  }\n\n  AddMetadataListener = () => {\n    this.Els.metadata.addEventListener('keyup', () => {\n      this.UpdateScanButton()\n    })\n  }\n\n  AddScanClickListener = () => {\n    this.Els.scanButton.addEventListener('click', async () => {\n      if (this.ReaderConnected && this.Mode === 'Standard') {\n        this.UpdateScanButton()\n      } else if (this.Mode === 'Legacy') {\n        this.HandleLegacyScan()\n      } else {\n        this.HandleStandardScan()\n      }\n    })\n  }\n\n  AddSignListener = () => {\n    this.Els.signButton.addEventListener('click', () => {\n      this.HandleLegacySign()\n    })\n  }\n}\n\ntry {\n  new BulkScanner()\n} catch (err) {\n  console.log(err)\n}\n", "/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n\n/**\n *  The current version of Ethers.\n */\nexport const version: string = \"6.2.3\";\n", "/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n", "/**\n *  About Errors.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\n\nimport { version } from \"../_version.js\";\n\nimport { defineProperties } from \"./properties.js\";\n\nimport type {\n    TransactionRequest, TransactionReceipt, TransactionResponse\n} from \"../providers/index.js\";\n\nimport type { FetchRequest, FetchResponse } from \"./fetch.js\";\n\nexport type ErrorInfo<T> = Omit<T, \"code\" | \"name\" | \"message\">;\n\n\nfunction stringify(value: any): any {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${ stringify(k) }: ${ stringify(value[k]) }`).join(\", \") + \" }\";\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n *  All errors emitted by ethers have an **ErrorCode** to help\n *  identify and coalesce errors to simplfy programatic analysis.\n *\n *  Each **ErrorCode** is the %%code%% proerty of a coresponding\n *  [[EthersError]].\n *\n *  **Generic Errors**\n *\n *  **``\"UNKNOWN_ERROR\"``** - see [[UnknownError]]\n *\n *  **``\"NOT_IMPLEMENTED\"``** - see [[NotImplementedError]]\n *\n *  **``\"UNSUPPORTED_OPERATION\"``** - see [[UnsupportedOperationError]]\n *\n *  **``\"NETWORK_ERROR\"``** - see [[NetworkError]]\n *\n *  **``\"SERVER_ERROR\"``** - see [[ServerError]]\n *\n *  **``\"TIMEOUT\"``** - see [[TimeoutError]]\n *\n *  **``\"BAD_DATA\"``** - see [[BadDataError]]\n *\n *  **``\"CANCELLED\"``** - see [[CancelledError]]\n *\n *  **Operational Errors**\n *\n *  **``\"BUFFER_OVERRUN\"``** - see [[BufferOverrunError]]\n *\n *  **``\"NUMERIC_FAULT\"``** - see [[NumericFaultError]]\n *\n *  **Argument Errors**\n *\n *  **``\"INVALID_ARGUMENT\"``** - see [[InvalidArgumentError]]\n *\n *  **``\"MISSING_ARGUMENT\"``** - see [[MissingArgumentError]]\n *\n *  **``\"UNEXPECTED_ARGUMENT\"``** - see [[UnexpectedArgumentError]]\n *\n *  **``\"VALUE_MISMATCH\"``** - //unused//\n *\n *  **Blockchain Errors**\n *\n *  **``\"CALL_EXCEPTION\"``** - see [[CallExceptionError]]\n *\n *  **``\"INSUFFICIENT_FUNDS\"``** - see [[InsufficientFundsError]]\n *\n *  **``\"NONCE_EXPIRED\"``** - see [[NonceExpiredError]]\n *\n *  **``\"REPLACEMENT_UNDERPRICED\"``** - see [[ReplacementUnderpricedError]]\n *\n *  **``\"TRANSACTION_REPLACED\"``** - see [[TransactionReplacedError]]\n *\n *  **``\"UNCONFIGURED_NAME\"``** - see [[UnconfiguredNameError]]\n *\n *  **``\"OFFCHAIN_FAULT\"``** - see [[OffchainFaultError]]\n *\n *  **User Interaction Errors**\n *\n *  **``\"ACTION_REJECTED\"``** - see [[ActionRejectedError]]\n */\nexport type ErrorCode =\n\n    // Generic Errors\n    \"UNKNOWN_ERROR\" | \"NOT_IMPLEMENTED\" | \"UNSUPPORTED_OPERATION\" |\n    \"NETWORK_ERROR\" | \"SERVER_ERROR\" | \"TIMEOUT\" | \"BAD_DATA\" |\n    \"CANCELLED\" |\n\n    // Operational Errors\n    \"BUFFER_OVERRUN\" |  \"NUMERIC_FAULT\" |\n\n    // Argument Errors\n    \"INVALID_ARGUMENT\" | \"MISSING_ARGUMENT\" | \"UNEXPECTED_ARGUMENT\" |\n    \"VALUE_MISMATCH\" |\n\n    // Blockchain Errors\n    \"CALL_EXCEPTION\" | \"INSUFFICIENT_FUNDS\" | \"NONCE_EXPIRED\" |\n    \"REPLACEMENT_UNDERPRICED\" | \"TRANSACTION_REPLACED\" |\n    \"UNCONFIGURED_NAME\" | \"OFFCHAIN_FAULT\" |\n\n    // User Interaction\n    \"ACTION_REJECTED\"\n;\n\n/**\n *  All errors in Ethers include properties to assist in\n *  machine-readable errors.\n */\nexport interface EthersError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     *  The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     *  Additional info regarding the error that may be useful.\n     *\n     *  This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     *  Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n *  This Error is a catch-all for when there is no way for Ethers to\n *  know what the underlying problem is.\n */\nexport interface UnknownError extends EthersError<\"UNKNOWN_ERROR\"> {\n    [ key: string ]: any;\n}\n\n/**\n *  This Error is mostly used as a stub for functionality that is\n *  intended for the future, but is currently not implemented.\n */\nexport interface NotImplementedError extends EthersError<\"NOT_IMPLEMENTED\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates that the attempted operation is not supported.\n *\n *  This could range from a specifc JSON-RPC end-point not supporting\n *  a feature to a specific configuration of an object prohibiting the\n *  operation.\n *\n *  For example, a [[Wallet]] with no connected [[Provider]] is unable\n *  to send a transaction.\n */\nexport interface UnsupportedOperationError extends EthersError<\"UNSUPPORTED_OPERATION\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\nexport interface NetworkError extends EthersError<\"NETWORK_ERROR\"> {\n    event: string;\n}\n\n/**\n *  This Error indicates there was a problem fetching a resource from\n *  a server.\n */\nexport interface ServerError extends EthersError<\"SERVER_ERROR\"> {\n    /**\n     *  The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     *  The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n *  This Error indicates that the timeout duration has expired and\n *  that the operation has been implicitly cancelled.\n *\n *  The side-effect of the operation may still occur, as this\n *  generally means a request has been sent and there has simply\n *  been no response to indicate whether it was processed or not.\n */\nexport interface TimeoutError extends EthersError<\"TIMEOUT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The reason.\n     */\n    reason: string;\n\n    /**\n     *  The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n *  This Error indicates that a provided set of data cannot\n *  be correctly interpretted.\n */\nexport interface BadDataError extends EthersError<\"BAD_DATA\"> {\n    /**\n     *  The data.\n     */\n    value: any;\n}\n\n/**\n *  This Error indicates that the operation was cancelled by a\n *  programmatic call, for example to ``cancel()``.\n */\nexport interface CancelledError extends EthersError<\"CANCELLED\"> {\n}\n\n\n// Operational Errors\n\n/**\n *  This Error indicates an attempt was made to read outside the bounds\n *  of protected data.\n *\n *  Most operations in Ethers are protected by bounds checks, to mitigate\n *  exploits when parsing data.\n */\nexport interface BufferOverrunError extends EthersError<\"BUFFER_OVERRUN\"> {\n    /**\n     *  The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     *  The length of the buffer.\n     */\n    length: number;\n\n    /**\n     *  The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n *  This Error indicates an operation which would result in incorrect\n *  arithmetic output has occurred.\n *\n *  For example, trying to divide by zero or using a ``uint8`` to store\n *  a negative value.\n */\nexport interface NumericFaultError extends EthersError<\"NUMERIC_FAULT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The fault reported.\n     */\n    fault: string;\n\n    /**\n     *  The value the operation was attempted against.\n     */\n    value: any;\n}\n\n\n// Argument Errors\n\n/**\n *  This Error indicates an incorrect type or value was passed to\n *  a function or method.\n */\nexport interface InvalidArgumentError extends EthersError<\"INVALID_ARGUMENT\"> {\n    /**\n     *  The name of the argument.\n     */\n    argument: string;\n\n    /**\n     *  The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>\n}\n\n/**\n *  This Error indicates there were too few arguments were provided.\n */\nexport interface MissingArgumentError extends EthersError<\"MISSING_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n *  This Error indicates too many arguments were provided.\n */\nexport interface UnexpectedArgumentError extends EthersError<\"UNEXPECTED_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n\n// Blockchain Errors\n\n/**\n *  The action that resulted in the error.\n */\nexport type CallExceptionAction = \"call\" | \"estimateGas\" | \"getTransactionResult\" | \"unknown\";\n\n/**\n *  The related transaction that caused the error.\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n *  This **Error** indicates a transaction reverted.\n */\nexport interface CallExceptionError extends EthersError<\"CALL_EXCEPTION\"> {\n    /**\n     *  The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     *  The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     *  A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     *  The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction,\n\n    /**\n     *  The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    }\n}\n\n/**\n *  The sending account has insufficient funds to cover the\n *  entire transaction cost.\n */\nexport interface InsufficientFundsError extends EthersError<\"INSUFFICIENT_FUNDS\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  The sending account has already used this nonce in a\n *  transaction that has been included.\n */\nexport interface NonceExpiredError extends EthersError<\"NONCE_EXPIRED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A CCIP-read exception, which cannot be recovered from or\n *  be further processed.\n */\nexport interface OffchainFaultError extends EthersError<\"OFFCHAIN_FAULT\"> {\n    /**\n     *  The transaction.\n     */\n    transaction?: TransactionRequest;\n\n    /**\n     *  The reason the CCIP-read failed.\n     */\n    reason: string;\n}\n\n/**\n *  An attempt was made to replace a transaction, but with an\n *  insufficient additional fee to afford evicting the old\n *  transaction from the memory pool.\n */\nexport interface ReplacementUnderpricedError extends EthersError<\"REPLACEMENT_UNDERPRICED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A pending transaction was replaced by another.\n */\nexport interface TransactionReplacedError extends EthersError<\"TRANSACTION_REPLACED\"> {\n    /**\n     *  If the transaction was cancelled, such that the original\n     *  effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     *  The reason the transaction was replaced.\n     */\n    reason: \"repriced\" | \"cancelled\" | \"replaced\";\n\n    /**\n     *  The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     *  The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse;\n\n    /**\n     *  The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n *  This Error indicates an ENS name was used, but the name has not\n *  been configured.\n *\n *  This could indicate an ENS name is unowned or that the current\n *  address being pointed to is the [[ZeroAddress]].\n */\nexport interface UnconfiguredNameError extends EthersError<\"UNCONFIGURED_NAME\"> {\n    /**\n     *  The ENS name that was requested\n     */\n    value: string;\n}\n\n/**\n *  This Error indicates a request was rejected by the user.\n *\n *  In most clients (such as MetaMask), when an operation requires user\n *  authorization (such as ``signer.sendTransaction``), the client\n *  presents a dialog box to the user. If the user denies the request\n *  this error is thrown.\n */\nexport interface ActionRejectedError extends EthersError<\"ACTION_REJECTED\"> {\n    /**\n     *  The requested action.\n     */\n    action: \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\" | \"unknown\",\n\n    /**\n     *  The reason the action was rejected.\n     *\n     *  If there is already a pending request, some clients may indicate\n     *  there is already a ``\"pending\"`` action. This prevents an app\n     *  from spamming the user.\n     */\n    reason: \"expired\" | \"rejected\" | \"pending\"\n}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n *  A conditional type that transforms the [[ErrorCode]] T into\n *  its EthersError type.\n *\n *  @flatworm-skip-docs\n */\nexport type CodedEthersError<T> =\n    T extends \"UNKNOWN_ERROR\" ? UnknownError:\n    T extends \"NOT_IMPLEMENTED\" ? NotImplementedError:\n    T extends \"UNSUPPORTED_OPERATION\" ? UnsupportedOperationError:\n    T extends \"NETWORK_ERROR\" ? NetworkError:\n    T extends \"SERVER_ERROR\" ? ServerError:\n    T extends \"TIMEOUT\" ? TimeoutError:\n    T extends \"BAD_DATA\" ? BadDataError:\n    T extends \"CANCELLED\" ? CancelledError:\n\n    T extends \"BUFFER_OVERRUN\" ? BufferOverrunError:\n    T extends \"NUMERIC_FAULT\" ? NumericFaultError:\n\n    T extends \"INVALID_ARGUMENT\" ? InvalidArgumentError:\n    T extends \"MISSING_ARGUMENT\" ? MissingArgumentError:\n    T extends \"UNEXPECTED_ARGUMENT\" ? UnexpectedArgumentError:\n\n    T extends \"CALL_EXCEPTION\" ? CallExceptionError:\n    T extends \"INSUFFICIENT_FUNDS\" ? InsufficientFundsError:\n    T extends \"NONCE_EXPIRED\" ? NonceExpiredError:\n    T extends \"OFFCHAIN_FAULT\" ? OffchainFaultError:\n    T extends \"REPLACEMENT_UNDERPRICED\" ? ReplacementUnderpricedError:\n    T extends \"TRANSACTION_REPLACED\" ? TransactionReplacedError:\n    T extends \"UNCONFIGURED_NAME\" ? UnconfiguredNameError:\n\n    T extends \"ACTION_REJECTED\" ? ActionRejectedError:\n\n    never;\n\n\n\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript envornoments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError<K extends ErrorCode, T extends CodedEthersError<K>>(error: any, code: K): error is T {\n    return (error && (<EthersError>error).code === code);\n}\n\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additioanl properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depneding on %%code%%, additional\n *  required properties. The error message will also include the %%meeage%%,\n *  ethers version, %%code%% and all aditional properties, serialized.\n */\nexport function makeError<K extends ErrorCode, T extends CodedEthersError<K>>(message: string, code: K, info?: ErrorInfo<T>): T {\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${ stringify(info) }`);\n            }\n            for (const key in info) {\n                const value = <any>(info[<keyof ErrorInfo<T>>key]);\n//                try {\n                    details.push(key + \"=\" + stringify(value));\n//                } catch (error: any) {\n//                console.log(\"MMM\", error.message);\n//                    details.push(key + \"=[could not serialize object]\");\n//                }\n            }\n        }\n        details.push(`code=${ code }`);\n        details.push(`version=${ version }`);\n\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<EthersError>(<EthersError>error, { code });\n\n    if (info) { Object.assign(error, info); }\n\n    return <T>error;\n}\n\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert<K extends ErrorCode, T extends CodedEthersError<K>>(check: unknown, message: string, code: K, info?: ErrorInfo<T>): asserts check {\n    if (!check) { throw makeError(message, code, info); }\n}\n\n\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) { message = \"\"; }\n    if (message) { message = \": \" + message; }\n\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n\n    assert(count <= expectedCount, \"too many arguemnts\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\n\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") { throw new Error(\"bad\"); };\n        /* c8 ignore stop */\n\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301)\n            /* c8 ignore start */\n            if (check !== expected) { throw new Error(\"broken\") }\n            /* c8 ignore stop */\n        }\n\n        accum.push(form);\n    } catch(error) { }\n\n    return accum;\n}, <Array<string>>[]);\n\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) { className = \"\"; }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${ method }from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n", "/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\n\n/**\n *  A [[HexString]] whose length is even, which ensures it is a valid\n *  representation of binary data.\n */\nexport type DataHexString = string;\n\n/**\n *  A string which is prefixed with ``0x`` and followed by any number\n *  of case-agnostic hexadecimal characters.\n *\n *  It must match the regular expression ``/0x[0-9A-Fa-f]*\\/``.\n */\nexport type HexString = string;\n\n/**\n *  An object that can be used to represent binary data.\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) { return new Uint8Array(value); }\n        return value;\n    }\n\n    if (typeof(value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${ string }` {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    if (typeof(length) === \"number\" && value.length !== 2 + 2 * length) { return false; }\n    if (length === true && (value.length % 2) !== 0) { return false; }\n\n    return true;\n}\n\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) { return (data.length - 2) / 2; }\n    return getBytes(data).length;\n}\n\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0: start, (end == null) ? bytes.length: end));\n}\n\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) { bytes = bytes.substring(2); }\n    return \"0x\" + bytes;\n}\n\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n", "/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n/**\n *  Any type that can be used where a numeric value is needed.\n */\nexport type Numeric = number | bigint;\n\n/**\n *  Any type that can be used where a big number is needed.\n */\nexport type BigNumberish = string | Numeric;\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n\n\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value: BigNumberish, _width: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n\n    return value;\n}\n\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value: BigNumberish, _width: Numeric): bigint {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    const limit = (BN_1 << (width - BN_1));\n\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    } else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n\n    return value;\n}\n\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value: BigNumberish, _bits: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value: BigNumberish, name?: string): bigint {\n    switch (typeof(value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            } catch(e: any) {\n                assertArgument(false, `invalid BigNumberish string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n\nexport function getUint(value: BigNumberish, name?: string): bigint {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\n\nconst Nibbles = \"0123456789abcdef\";\n\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value: BigNumberish | Uint8Array): bigint {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n\n    return getBigInt(value);\n}\n\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value: BigNumberish, name?: string): number {\n    switch (typeof(value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                return getNumber(BigInt(value), name);\n            } catch(e: any) {\n                assertArgument(false, `invalid numeric string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n\n\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value: BigNumberish | Uint8Array): number {\n    return getNumber(toBigInt(value));\n}\n\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value: BigNumberish, _width?: Numeric): string {\n    const value = getUint(_value, \"value\");\n\n    let result = value.toString(16);\n\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) { result = \"0\" + result; }\n    } else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${ width } bits)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n\n        // Pad the value to the required width\n        while (result.length < (width * 2)) { result = \"0\" + result; }\n\n    }\n\n    return \"0x\" + result;\n}\n\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value: BigNumberish): Uint8Array {\n    const value = getUint(_value, \"value\");\n\n    if (value === BN_0) { return new Uint8Array([ ]); }\n\n    let hex = value.toString(16);\n    if (hex.length % 2) { hex = \"0\" + hex; }\n\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n\n    return result;\n}\n\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value: BytesLike | BigNumberish): string {\n    let result = hexlify(isBytesLike(value) ? value: toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) { result = result.substring(1); }\n    if (result === \"\") { result = \"0\"; }\n    return \"0x\" + result;\n}\n", "/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\n///////////////////////////////\n\n/**\n *  The stanard normalization forms.\n */\nexport type UnicodeNormalizationForm = \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\";\n\n/**\n *  When using the UTF-8 error API the following errors can be intercepted\n *  and processed as the %%reason%% passed to the [[Utf8ErrorFunc]].\n *\n *  **``\"UNEXPECTED_CONTINUE\"``** - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  **``\"BAD_PREFIX\"``** - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  **``\"OVERRUN\"``** - the string is too short to process the expected\n *  codepoint length.\n *\n *  **``\"MISSING_CONTINUE\"``** - a missing continuation byte was expected but\n *  not found. The %%offset%% indicates the index the continuation byte\n *  was expected at.\n *\n *  **``\"OUT_OF_RANGE\"``** - the computed code point is outside the range\n *  for UTF-8. The %%badCodepoint%% indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  **``\"UTF16_SURROGATE\"``** - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The %%badCodepoint%% is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  **``\"OVERLONG\"``** - the string is an overlong representation. The\n *  %%badCodepoint%% indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\nexport type Utf8ErrorReason = \"UNEXPECTED_CONTINUE\" | \"BAD_PREFIX\" | \"OVERRUN\" |\n    \"MISSING_CONTINUE\" | \"OUT_OF_RANGE\" | \"UTF16_SURROGATE\" | \"OVERLONG\";\n\n\n/**\n *  A callback that can be used with [[toUtf8String]] to analysis or\n *  recovery from invalid UTF-8 data.\n *\n *  Parsing UTF-8 data is done through a simple Finite-State Machine (FSM)\n *  which calls the ``Utf8ErrorFunc`` if a fault is detected.\n *\n *  The %%reason%% indicates where in the FSM execution the fault\n *  occurred and the %%offset%% indicates where the input failed.\n *\n *  The %%bytes%% represents the raw UTF-8 data that was provided and\n *  %%output%% is the current array of UTF-8 code-points, which may\n *  be updated by the ``Utf8ErrorFunc``.\n *\n *  The value of the %%badCodepoint%% depends on the %%reason%%. See\n *  [[Utf8ErrorReason]] for details.\n *\n *  The function should return the number of bytes that should be skipped\n *  when control resumes to the FSM.\n */\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number) => number;\n\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n    assertArgument(false, `invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof(badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    const bytes = getBytes(_bytes, \"bytes\");\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            } else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00),\n                \"invalid surrogate pair\", \"str\", str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n};\n\n//export \nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n", "export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n", "export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n", "import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n", "import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n", "const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n", "/* Browser Crypto Shims */\n\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { pbkdf2 } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\n\nimport { assert, assertArgument } from \"../utils/index.js\";\n\n\ndeclare global {\n    interface Window { }\n\n    const window: Window;\n    const self: Window;\n}\n\n\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\nconst crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\n\n\nexport interface CryptoHasher {\n    update(data: Uint8Array): CryptoHasher;\n    digest(): Uint8Array;\n}\n\nexport function createHash(algo: string): CryptoHasher {\n    switch (algo) {\n        case \"sha256\": return sha256.create();\n        case \"sha512\": return sha512.create();\n    }\n    assertArgument(false, \"invalid hashing algorithm name\", \"algorithm\", algo);\n}\n\nexport function createHmac(_algo: string, key: Uint8Array): CryptoHasher {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid hmac algorithm\", \"algorithm\", _algo);\n    return hmac.create(algo, key);\n}\n\nexport function pbkdf2Sync(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, _algo: \"sha256\" | \"sha512\"): Uint8Array {\n    const algo = ({ sha256, sha512 }[_algo]);\n    assertArgument(algo != null, \"invalid pbkdf2 algorithm\", \"algorithm\", _algo);\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    assert(crypto != null, \"platform does not support secure random numbers\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"randomBytes\" });\n\n    assertArgument(Number.isInteger(length) && length > 0 && length <= 1024, \"invalid length\", \"length\", length);\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n", "/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _computeHmac = function(algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array): BytesLike {\n    return createHmac(algorithm, key).update(data).digest();\n}\n\nlet __computeHmac = _computeHmac;\n\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm: \"sha256\" | \"sha512\", _key: BytesLike, _data: BytesLike): string {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock =  function() { locked = true; }\ncomputeHmac.register = function(func: (algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array) => BytesLike) {\n    if (locked) { throw new Error(\"computeHmac is locked\"); }\n    __computeHmac = func;\n}\nObject.freeze(computeHmac);\n", "import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta \u03B8\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (\u03C1) and Pi (\u03C0)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (\u03C7)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (\u03B9)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n", "/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\n\nimport { keccak_256 } from \"@noble/hashes/sha3\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _keccak256 = function(data: Uint8Array): Uint8Array {\n    return keccak_256(data);\n}\n\nlet __keccak256: (data: Uint8Array) => BytesLike = _keccak256;\n\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function(): void { locked = true; }\nkeccak256.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"keccak256 is locked\"); }\n    __keccak256 = func;\n}\nObject.freeze(keccak256);\n", "import { createHash } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nconst _sha256 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha256\").update(data).digest();\n}\n\nconst _sha512 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha512\").update(data).digest();\n}\n\nlet __sha256: (data: Uint8Array) => BytesLike = _sha256;\nlet __sha512: (data: Uint8Array) => BytesLike = _sha512;\n\nlet locked256 = false, locked512 = false;\n\n\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function(): void { locked256 = true; }\nsha256.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked256) { throw new Error(\"sha256 is locked\"); }\n    __sha256 = func;\n}\nObject.freeze(sha256);\n\n\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function(): void { locked512 = true; }\nsha512.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked512) { throw new Error(\"sha512 is locked\"); }\n    __sha512 = func;\n}\nObject.freeze(sha256);\n", "/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n", "/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexport const ZeroHash: string = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n", "// NFKC (composed)             // (decomposed)\n\n/**\n *  A constant for the ether symbol (normalized using NFKC).\n *\n *  (**i.e.** ``\"\\\\u039e\"``)\n */\nexport const EtherSymbol: string = \"\\u039e\";  // \"\\uD835\\uDF63\";\n\n\n/**\n *  A constant for the [[link-eip-191]] personal message prefix.\n *\n *  (**i.e.** ``\"\\\\x19Ethereum Signed Message:\\\\n\"``)\n */\nexport const MessagePrefix: string = \"\\x19Ethereum Signed Message:\\n\";\n", "\nimport { ZeroHash } from \"../constants/index.js\";\nimport {\n    concat, dataLength, getBigInt, getBytes, getNumber, hexlify,\n    toBeArray, isHexString, zeroPadValue,\n    assertArgument, assertPrivate\n} from \"../utils/index.js\";\n\nimport type {\n    BigNumberish, BytesLike\n} from \"../utils/index.js\";\n\n\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\n\n\nconst _guard = { };\n\n// @TODO: Allow Uint8Array\n\n/**\n *  A SignatureLike\n *\n *  @_docloc: api/crypto:Signing\n */\nexport type SignatureLike = Signature | string | {\n    r: string;\n    s: string;\n    v: BigNumberish;\n    yParity?: 0 | 1;\n    yParityAndS?: string;\n} | {\n    r: string;\n    yParityAndS: string;\n    yParity?: 0 | 1;\n    s?: string;\n    v?: number;\n} | {\n    r: string;\n    s: string;\n    yParity: 0 | 1;\n    v?: BigNumberish;\n    yParityAndS?: string;\n};\n\nfunction toUint256(value: BigNumberish): string {\n    return zeroPadValue(toBeArray(value), 32);\n}\n\n/**\n *  A Signature  @TODO\n *\n *\n *  @_docloc: api/crypto:Signing\n */\nexport class Signature {\n    #r: string;\n    #s: string;\n    #v: 27 | 28;\n    #networkV: null | bigint;\n\n    /**\n     *  The ``r`` value for a signautre.\n     *\n     *  This represents the ``x`` coordinate of a \"reference\" or\n     *  challenge point, from which the ``y`` can be computed.\n     */\n    get r(): string { return this.#r; }\n    set r(value: BytesLike) {\n        assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n        this.#r = hexlify(value);\n    }\n\n    /**\n     *  The ``s`` value for a signature.\n     */\n    get s(): string { return this.#s; }\n    set s(_value: BytesLike) {\n        assertArgument(dataLength(_value) === 32, \"invalid s\", \"value\", _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n        this.#s = value;\n    }\n\n    /**\n     *  The ``v`` value for a signature.\n     *\n     *  Since a given ``x`` value for ``r`` has two possible values for\n     *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n     *  values to use.\n     *\n     *  It is normalized to the values ``27`` or ``28`` for legacy\n     *  purposes.\n     */\n    get v(): 27 | 28 { return this.#v; }\n    set v(value: BigNumberish) {\n        const v = getNumber(value, \"value\");\n        assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n        this.#v = v;\n    }\n\n    /**\n     *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get networkV(): null | bigint { return this.#networkV; }\n\n    /**\n     *  The chain ID for EIP-155 legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get legacyChainId(): null | bigint {\n        const v = this.networkV;\n        if (v == null) { return null; }\n        return Signature.getChainId(v);\n    }\n\n    /**\n     *  The ``yParity`` for the signature.\n     *\n     *  See ``v`` for more details on how this value is used.\n     */\n    get yParity(): 0 | 1 {\n        return (this.v === 27) ? 0: 1;\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation of the ``yParity``\n     *  and ``s`` compacted into a single ``bytes32``.\n     */\n    get yParityAndS(): string {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) { yParityAndS[0] |= 0x80; }\n        return hexlify(yParityAndS);\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation.\n     */\n    get compactSerialized(): string {\n        return concat([ this.r, this.yParityAndS ]);\n    }\n\n    /**\n     *  The serialized representation.\n     */\n    get serialized(): string {\n        return concat([ this.r, this.s, (this.yParity ? \"0x1c\": \"0x1b\") ]);\n    }\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, r: string, s: string, v: 27 | 28) {\n        assertPrivate(guard, _guard, \"Signature\");\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n\n    [Symbol.for('nodejs.util.inspect.custom')](): string {\n        return `Signature { r: \"${ this.r }\", s: \"${ this.s }\", yParity: ${ this.yParity }, networkV: ${ this.networkV } }`;\n    }\n\n    /**\n     *  Returns a new identical [[Signature]].\n     */\n    clone(): Signature {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) { clone.#networkV = this.networkV; }\n        return clone;\n    }\n\n    /**\n     *  Returns a representation that is compatible with ``JSON.stringify``.\n     */\n    toJSON(): any {\n        const networkV = this.networkV;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString(): null),\n            r: this.r, s: this.s, v: this.v,\n        };\n    }\n\n    /**\n     *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n     *\n     *  @example:\n     *    Signature.getChainId(45)\n     *    //_result:\n     *\n     *    Signature.getChainId(46)\n     *    //_result:\n     */\n    static getChainId(v: BigNumberish): bigint {\n        const bv = getBigInt(v, \"v\");\n\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) { return BN_0; }\n\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n\n        return (bv - BN_35) / BN_2;\n    }\n\n    /**\n     *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n     *\n     *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n     *  property to include the chain ID.\n     *\n     *  @example:\n     *    Signature.getChainIdV(5, 27)\n     *    //_result:\n     *\n     *    Signature.getChainIdV(5, 28)\n     *    //_result:\n     *\n     */\n    static getChainIdV(chainId: BigNumberish, v: 27 | 28): bigint {\n        return (getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n\n    /**\n     *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n     *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n     *\n     *  @example:\n     *    // The values 0 and 1 imply v is actually yParity\n     *    Signature.getNormalizedV(0)\n     *    //_result:\n     *\n     *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     *    Signature.getNormalizedV(27)\n     *    //_result:\n     *\n     *    // Legacy EIP-155 transaction (i.e. >= 35)\n     *    Signature.getNormalizedV(46)\n     *    //_result:\n     *\n     *    // Invalid values throw\n     *    Signature.getNormalizedV(5)\n     *    //_error:\n     */\n    static getNormalizedV(v: BigNumberish): 27 | 28 {\n        const bv = getBigInt(v);\n\n        if (bv === BN_0 || bv === BN_27) { return 27; }\n        if (bv === BN_1 || bv === BN_28) { return 28; }\n\n        assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27: 28;\n    }\n\n    /**\n     *  Creates a new [[Signature]].\n     *\n     *  If no %%sig%% is provided, a new [[Signature]] is created\n     *  with default values.\n     *\n     *  If %%sig%% is a string, it is parsed.\n     */\n    static from(sig?: SignatureLike): Signature {\n        function assertError(check: unknown, message: string): asserts check {\n            assertArgument(check, message, \"signature\", sig);\n        };\n\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n\n        if (typeof(sig) === \"string\") {\n            const bytes = getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28: 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, \"non-canonical s\");\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            assertError(false, \"invalid raw signature length\");\n        }\n\n        if (sig instanceof Signature) { return sig.clone(); }\n\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, \"missing r\");\n        const r = toUint256(_r);\n\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function(s?: string, yParityAndS?: string) {\n            if (s != null) { return toUint256(s); }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n\n            assertError(false, \"missing s\");\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, \"non-canonical s\");\n\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function(_v?: BigNumberish, yParityAndS?: string, yParity?: number): { networkV?: bigint, v: 27 | 28 } {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: ((v >= BN_35) ? v: undefined),\n                    v: Signature.getNormalizedV(v)\n                };\n            }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                return { v: ((getBytes(yParityAndS)[0] & 0x80) ? 28: 27) };\n            }\n\n            if (yParity != null) {\n                switch (yParity) {\n                    case 0: return { v: 27 };\n                    case 1: return { v: 28 };\n                }\n                assertError(false, \"invalid yParity\");\n            }\n\n            assertError(false, \"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) { result.#networkV =  networkV; }\n\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(!(\"yParity\" in sig && sig.yParity !== result.yParity), \"yParity mismatch\");\n        assertError(!(\"yParityAndS\" in sig && sig.yParityAndS !== result.yParityAndS), \"yParityAndS mismatch\");\n\n        return result;\n    }\n}\n\n", "/**\n *  Add details about signing here.\n *\n *  @_subsection: api/crypto:Signing  [about-signing]\n */\n\nimport * as secp256k1 from \"@noble/secp256k1\";\n\nimport {\n    concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { computeHmac } from \"./hmac.js\";\nimport { Signature } from \"./signature.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"./index.js\";\n\n\n//const N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n// Make noble-secp256k1 sync\nsecp256k1.utils.hmacSha256Sync = function(key: Uint8Array, ...messages: Array<Uint8Array>): Uint8Array {\n    return getBytes(computeHmac(\"sha256\", key, concat(messages)));\n}\n\n/**\n *  A **SigningKey** provides high-level access to the elliptic curve\n *  cryptography (ECC) operations and key management.\n */\nexport class SigningKey {\n    #privateKey: string;\n\n    /**\n     *  Creates a new **SigningKey** for %%privateKey%%.\n     */\n    constructor(privateKey: BytesLike) {\n        assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n        this.#privateKey = hexlify(privateKey);\n    }\n\n    /**\n     *  The private key.\n     */\n    get privateKey(): string { return this.#privateKey; }\n\n    /**\n     *  The uncompressed public key.\n     *\n     * This will always begin with the prefix ``0x04`` and be 132\n     * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n     */\n    get publicKey(): string { return SigningKey.computePublicKey(this.#privateKey); }\n\n    /**\n     *  The compressed public key.\n     *\n     *  This will always begin with either the prefix ``0x02`` or ``0x03``\n     *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n     *  nibbles)\n     */\n    get compressedPublicKey(): string { return SigningKey.computePublicKey(this.#privateKey, true); }\n\n    /**\n     *  Return the signature of the signed %%digest%%.\n     */\n    sign(digest: BytesLike): Signature {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const [ sigDer, recid ] = secp256k1.signSync(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            recovered: true,\n            canonical: true\n        });\n\n        const sig = secp256k1.Signature.fromHex(sigDer);\n        return Signature.from({\n            r: toBeHex(\"0x\" + sig.r.toString(16), 32),\n            s: toBeHex(\"0x\" + sig.s.toString(16), 32),\n            v: (recid ? 0x1c: 0x1b)\n        });\n    }\n\n    /**\n     *  Returns the [[link-wiki-ecdh]] shared secret between this\n     *  private key and the %%other%% key.\n     *\n     *  The %%other%% key may be any type of key, a raw public key,\n     *  a compressed/uncompressed pubic key or aprivate key.\n     *\n     *  Best practice is usually to use a cryptographic hash on the\n     *  returned value before using it as a symetric secret.\n     *\n     *  @example:\n     *    sign1 = new SigningKey(id(\"some-secret-1\"))\n     *    sign2 = new SigningKey(id(\"some-secret-2\"))\n     *\n     *    // Notice that privA.computeSharedSecret(pubB)...\n     *    sign1.computeSharedSecret(sign2.publicKey)\n     *    //_result:\n     *\n     *    // ...is equal to privB.computeSharedSecret(pubA).\n     *    sign2.computeSharedSecret(sign1.publicKey)\n     *    //_result:\n     */\n    computeSharedSecret(other: BytesLike): string {\n        const pubKey = SigningKey.computePublicKey(other);\n        console.log(pubKey);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey)));\n    }\n\n    /**\n     *  Compute the public key for %%key%%, optionally %%compressed%%.\n     *\n     *  The %%key%% may be any type of key, a raw public key, a\n     *  compressed/uncompressed public key or private key.\n     *\n     *  @example:\n     *    sign = new SigningKey(id(\"some-secret\"));\n     *\n     *    // Compute the uncompressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey)\n     *    //_result:\n     *\n     *    // Compute the compressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey, true)\n     *    //_result:\n     *\n     *    // Compute the uncompressed public key\n     *    SigningKey.computePublicKey(sign.publicKey, false);\n     *    //_result:\n     *\n     *    // Compute the Compressed a public key\n     *    SigningKey.computePublicKey(sign.publicKey, true);\n     *    //_result:\n     */\n    static computePublicKey(key: BytesLike, compressed?: boolean): string {\n        let bytes = getBytes(key, \"key\");\n\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n\n        const point = secp256k1.Point.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n\n    /**\n     *  Returns the public key for the private key which produced the\n     *  %%signature%% for the given %%digest%%.\n     *\n     *  @example:\n     *    key = new SigningKey(id(\"some-secret\"))\n     *    digest = id(\"hello world\")\n     *    sig = key.sign(digest)\n     *\n     *    // Notice the signer public key...\n     *    key.publicKey\n     *    //_result:\n     *\n     *    // ...is equal to the recovered public key\n     *    SigningKey.recoverPublicKey(digest, sig)\n     *    //_result:\n     *\n     */\n    static recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = Signature.from(signature);\n        const der = secp256k1.Signature.fromCompact(getBytesCopy(concat([ sig.r, sig.s ]))).toDERRawBytes();\n\n        const pubKey = secp256k1.recoverPublicKey(getBytesCopy(digest), der, sig.yParity);\n        assertArgument(pubKey != null, \"invalid signautre for digest\", \"signature\", signature);\n\n        return hexlify(pubKey);\n    }\n\n    /**\n     *  Returns the point resulting from adding the ellipic curve points\n     *  %%p0%% and %%p1%%.\n     *\n     *  This is not a common function most developers should require, but\n     *  can be useful for certain privacy-specific techniques.\n     *\n     *  For example, it is used by [[HDNodeWallet]] to compute child\n     *  addresses from parent public keys and chain codes.\n     */\n    static addPoints(p0: BytesLike, p1: BytesLike, compressed?: boolean): string {\n        const pub0 = secp256k1.Point.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.Point.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed)\n    }\n}\n\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\n\nfunction getChecksumAddress(address: string): string {\n//    if (!isHexString(address, 20)) {\n//        logger.throwArgumentError(\"invalid address\", \"address\", address);\n//    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = getBytes(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nconst Base36 = (function() {;\n    const result: Record<string, bigint> = { };\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\n\nfunction fromBase36(value: string): bigint {\n    value = value.toLowerCase();\n\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address: string): string {\n\n    assertArgument(typeof(address) === \"string\", \"invalid address\", \"address\", address);\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) { address = \"0x\" + address; }\n\n        const result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address,\n            \"bad address checksum\", \"address\", address);\n\n        return result;\n    }\n\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) { result = \"0\" + result; }\n        return  getChecksumAddress(\"0x\" + result);\n    }\n\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address: string): string {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n", "import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key: string | SigningKey): string {\n    let pubkey: string;\n    if (typeof(key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    } else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { MessagePrefix } from \"../constants/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, toUtf8Bytes } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\n/**\n *  Computes the [[link-eip-191]] personal-sign message digest to sign.\n *\n *  This prefixes the message with [[MessagePrefix]] and the decimal length\n *  of %%message%% and computes the [[keccak256]] digest.\n *\n *  If %%message%% is a string, it is converted to its UTF-8 bytes\n *  first. To compute the digest of a [[DataHexString]], it must be converted\n *  to [bytes](getBytes).\n *\n *  @example:\n *    hashMessage(\"Hello World\")\n *    //_result:\n *\n *    // Hashes the SIX (6) string characters, i.e.\n *    // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n *    hashMessage(\"0x4243\")\n *    //_result:\n *\n *    // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n *    hashMessage(getBytes(\"0x4243\"))\n *    //_result:\n *\n *    // ...which is equal to using data\n *    hashMessage(new Uint8Array([ 0x42, 0x43 ]))\n *    //_result:\n *\n */\nexport function hashMessage(message: Uint8Array | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(MessagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\nexport function verifyMessage(message: Uint8Array | string, sig: SignatureLike): string {\n    const digest = hashMessage(message);\n    return recoverAddress(digest, sig);\n}\n", "export default function download(content, fileName, contentType) {\n  var a = document.createElement(\"a\");\n  var file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n}", "export default function splitHash(str) {\n  const last4 = str.substr(str.length - 4);\n  const rest = str.slice(0, -4);\n  return { start: rest, end: last4 };\n}", "import { sha256 } from 'ethers'\n\nexport default function parseKeysCli(keys) {\n  const primaryPublicKeyRaw = keys['1']\n  const primaryPublicKeyHash = sha256('0x' + primaryPublicKeyRaw.slice(2))\n\n  const secondaryPublicKeyRaw = keys['2']\n  let secondaryPublicKeyHash = null\n\n  if (keys['2']) {\n    secondaryPublicKeyHash = sha256('0x' + secondaryPublicKeyRaw.slice(2))\n  }\n\n  const tertiaryPublicKeyRaw = keys['3']\n  let tertiaryPublicKeyHash = null\n\n  if (keys['3']) {\n    tertiaryPublicKeyHash = sha256('0x' + tertiaryPublicKeyRaw.slice(2))\n  }\n\n  return {\n    primaryPublicKeyRaw,\n    primaryPublicKeyHash,\n    secondaryPublicKeyRaw,\n    secondaryPublicKeyHash,\n    tertiaryPublicKeyRaw,\n    tertiaryPublicKeyHash,\n  }\n}\n"],
  "mappings": "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AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;A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;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,KAAK;AAAA,UACH,KAAK;AAAA,UACL,QAAQ;AAAA,YACN;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA;;;AC3wBA;AAAA,mDAAAC,UAAA;AAAA;AAEA,UAAI,SAASA;AAEb,UAAIC,QAAO;AACX,UAAI,QAAQ;AACZ,UAAIC,SAAQ;AAEZ,UAAIC,UAASD,OAAM;AAEnB,eAAS,YAAY,SAAS;AAC5B,YAAI,QAAQ,SAAS;AACnB,eAAK,QAAQ,IAAI,MAAM,MAAM,OAAO;AAAA,iBAC7B,QAAQ,SAAS;AACxB,eAAK,QAAQ,IAAI,MAAM,QAAQ,OAAO;AAAA;AAEtC,eAAK,QAAQ,IAAI,MAAM,KAAK,OAAO;AACrC,aAAK,IAAI,KAAK,MAAM;AACpB,aAAK,IAAI,KAAK,MAAM;AACpB,aAAK,OAAO,QAAQ;AAEpB,QAAAC,QAAO,KAAK,EAAE,SAAS,GAAG,eAAe;AACzC,QAAAA,QAAO,KAAK,EAAE,IAAI,KAAK,CAAC,EAAE,WAAW,GAAG,yBAAyB;AAAA,MACnE;AACA,aAAO,cAAc;AAErB,eAAS,YAAY,MAAM,SAAS;AAClC,eAAO,eAAe,QAAQ,MAAM;AAAA,UAClC,cAAc;AAAA,UACd,YAAY;AAAA,UACZ,KAAK,WAAW;AACd,gBAAIC,SAAQ,IAAI,YAAY,OAAO;AACnC,mBAAO,eAAe,QAAQ,MAAM;AAAA,cAClC,cAAc;AAAA,cACd,YAAY;AAAA,cACZ,OAAOA;AAAA,YACT,CAAC;AACD,mBAAOA;AAAA,UACT;AAAA,QACF,CAAC;AAAA,MACH;AAEA,kBAAY,QAAQ;AAAA,QAClB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAMH,MAAK;AAAA,QACX,MAAM;AAAA,QACN,GAAG;AAAA,UACD;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AAED,kBAAY,QAAQ;AAAA,QAClB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAMA,MAAK;AAAA,QACX,MAAM;AAAA,QACN,GAAG;AAAA,UACD;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AAED,kBAAY,QAAQ;AAAA,QAClB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAMA,MAAK;AAAA,QACX,MAAM;AAAA,QACN,GAAG;AAAA,UACD;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AAED,kBAAY,QAAQ;AAAA,QAClB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QAEH,GAAG;AAAA,QAEH,GAAG;AAAA,QAEH,GAAG;AAAA,QAEH,MAAMA,MAAK;AAAA,QACX,MAAM;AAAA,QACN,GAAG;AAAA,UACD;AAAA,UAEA;AAAA,QAEF;AAAA,MACF,CAAC;AAED,kBAAY,QAAQ;AAAA,QAClB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QAGH,GAAG;AAAA,QAGH,GAAG;AAAA,QAGH,GAAG;AAAA,QAGH,MAAMA,MAAK;AAAA,QACX,MAAM;AAAA,QACN,GAAG;AAAA,UACD;AAAA,UAGA;AAAA,QAGF;AAAA,MACF,CAAC;AAED,kBAAY,cAAc;AAAA,QACxB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAMA,MAAK;AAAA,QACX,MAAM;AAAA,QACN,GAAG;AAAA,UACD;AAAA,QACF;AAAA,MACF,CAAC;AAED,kBAAY,WAAW;AAAA,QACrB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,QAEH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAMA,MAAK;AAAA,QACX,MAAM;AAAA,QACN,GAAG;AAAA,UACD;AAAA;AAAA,UAGA;AAAA,QACF;AAAA,MACF,CAAC;AAED,UAAI;AACJ,UAAI;AACF,cAAM;AAAA,MACR,SAAS,GAAP;AACA,cAAM;AAAA,MACR;AAEA,kBAAY,aAAa;AAAA,QACvB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAMA,MAAK;AAAA;AAAA,QAGX,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,OAAO;AAAA,UACL;AAAA,YACE,GAAG;AAAA,YACH,GAAG;AAAA,UACL;AAAA,UACA;AAAA,YACE,GAAG;AAAA,YACH,GAAG;AAAA,UACL;AAAA,QACF;AAAA,QAEA,MAAM;AAAA,QACN,GAAG;AAAA,UACD;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AAAA;AAAA;;;AC7MD;AAAA,8CAAAI,UAAAC,SAAA;AAAA;AAEA,UAAIC,QAAO;AACX,UAAIC,SAAQ;AACZ,UAAIC,UAAS;AAEb,eAAS,SAAS,SAAS;AACzB,YAAI,EAAE,gBAAgB;AACpB,iBAAO,IAAI,SAAS,OAAO;AAC7B,aAAK,OAAO,QAAQ;AACpB,aAAK,aAAa,CAAC,CAAC,QAAQ;AAE5B,aAAK,SAAS,KAAK,KAAK;AACxB,aAAK,aAAa,QAAQ,cAAc,KAAK,KAAK;AAElD,aAAK,UAAU;AACf,aAAK,iBAAiB;AACtB,aAAK,IAAI;AACT,aAAK,IAAI;AAET,YAAI,UAAUD,OAAM,QAAQ,QAAQ,SAAS,QAAQ,cAAc,KAAK;AACxE,YAAI,QAAQA,OAAM,QAAQ,QAAQ,OAAO,QAAQ,YAAY,KAAK;AAClE,YAAI,OAAOA,OAAM,QAAQ,QAAQ,MAAM,QAAQ,WAAW,KAAK;AAC/D,QAAAC;AAAA,UAAO,QAAQ,UAAW,KAAK,aAAa;AAAA,UACrC,qCAAqC,KAAK,aAAa;AAAA,QAAO;AACrE,aAAK,MAAM,SAAS,OAAO,IAAI;AAAA,MACjC;AACA,MAAAH,QAAO,UAAU;AAEjB,eAAS,UAAU,QAAQ,SAAS,KAAK,SAAS,OAAO,MAAM;AAC7D,YAAI,OAAO,QAAQ,OAAO,KAAK,EAAE,OAAO,IAAI;AAE5C,aAAK,IAAI,IAAI,MAAM,KAAK,SAAS,CAAC;AAClC,aAAK,IAAI,IAAI,MAAM,KAAK,SAAS,CAAC;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,QAAQ,KAAK;AACtC,eAAK,EAAE,CAAC,IAAI;AACZ,eAAK,EAAE,CAAC,IAAI;AAAA,QACd;AAEA,aAAK,QAAQ,IAAI;AACjB,aAAK,UAAU;AACf,aAAK,iBAAiB;AAAA,MACxB;AAEA,eAAS,UAAU,QAAQ,SAASI,QAAO;AACzC,eAAO,IAAIH,MAAK,KAAK,KAAK,MAAM,KAAK,CAAC;AAAA,MACxC;AAEA,eAAS,UAAU,UAAU,SAAS,OAAO,MAAM;AACjD,YAAI,OAAO,KAAK,MAAM,EACN,OAAO,KAAK,CAAC,EACb,OAAO,CAAE,CAAK,CAAC;AAC/B,YAAI;AACF,iBAAO,KAAK,OAAO,IAAI;AACzB,aAAK,IAAI,KAAK,OAAO;AACrB,aAAK,IAAI,KAAK,MAAM,EAAE,OAAO,KAAK,CAAC,EAAE,OAAO;AAC5C,YAAI,CAAC;AACH;AAEF,aAAK,IAAI,KAAK,MAAM,EACN,OAAO,KAAK,CAAC,EACb,OAAO,CAAE,CAAK,CAAC,EACf,OAAO,IAAI,EACX,OAAO;AACrB,aAAK,IAAI,KAAK,MAAM,EAAE,OAAO,KAAK,CAAC,EAAE,OAAO;AAAA,MAC9C;AAEA,eAAS,UAAU,SAAS,SAAS,OAAO,SAAS,YAAYI,MAAK,QAAQ;AAE5E,YAAI,OAAO,eAAe,UAAU;AAClC,mBAASA;AACT,UAAAA,OAAM;AACN,uBAAa;AAAA,QACf;AAEA,kBAAUH,OAAM,QAAQ,SAAS,UAAU;AAC3C,QAAAG,OAAMH,OAAM,QAAQG,MAAK,MAAM;AAE/B,QAAAF;AAAA,UAAO,QAAQ,UAAW,KAAK,aAAa;AAAA,UACrC,qCAAqC,KAAK,aAAa;AAAA,QAAO;AAErE,aAAK,QAAQ,QAAQ,OAAOE,QAAO,CAAC,CAAC,CAAC;AACtC,aAAK,UAAU;AAAA,MACjB;AAEA,eAAS,UAAU,WAAW,SAAS,SAAS,KAAK,KAAKA,MAAK,QAAQ;AACrE,YAAI,KAAK,UAAU,KAAK;AACtB,gBAAM,IAAI,MAAM,oBAAoB;AAGtC,YAAI,OAAO,QAAQ,UAAU;AAC3B,mBAASA;AACT,UAAAA,OAAM;AACN,gBAAM;AAAA,QACR;AAGA,YAAIA,MAAK;AACP,UAAAA,OAAMH,OAAM,QAAQG,MAAK,UAAU,KAAK;AACxC,eAAK,QAAQA,IAAG;AAAA,QAClB;AAEA,YAAI,OAAO,CAAC;AACZ,eAAO,KAAK,SAAS,KAAK;AACxB,eAAK,IAAI,KAAK,MAAM,EAAE,OAAO,KAAK,CAAC,EAAE,OAAO;AAC5C,iBAAO,KAAK,OAAO,KAAK,CAAC;AAAA,QAC3B;AAEA,YAAI,MAAM,KAAK,MAAM,GAAG,GAAG;AAC3B,aAAK,QAAQA,IAAG;AAChB,aAAK;AACL,eAAOH,OAAM,OAAO,KAAK,GAAG;AAAA,MAC9B;AAAA;AAAA;;;AChHA;AAAA,mDAAAI,UAAAC,SAAA;AAAA;AAEA,UAAI,KAAK;AACT,UAAIC,SAAQ;AACZ,UAAIC,UAASD,OAAM;AAEnB,eAAS,QAAQ,IAAI,SAAS;AAC5B,aAAK,KAAK;AACV,aAAK,OAAO;AACZ,aAAK,MAAM;AAGX,YAAI,QAAQ;AACV,eAAK,eAAe,QAAQ,MAAM,QAAQ,OAAO;AACnD,YAAI,QAAQ;AACV,eAAK,cAAc,QAAQ,KAAK,QAAQ,MAAM;AAAA,MAClD;AACA,MAAAD,QAAO,UAAU;AAEjB,cAAQ,aAAa,SAAS,WAAW,IAAI,KAAK,KAAK;AACrD,YAAI,eAAe;AACjB,iBAAO;AAET,eAAO,IAAI,QAAQ,IAAI;AAAA,UACrB;AAAA,UACA,QAAQ;AAAA,QACV,CAAC;AAAA,MACH;AAEA,cAAQ,cAAc,SAAS,YAAY,IAAI,MAAM,KAAK;AACxD,YAAI,gBAAgB;AAClB,iBAAO;AAET,eAAO,IAAI,QAAQ,IAAI;AAAA,UACrB;AAAA,UACA,SAAS;AAAA,QACX,CAAC;AAAA,MACH;AAEA,cAAQ,UAAU,WAAW,SAAS,WAAW;AAC/C,YAAI,MAAM,KAAK,UAAU;AAEzB,YAAI,IAAI,WAAW;AACjB,iBAAO,EAAE,QAAQ,OAAO,QAAQ,qBAAqB;AACvD,YAAI,CAAC,IAAI,SAAS;AAChB,iBAAO,EAAE,QAAQ,OAAO,QAAQ,4BAA4B;AAC9D,YAAI,CAAC,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,WAAW;AACvC,iBAAO,EAAE,QAAQ,OAAO,QAAQ,sBAAsB;AAExD,eAAO,EAAE,QAAQ,MAAM,QAAQ,KAAK;AAAA,MACtC;AAEA,cAAQ,UAAU,YAAY,SAAS,UAAU,SAAS,KAAK;AAE7D,YAAI,OAAO,YAAY,UAAU;AAC/B,gBAAM;AACN,oBAAU;AAAA,QACZ;AAEA,YAAI,CAAC,KAAK;AACR,eAAK,MAAM,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI;AAEpC,YAAI,CAAC;AACH,iBAAO,KAAK;AAEd,eAAO,KAAK,IAAI,OAAO,KAAK,OAAO;AAAA,MACrC;AAEA,cAAQ,UAAU,aAAa,SAAS,WAAW,KAAK;AACtD,YAAI,QAAQ;AACV,iBAAO,KAAK,KAAK,SAAS,IAAI,CAAC;AAAA;AAE/B,iBAAO,KAAK;AAAA,MAChB;AAEA,cAAQ,UAAU,iBAAiB,SAAS,eAAe,KAAK,KAAK;AACnE,aAAK,OAAO,IAAI,GAAG,KAAK,OAAO,EAAE;AAIjC,aAAK,OAAO,KAAK,KAAK,KAAK,KAAK,GAAG,MAAM,CAAC;AAAA,MAC5C;AAEA,cAAQ,UAAU,gBAAgB,SAAS,cAAc,KAAK,KAAK;AACjE,YAAI,IAAI,KAAK,IAAI,GAAG;AAIlB,cAAI,KAAK,GAAG,MAAM,SAAS,QAAQ;AACjC,YAAAE,QAAO,IAAI,GAAG,mBAAmB;AAAA,UACnC,WAAW,KAAK,GAAG,MAAM,SAAS,WACvB,KAAK,GAAG,MAAM,SAAS,WAAW;AAC3C,YAAAA,QAAO,IAAI,KAAK,IAAI,GAAG,8BAA8B;AAAA,UACvD;AACA,eAAK,MAAM,KAAK,GAAG,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC;AAC3C;AAAA,QACF;AACA,aAAK,MAAM,KAAK,GAAG,MAAM,YAAY,KAAK,GAAG;AAAA,MAC/C;AAGA,cAAQ,UAAU,SAAS,SAAS,OAAO,KAAK;AAC9C,YAAG,CAAC,IAAI,SAAS,GAAG;AAClB,UAAAA,QAAO,IAAI,SAAS,GAAG,4BAA4B;AAAA,QACrD;AACA,eAAO,IAAI,IAAI,KAAK,IAAI,EAAE,KAAK;AAAA,MACjC;AAGA,cAAQ,UAAU,OAAO,SAASC,MAAK,KAAK,KAAK,SAAS;AACxD,eAAO,KAAK,GAAG,KAAK,KAAK,MAAM,KAAK,OAAO;AAAA,MAC7C;AAEA,cAAQ,UAAU,SAAS,SAASC,QAAO,KAAK,WAAW;AACzD,eAAO,KAAK,GAAG,OAAO,KAAK,WAAW,IAAI;AAAA,MAC5C;AAEA,cAAQ,UAAU,UAAU,SAAS,UAAU;AAC7C,eAAO,iBAAiB,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI,CAAC,KACtD,YAAY,KAAK,OAAO,KAAK,IAAI,QAAQ,KAAK;AAAA,MACvD;AAAA;AAAA;;;ACxHA;AAAA,yDAAAC,UAAAC,SAAA;AAAA;AAEA,UAAI,KAAK;AAET,UAAIC,SAAQ;AACZ,UAAIC,UAASD,OAAM;AAEnB,eAASE,WAAU,SAAS,KAAK;AAC/B,YAAI,mBAAmBA;AACrB,iBAAO;AAET,YAAI,KAAK,WAAW,SAAS,GAAG;AAC9B;AAEF,QAAAD,QAAO,QAAQ,KAAK,QAAQ,GAAG,0BAA0B;AACzD,aAAK,IAAI,IAAI,GAAG,QAAQ,GAAG,EAAE;AAC7B,aAAK,IAAI,IAAI,GAAG,QAAQ,GAAG,EAAE;AAC7B,YAAI,QAAQ,kBAAkB;AAC5B,eAAK,gBAAgB;AAAA;AAErB,eAAK,gBAAgB,QAAQ;AAAA,MACjC;AACA,MAAAF,QAAO,UAAUG;AAEjB,eAAS,WAAW;AAClB,aAAK,QAAQ;AAAA,MACf;AAEA,eAAS,UAAU,KAAK,GAAG;AACzB,YAAI,UAAU,IAAI,EAAE,OAAO;AAC3B,YAAI,EAAE,UAAU,MAAO;AACrB,iBAAO;AAAA,QACT;AACA,YAAI,WAAW,UAAU;AAGzB,YAAI,aAAa,KAAK,WAAW,GAAG;AAClC,iBAAO;AAAA,QACT;AAEA,YAAI,MAAM;AACV,iBAAS,IAAI,GAAG,MAAM,EAAE,OAAO,IAAI,UAAU,KAAK,OAAO;AACvD,kBAAQ;AACR,iBAAO,IAAI,GAAG;AACd,mBAAS;AAAA,QACX;AAGA,YAAI,OAAO,KAAM;AACf,iBAAO;AAAA,QACT;AAEA,UAAE,QAAQ;AACV,eAAO;AAAA,MACT;AAEA,eAAS,UAAU,KAAK;AACtB,YAAI,IAAI;AACR,YAAI,MAAM,IAAI,SAAS;AACvB,eAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,QAAS,IAAI,KAAK;AACjD;AAAA,QACF;AACA,YAAI,MAAM,GAAG;AACX,iBAAO;AAAA,QACT;AACA,eAAO,IAAI,MAAM,CAAC;AAAA,MACpB;AAEA,MAAAA,WAAU,UAAU,aAAa,SAAS,WAAW,MAAM,KAAK;AAC9D,eAAOF,OAAM,QAAQ,MAAM,GAAG;AAC9B,YAAI,IAAI,IAAI,SAAS;AACrB,YAAI,KAAK,EAAE,OAAO,MAAM,IAAM;AAC5B,iBAAO;AAAA,QACT;AACA,YAAI,MAAM,UAAU,MAAM,CAAC;AAC3B,YAAI,QAAQ,OAAO;AACjB,iBAAO;AAAA,QACT;AACA,YAAK,MAAM,EAAE,UAAW,KAAK,QAAQ;AACnC,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,EAAE,OAAO,MAAM,GAAM;AAC5B,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,UAAU,MAAM,CAAC;AAC5B,YAAI,SAAS,OAAO;AAClB,iBAAO;AAAA,QACT;AACA,YAAI,IAAI,KAAK,MAAM,EAAE,OAAO,OAAO,EAAE,KAAK;AAC1C,UAAE,SAAS;AACX,YAAI,KAAK,EAAE,OAAO,MAAM,GAAM;AAC5B,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,UAAU,MAAM,CAAC;AAC5B,YAAI,SAAS,OAAO;AAClB,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,WAAW,OAAO,EAAE,OAAO;AAClC,iBAAO;AAAA,QACT;AACA,YAAI,IAAI,KAAK,MAAM,EAAE,OAAO,OAAO,EAAE,KAAK;AAC1C,YAAI,EAAE,CAAC,MAAM,GAAG;AACd,cAAI,EAAE,CAAC,IAAI,KAAM;AACf,gBAAI,EAAE,MAAM,CAAC;AAAA,UACf,OAAO;AAEL,mBAAO;AAAA,UACT;AAAA,QACF;AACA,YAAI,EAAE,CAAC,MAAM,GAAG;AACd,cAAI,EAAE,CAAC,IAAI,KAAM;AACf,gBAAI,EAAE,MAAM,CAAC;AAAA,UACf,OAAO;AAEL,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,aAAK,IAAI,IAAI,GAAG,CAAC;AACjB,aAAK,IAAI,IAAI,GAAG,CAAC;AACjB,aAAK,gBAAgB;AAErB,eAAO;AAAA,MACT;AAEA,eAAS,gBAAgB,KAAK,KAAK;AACjC,YAAI,MAAM,KAAM;AACd,cAAI,KAAK,GAAG;AACZ;AAAA,QACF;AACA,YAAI,SAAS,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK,QAAQ;AAC/C,YAAI,KAAK,SAAS,GAAI;AACtB,eAAO,EAAE,QAAQ;AACf,cAAI,KAAM,SAAS,UAAU,KAAM,GAAI;AAAA,QACzC;AACA,YAAI,KAAK,GAAG;AAAA,MACd;AAEA,MAAAE,WAAU,UAAU,QAAQ,SAAS,MAAM,KAAK;AAC9C,YAAI,IAAI,KAAK,EAAE,QAAQ;AACvB,YAAI,IAAI,KAAK,EAAE,QAAQ;AAGvB,YAAI,EAAE,CAAC,IAAI;AACT,cAAI,CAAE,CAAE,EAAE,OAAO,CAAC;AAEpB,YAAI,EAAE,CAAC,IAAI;AACT,cAAI,CAAE,CAAE,EAAE,OAAO,CAAC;AAEpB,YAAI,UAAU,CAAC;AACf,YAAI,UAAU,CAAC;AAEf,eAAO,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,MAAO;AAC9B,cAAI,EAAE,MAAM,CAAC;AAAA,QACf;AACA,YAAI,MAAM,CAAE,CAAK;AACjB,wBAAgB,KAAK,EAAE,MAAM;AAC7B,cAAM,IAAI,OAAO,CAAC;AAClB,YAAI,KAAK,CAAI;AACb,wBAAgB,KAAK,EAAE,MAAM;AAC7B,YAAI,WAAW,IAAI,OAAO,CAAC;AAC3B,YAAI,MAAM,CAAE,EAAK;AACjB,wBAAgB,KAAK,SAAS,MAAM;AACpC,cAAM,IAAI,OAAO,QAAQ;AACzB,eAAOF,OAAM,OAAO,KAAK,GAAG;AAAA,MAC9B;AAAA;AAAA;;;ACrKA;AAAA,qDAAAG,UAAAC,SAAA;AAAA;AAEA,UAAI,KAAK;AACT,UAAI,WAAW;AACf,UAAIC,SAAQ;AACZ,UAAI,SAAS;AACb,UAAI,OAAO;AACX,UAAIC,UAASD,OAAM;AAEnB,UAAI,UAAU;AACd,UAAIE,aAAY;AAEhB,eAAS,GAAG,SAAS;AACnB,YAAI,EAAE,gBAAgB;AACpB,iBAAO,IAAI,GAAG,OAAO;AAGvB,YAAI,OAAO,YAAY,UAAU;AAC/B,UAAAD;AAAA,YAAO,OAAO,UAAU,eAAe,KAAK,QAAQ,OAAO;AAAA,YACzD,mBAAmB;AAAA,UAAO;AAE5B,oBAAU,OAAO,OAAO;AAAA,QAC1B;AAGA,YAAI,mBAAmB,OAAO;AAC5B,oBAAU,EAAE,OAAO,QAAQ;AAE7B,aAAK,QAAQ,QAAQ,MAAM;AAC3B,aAAK,IAAI,KAAK,MAAM;AACpB,aAAK,KAAK,KAAK,EAAE,MAAM,CAAC;AACxB,aAAK,IAAI,KAAK,MAAM;AAGpB,aAAK,IAAI,QAAQ,MAAM;AACvB,aAAK,EAAE,WAAW,QAAQ,MAAM,EAAE,UAAU,IAAI,CAAC;AAGjD,aAAK,OAAO,QAAQ,QAAQ,QAAQ,MAAM;AAAA,MAC5C;AACA,MAAAF,QAAO,UAAU;AAEjB,SAAG,UAAU,UAAU,SAAS,QAAQ,SAAS;AAC/C,eAAO,IAAI,QAAQ,MAAM,OAAO;AAAA,MAClC;AAEA,SAAG,UAAU,iBAAiB,SAAS,eAAe,MAAM,KAAK;AAC/D,eAAO,QAAQ,YAAY,MAAM,MAAM,GAAG;AAAA,MAC5C;AAEA,SAAG,UAAU,gBAAgB,SAAS,cAAc,KAAK,KAAK;AAC5D,eAAO,QAAQ,WAAW,MAAM,KAAK,GAAG;AAAA,MAC1C;AAEA,SAAG,UAAU,aAAa,SAAS,WAAW,SAAS;AACrD,YAAI,CAAC;AACH,oBAAU,CAAC;AAGb,YAAI,OAAO,IAAI,SAAS;AAAA,UACtB,MAAM,KAAK;AAAA,UACX,MAAM,QAAQ;AAAA,UACd,SAAS,QAAQ,WAAW;AAAA,UAC5B,SAAS,QAAQ,WAAW,KAAK,KAAK,KAAK,YAAY;AAAA,UACvD,YAAY,QAAQ,WAAW,QAAQ,cAAc;AAAA,UACrD,OAAO,KAAK,EAAE,QAAQ;AAAA,QACxB,CAAC;AAED,YAAII,SAAQ,KAAK,EAAE,WAAW;AAC9B,YAAI,MAAM,KAAK,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;AAC9B,mBAAS;AACP,cAAI,OAAO,IAAI,GAAG,KAAK,SAASA,MAAK,CAAC;AACtC,cAAI,KAAK,IAAI,GAAG,IAAI;AAClB;AAEF,eAAK,MAAM,CAAC;AACZ,iBAAO,KAAK,eAAe,IAAI;AAAA,QACjC;AAAA,MACF;AAEA,SAAG,UAAU,eAAe,SAAS,aAAa,KAAK,WAAW;AAChE,YAAI,QAAQ,IAAI,WAAW,IAAI,IAAI,KAAK,EAAE,UAAU;AACpD,YAAI,QAAQ;AACV,gBAAM,IAAI,MAAM,KAAK;AACvB,YAAI,CAAC,aAAa,IAAI,IAAI,KAAK,CAAC,KAAK;AACnC,iBAAO,IAAI,IAAI,KAAK,CAAC;AAAA;AAErB,iBAAO;AAAA,MACX;AAEA,SAAG,UAAU,OAAO,SAASC,MAAK,KAAK,KAAK,KAAK,SAAS;AACxD,YAAI,OAAO,QAAQ,UAAU;AAC3B,oBAAU;AACV,gBAAM;AAAA,QACR;AACA,YAAI,CAAC;AACH,oBAAU,CAAC;AAEb,cAAM,KAAK,eAAe,KAAK,GAAG;AAClC,cAAM,KAAK,aAAa,IAAI,GAAG,KAAK,EAAE,CAAC;AAGvC,YAAID,SAAQ,KAAK,EAAE,WAAW;AAC9B,YAAI,OAAO,IAAI,WAAW,EAAE,QAAQ,MAAMA,MAAK;AAG/C,YAAI,QAAQ,IAAI,QAAQ,MAAMA,MAAK;AAGnC,YAAI,OAAO,IAAI,SAAS;AAAA,UACtB,MAAM,KAAK;AAAA,UACX,SAAS;AAAA,UACT;AAAA,UACA,MAAM,QAAQ;AAAA,UACd,SAAS,QAAQ,WAAW;AAAA,QAC9B,CAAC;AAGD,YAAI,MAAM,KAAK,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;AAE9B,iBAAS,OAAO,KAAK,QAAQ;AAC3B,cAAI,IAAI,QAAQ,IACd,QAAQ,EAAE,IAAI,IACd,IAAI,GAAG,KAAK,SAAS,KAAK,EAAE,WAAW,CAAC,CAAC;AAC3C,cAAI,KAAK,aAAa,GAAG,IAAI;AAC7B,cAAI,EAAE,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,GAAG,KAAK;AAClC;AAEF,cAAI,KAAK,KAAK,EAAE,IAAI,CAAC;AACrB,cAAI,GAAG,WAAW;AAChB;AAEF,cAAI,MAAM,GAAG,KAAK;AAClB,cAAI,IAAI,IAAI,KAAK,KAAK,CAAC;AACvB,cAAI,EAAE,KAAK,CAAC,MAAM;AAChB;AAEF,cAAI,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,WAAW,CAAC,EAAE,KAAK,GAAG,CAAC;AAC5D,cAAI,EAAE,KAAK,KAAK,CAAC;AACjB,cAAI,EAAE,KAAK,CAAC,MAAM;AAChB;AAEF,cAAI,iBAAiB,GAAG,KAAK,EAAE,MAAM,IAAI,IAAI,MACxB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI;AAG5C,cAAI,QAAQ,aAAa,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG;AAC3C,gBAAI,KAAK,EAAE,IAAI,CAAC;AAChB,6BAAiB;AAAA,UACnB;AAEA,iBAAO,IAAID,WAAU,EAAE,GAAM,GAAM,cAA6B,CAAC;AAAA,QACnE;AAAA,MACF;AAEA,SAAG,UAAU,SAAS,SAASG,QAAO,KAAK,WAAW,KAAK,KAAK;AAC9D,cAAM,KAAK,aAAa,IAAI,GAAG,KAAK,EAAE,CAAC;AACvC,cAAM,KAAK,cAAc,KAAK,GAAG;AACjC,oBAAY,IAAIH,WAAU,WAAW,KAAK;AAG1C,YAAI,IAAI,UAAU;AAClB,YAAI,IAAI,UAAU;AAClB,YAAI,EAAE,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK;AACpC,iBAAO;AACT,YAAI,EAAE,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK;AACpC,iBAAO;AAGT,YAAI,OAAO,EAAE,KAAK,KAAK,CAAC;AACxB,YAAI,KAAK,KAAK,IAAI,GAAG,EAAE,KAAK,KAAK,CAAC;AAClC,YAAI,KAAK,KAAK,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC;AAChC,YAAI;AAEJ,YAAI,CAAC,KAAK,MAAM,eAAe;AAC7B,cAAI,KAAK,EAAE,OAAO,IAAI,IAAI,UAAU,GAAG,EAAE;AACzC,cAAI,EAAE,WAAW;AACf,mBAAO;AAET,iBAAO,EAAE,KAAK,EAAE,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM;AAAA,QAC1C;AAKA,YAAI,KAAK,EAAE,QAAQ,IAAI,IAAI,UAAU,GAAG,EAAE;AAC1C,YAAI,EAAE,WAAW;AACf,iBAAO;AAKT,eAAO,EAAE,OAAO,CAAC;AAAA,MACnB;AAEA,SAAG,UAAU,gBAAgB,SAAS,KAAK,WAAW,GAAG,KAAK;AAC5D,QAAAD,SAAQ,IAAI,OAAO,GAAG,0CAA0C;AAChE,oBAAY,IAAIC,WAAU,WAAW,GAAG;AAExC,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,IAAI,GAAG,GAAG;AAClB,YAAI,IAAI,UAAU;AAClB,YAAI,IAAI,UAAU;AAGlB,YAAI,SAAS,IAAI;AACjB,YAAI,cAAc,KAAK;AACvB,YAAI,EAAE,IAAI,KAAK,MAAM,EAAE,KAAK,KAAK,MAAM,CAAC,CAAC,KAAK,KAAK;AACjD,gBAAM,IAAI,MAAM,sCAAsC;AAGxD,YAAI;AACF,cAAI,KAAK,MAAM,WAAW,EAAE,IAAI,KAAK,MAAM,CAAC,GAAG,MAAM;AAAA;AAErD,cAAI,KAAK,MAAM,WAAW,GAAG,MAAM;AAErC,YAAI,OAAO,UAAU,EAAE,KAAK,CAAC;AAC7B,YAAI,KAAK,EAAE,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE,KAAK,CAAC;AAClC,YAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,CAAC;AAI3B,eAAO,KAAK,EAAE,OAAO,IAAI,GAAG,EAAE;AAAA,MAChC;AAEA,SAAG,UAAU,sBAAsB,SAAS,GAAG,WAAW,GAAG,KAAK;AAChE,oBAAY,IAAIA,WAAU,WAAW,GAAG;AACxC,YAAI,UAAU,kBAAkB;AAC9B,iBAAO,UAAU;AAEnB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAI;AACJ,cAAI;AACF,qBAAS,KAAK,cAAc,GAAG,WAAW,CAAC;AAAA,UAC7C,SAASI,IAAP;AACA;AAAA,UACF;AAEA,cAAI,OAAO,GAAG,CAAC;AACb,mBAAO;AAAA,QACX;AACA,cAAM,IAAI,MAAM,sCAAsC;AAAA,MACxD;AAAA;AAAA;;;AClPA,MAAAC,eAAA;AAAA,sDAAAC,UAAAC,SAAA;AAAA;AAEA,UAAIC,SAAQ;AACZ,UAAIC,UAASD,OAAM;AACnB,UAAI,aAAaA,OAAM;AACvB,UAAI,iBAAiBA,OAAM;AAW3B,eAAS,QAAQ,OAAO,QAAQ;AAC9B,aAAK,QAAQ;AACb,aAAK,UAAU,WAAW,OAAO,MAAM;AACvC,YAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,eAAK,OAAO,OAAO;AAAA;AAEnB,eAAK,YAAY,WAAW,OAAO,GAAG;AAAA,MAC1C;AAEA,cAAQ,aAAa,SAAS,WAAW,OAAO,KAAK;AACnD,YAAI,eAAe;AACjB,iBAAO;AACT,eAAO,IAAI,QAAQ,OAAO,EAAE,IAAS,CAAC;AAAA,MACxC;AAEA,cAAQ,aAAa,SAAS,WAAW,OAAO,QAAQ;AACtD,YAAI,kBAAkB;AACpB,iBAAO;AACT,eAAO,IAAI,QAAQ,OAAO,EAAE,OAAe,CAAC;AAAA,MAC9C;AAEA,cAAQ,UAAU,SAAS,SAAS,SAAS;AAC3C,eAAO,KAAK;AAAA,MACd;AAEA,qBAAe,SAAS,YAAY,SAAS,WAAW;AACtD,eAAO,KAAK,MAAM,YAAY,KAAK,IAAI,CAAC;AAAA,MAC1C,CAAC;AAED,qBAAe,SAAS,OAAO,SAAS,MAAM;AAC5C,YAAI,KAAK;AACP,iBAAO,KAAK,MAAM,YAAY,KAAK,SAAS;AAC9C,eAAO,KAAK,MAAM,EAAE,IAAI,KAAK,KAAK,CAAC;AAAA,MACrC,CAAC;AAED,qBAAe,SAAS,aAAa,SAAS,YAAY;AACxD,YAAI,QAAQ,KAAK;AACjB,YAAIE,QAAO,KAAK,KAAK;AACrB,YAAI,SAAS,MAAM,iBAAiB;AAEpC,YAAI,IAAIA,MAAK,MAAM,GAAG,MAAM,cAAc;AAC1C,UAAE,CAAC,KAAK;AACR,UAAE,MAAM,KAAK;AACb,UAAE,MAAM,KAAK;AAEb,eAAO;AAAA,MACT,CAAC;AAED,qBAAe,SAAS,QAAQ,SAAS,OAAO;AAC9C,eAAO,KAAK,MAAM,UAAU,KAAK,UAAU,CAAC;AAAA,MAC9C,CAAC;AAED,qBAAe,SAAS,QAAQ,SAASA,QAAO;AAC9C,eAAO,KAAK,MAAM,KAAK,EAAE,OAAO,KAAK,OAAO,CAAC,EAAE,OAAO;AAAA,MACxD,CAAC;AAED,qBAAe,SAAS,iBAAiB,SAAS,gBAAgB;AAChE,eAAO,KAAK,KAAK,EAAE,MAAM,KAAK,MAAM,cAAc;AAAA,MACpD,CAAC;AAED,cAAQ,UAAU,OAAO,SAASC,MAAKC,UAAS;AAC9C,QAAAH,QAAO,KAAK,SAAS,yBAAyB;AAC9C,eAAO,KAAK,MAAM,KAAKG,UAAS,IAAI;AAAA,MACtC;AAEA,cAAQ,UAAU,SAAS,SAASC,QAAOD,UAAS,KAAK;AACvD,eAAO,KAAK,MAAM,OAAOA,UAAS,KAAK,IAAI;AAAA,MAC7C;AAEA,cAAQ,UAAU,YAAY,SAAS,UAAU,KAAK;AACpD,QAAAH,QAAO,KAAK,SAAS,wBAAwB;AAC7C,eAAOD,OAAM,OAAO,KAAK,OAAO,GAAG,GAAG;AAAA,MACxC;AAEA,cAAQ,UAAU,YAAY,SAAS,UAAU,KAAK;AACpD,eAAOA,OAAM,OAAO,KAAK,SAAS,GAAG,GAAG;AAAA,MAC1C;AAEA,MAAAD,QAAO,UAAU;AAAA;AAAA;;;AC9FjB,MAAAO,qBAAA;AAAA,4DAAAC,UAAAC,SAAA;AAAA;AAEA,UAAI,KAAK;AACT,UAAIC,SAAQ;AACZ,UAAIC,UAASD,OAAM;AACnB,UAAI,iBAAiBA,OAAM;AAC3B,UAAI,aAAaA,OAAM;AAUvB,eAASE,WAAU,OAAO,KAAK;AAC7B,aAAK,QAAQ;AAEb,YAAI,OAAO,QAAQ;AACjB,gBAAM,WAAW,GAAG;AAEtB,YAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,gBAAM;AAAA,YACJ,GAAG,IAAI,MAAM,GAAG,MAAM,cAAc;AAAA,YACpC,GAAG,IAAI,MAAM,MAAM,cAAc;AAAA,UACnC;AAAA,QACF;AAEA,QAAAD,QAAO,IAAI,KAAK,IAAI,GAAG,0BAA0B;AAEjD,YAAI,MAAM,QAAQ,IAAI,CAAC;AACrB,eAAK,KAAK,IAAI;AAChB,YAAI,IAAI,aAAa;AACnB,eAAK,KAAK,IAAI;AAEhB,aAAK,YAAY,MAAM,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI;AACpD,aAAK,YAAY,MAAM,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI;AAAA,MACtD;AAEA,qBAAeC,YAAW,KAAK,SAAS,IAAI;AAC1C,eAAO,KAAK,MAAM,UAAU,KAAK,SAAS,CAAC;AAAA,MAC7C,CAAC;AAED,qBAAeA,YAAW,KAAK,SAAS,IAAI;AAC1C,eAAO,KAAK,MAAM,YAAY,KAAK,SAAS,CAAC;AAAA,MAC/C,CAAC;AAED,qBAAeA,YAAW,YAAY,SAAS,WAAW;AACxD,eAAO,KAAK,MAAM,YAAY,KAAK,EAAE,CAAC;AAAA,MACxC,CAAC;AAED,qBAAeA,YAAW,YAAY,SAAS,WAAW;AACxD,eAAO,KAAK,MAAM,UAAU,KAAK,EAAE,CAAC;AAAA,MACtC,CAAC;AAED,MAAAA,WAAU,UAAU,UAAU,SAASC,WAAU;AAC/C,eAAO,KAAK,SAAS,EAAE,OAAO,KAAK,SAAS,CAAC;AAAA,MAC/C;AAEA,MAAAD,WAAU,UAAU,QAAQ,SAAS,QAAQ;AAC3C,eAAOF,OAAM,OAAO,KAAK,QAAQ,GAAG,KAAK,EAAE,YAAY;AAAA,MACzD;AAEA,MAAAD,QAAO,UAAUG;AAAA;AAAA;;;AChEjB;AAAA,wDAAAE,UAAAC,SAAA;AAAA;AAEA,UAAIC,QAAO;AACX,UAAI,SAAS;AACb,UAAIC,SAAQ;AACZ,UAAIC,UAASD,OAAM;AACnB,UAAI,aAAaA,OAAM;AACvB,UAAI,UAAU;AACd,UAAIE,aAAY;AAEhB,eAAS,MAAM,OAAO;AACpB,QAAAD,QAAO,UAAU,WAAW,iCAAiC;AAE7D,YAAI,EAAE,gBAAgB;AACpB,iBAAO,IAAI,MAAM,KAAK;AAExB,gBAAQ,OAAO,KAAK,EAAE;AACtB,aAAK,QAAQ;AACb,aAAK,IAAI,MAAM;AACf,aAAK,EAAE,WAAW,MAAM,EAAE,UAAU,IAAI,CAAC;AAEzC,aAAK,aAAa,MAAM,MAAM,EAAE;AAChC,aAAK,iBAAiB,KAAK,KAAK,MAAM,EAAE,UAAU,IAAI,CAAC;AACvD,aAAK,OAAOF,MAAK;AAAA,MACnB;AAEA,MAAAD,QAAO,UAAU;AAOjB,YAAM,UAAU,OAAO,SAASK,MAAKC,UAAS,QAAQ;AACpD,QAAAA,WAAU,WAAWA,QAAO;AAC5B,YAAI,MAAM,KAAK,cAAc,MAAM;AACnC,YAAI,IAAI,KAAK,QAAQ,IAAI,cAAc,GAAGA,QAAO;AACjD,YAAI,IAAI,KAAK,EAAE,IAAI,CAAC;AACpB,YAAI,WAAW,KAAK,YAAY,CAAC;AACjC,YAAI,KAAK,KAAK,QAAQ,UAAU,IAAI,SAAS,GAAGA,QAAO,EACpD,IAAI,IAAI,KAAK,CAAC;AACjB,YAAI,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,KAAK,MAAM,CAAC;AACnC,eAAO,KAAK,cAAc,EAAE,GAAM,GAAM,SAAmB,CAAC;AAAA,MAC9D;AAQA,YAAM,UAAU,SAAS,SAASC,QAAOD,UAAS,KAAK,KAAK;AAC1D,QAAAA,WAAU,WAAWA,QAAO;AAC5B,cAAM,KAAK,cAAc,GAAG;AAC5B,YAAI,MAAM,KAAK,cAAc,GAAG;AAChC,YAAI,IAAI,KAAK,QAAQ,IAAI,SAAS,GAAG,IAAI,SAAS,GAAGA,QAAO;AAC5D,YAAI,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC;AAC3B,YAAI,UAAU,IAAI,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1C,eAAO,QAAQ,GAAG,EAAE;AAAA,MACtB;AAEA,YAAM,UAAU,UAAU,SAAS,UAAU;AAC3C,YAAIL,QAAO,KAAK,KAAK;AACrB,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ;AACpC,UAAAA,MAAK,OAAO,UAAU,CAAC,CAAC;AAC1B,eAAOC,OAAM,UAAUD,MAAK,OAAO,CAAC,EAAE,KAAK,KAAK,MAAM,CAAC;AAAA,MACzD;AAEA,YAAM,UAAU,gBAAgB,SAAS,cAAc,KAAK;AAC1D,eAAO,QAAQ,WAAW,MAAM,GAAG;AAAA,MACrC;AAEA,YAAM,UAAU,gBAAgB,SAAS,cAAc,QAAQ;AAC7D,eAAO,QAAQ,WAAW,MAAM,MAAM;AAAA,MACxC;AAEA,YAAM,UAAU,gBAAgB,SAAS,cAAc,KAAK;AAC1D,YAAI,eAAeG;AACjB,iBAAO;AACT,eAAO,IAAIA,WAAU,MAAM,GAAG;AAAA,MAChC;AAUA,YAAM,UAAU,cAAc,SAAS,YAAY,OAAO;AACxD,YAAI,MAAM,MAAM,KAAK,EAAE,QAAQ,MAAM,KAAK,cAAc;AACxD,YAAI,KAAK,iBAAiB,CAAC,KAAK,MAAM,KAAK,EAAE,MAAM,IAAI,MAAO;AAC9D,eAAO;AAAA,MACT;AAEA,YAAM,UAAU,cAAc,SAAS,YAAYI,QAAO;AACxD,QAAAA,SAAQN,OAAM,WAAWM,MAAK;AAE9B,YAAI,SAASA,OAAM,SAAS;AAC5B,YAAI,SAASA,OAAM,MAAM,GAAG,MAAM,EAAE,OAAOA,OAAM,MAAM,IAAI,CAAC,GAAI;AAChE,YAAI,UAAUA,OAAM,MAAM,IAAI,SAAU;AAExC,YAAI,IAAIN,OAAM,UAAU,MAAM;AAC9B,eAAO,KAAK,MAAM,WAAW,GAAG,MAAM;AAAA,MACxC;AAEA,YAAM,UAAU,YAAY,SAAS,UAAU,KAAK;AAClD,eAAO,IAAI,QAAQ,MAAM,KAAK,cAAc;AAAA,MAC9C;AAEA,YAAM,UAAU,YAAY,SAAS,UAAUM,QAAO;AACpD,eAAON,OAAM,UAAUM,MAAK;AAAA,MAC9B;AAEA,YAAM,UAAU,UAAU,SAAS,QAAQ,KAAK;AAC9C,eAAO,eAAe,KAAK;AAAA,MAC7B;AAAA;AAAA;;;ACrHA;AAAA,4CAAAC,UAAA;AAAA;AAEA,UAAI,WAAWA;AAEf,eAAS,UAAU,kBAA2B;AAC9C,eAAS,QAAQ;AACjB,eAAS,OAAO;AAChB,eAAS,QAAQ;AACjB,eAAS,SAAS;AAGlB,eAAS,KAAK;AACd,eAAS,QAAQ;AAAA;AAAA;;;ACZjB,MAAAC,cAAA;AAAA,yEAAAC,UAAAC,SAAA;AAAA,OAAC,SAAUA,SAAQD,UAAS;AAC1B;AAGA,iBAASE,QAAQ,KAAK,KAAK;AACzB,cAAI,CAAC;AAAK,kBAAM,IAAI,MAAM,OAAO,kBAAkB;AAAA,QACrD;AAIA,iBAAS,SAAU,MAAM,WAAW;AAClC,eAAK,SAAS;AACd,cAAI,WAAW,WAAY;AAAA,UAAC;AAC5B,mBAAS,YAAY,UAAU;AAC/B,eAAK,YAAY,IAAI,SAAS;AAC9B,eAAK,UAAU,cAAc;AAAA,QAC/B;AAIA,iBAAS,GAAIC,SAAQ,MAAM,QAAQ;AACjC,cAAI,GAAG,KAAKA,OAAM,GAAG;AACnB,mBAAOA;AAAA,UACT;AAEA,eAAK,WAAW;AAChB,eAAK,QAAQ;AACb,eAAK,SAAS;AAGd,eAAK,MAAM;AAEX,cAAIA,YAAW,MAAM;AACnB,gBAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,uBAAS;AACT,qBAAO;AAAA,YACT;AAEA,iBAAK,MAAMA,WAAU,GAAG,QAAQ,IAAI,UAAU,IAAI;AAAA,UACpD;AAAA,QACF;AACA,YAAI,OAAOF,YAAW,UAAU;AAC9B,UAAAA,QAAO,UAAU;AAAA,QACnB,OAAO;AACL,UAAAD,SAAQ,KAAK;AAAA,QACf;AAEA,WAAG,KAAK;AACR,WAAG,WAAW;AAEd,YAAII;AACJ,YAAI;AACF,cAAI,OAAO,WAAW,eAAe,OAAO,OAAO,WAAW,aAAa;AACzE,YAAAA,UAAS,OAAO;AAAA,UAClB,OAAO;AACL,YAAAA,UAAS,kBAAkB;AAAA,UAC7B;AAAA,QACF,SAAS,GAAP;AAAA,QACF;AAEA,WAAG,OAAO,SAAS,KAAM,KAAK;AAC5B,cAAI,eAAe,IAAI;AACrB,mBAAO;AAAA,UACT;AAEA,iBAAO,QAAQ,QAAQ,OAAO,QAAQ,YACpC,IAAI,YAAY,aAAa,GAAG,YAAY,MAAM,QAAQ,IAAI,KAAK;AAAA,QACvE;AAEA,WAAG,MAAM,SAAS,IAAK,MAAM,OAAO;AAClC,cAAI,KAAK,IAAI,KAAK,IAAI;AAAG,mBAAO;AAChC,iBAAO;AAAA,QACT;AAEA,WAAG,MAAM,SAAS,IAAK,MAAM,OAAO;AAClC,cAAI,KAAK,IAAI,KAAK,IAAI;AAAG,mBAAO;AAChC,iBAAO;AAAA,QACT;AAEA,WAAG,UAAU,QAAQ,SAAS,KAAMD,SAAQ,MAAM,QAAQ;AACxD,cAAI,OAAOA,YAAW,UAAU;AAC9B,mBAAO,KAAK,YAAYA,SAAQ,MAAM,MAAM;AAAA,UAC9C;AAEA,cAAI,OAAOA,YAAW,UAAU;AAC9B,mBAAO,KAAK,WAAWA,SAAQ,MAAM,MAAM;AAAA,UAC7C;AAEA,cAAI,SAAS,OAAO;AAClB,mBAAO;AAAA,UACT;AACA,UAAAD,QAAO,UAAU,OAAO,MAAM,QAAQ,KAAK,QAAQ,EAAE;AAErD,UAAAC,UAASA,QAAO,SAAS,EAAE,QAAQ,QAAQ,EAAE;AAC7C,cAAI,QAAQ;AACZ,cAAIA,QAAO,CAAC,MAAM,KAAK;AACrB;AACA,iBAAK,WAAW;AAAA,UAClB;AAEA,cAAI,QAAQA,QAAO,QAAQ;AACzB,gBAAI,SAAS,IAAI;AACf,mBAAK,UAAUA,SAAQ,OAAO,MAAM;AAAA,YACtC,OAAO;AACL,mBAAK,WAAWA,SAAQ,MAAM,KAAK;AACnC,kBAAI,WAAW,MAAM;AACnB,qBAAK,WAAW,KAAK,QAAQ,GAAG,MAAM,MAAM;AAAA,cAC9C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,WAAG,UAAU,cAAc,SAAS,YAAaA,SAAQ,MAAM,QAAQ;AACrE,cAAIA,UAAS,GAAG;AACd,iBAAK,WAAW;AAChB,YAAAA,UAAS,CAACA;AAAA,UACZ;AACA,cAAIA,UAAS,UAAW;AACtB,iBAAK,QAAQ,CAACA,UAAS,QAAS;AAChC,iBAAK,SAAS;AAAA,UAChB,WAAWA,UAAS,kBAAkB;AACpC,iBAAK,QAAQ;AAAA,cACXA,UAAS;AAAA,cACRA,UAAS,WAAa;AAAA,YACzB;AACA,iBAAK,SAAS;AAAA,UAChB,OAAO;AACL,YAAAD,QAAOC,UAAS,gBAAgB;AAChC,iBAAK,QAAQ;AAAA,cACXA,UAAS;AAAA,cACRA,UAAS,WAAa;AAAA,cACvB;AAAA,YACF;AACA,iBAAK,SAAS;AAAA,UAChB;AAEA,cAAI,WAAW;AAAM;AAGrB,eAAK,WAAW,KAAK,QAAQ,GAAG,MAAM,MAAM;AAAA,QAC9C;AAEA,WAAG,UAAU,aAAa,SAAS,WAAYA,SAAQ,MAAM,QAAQ;AAEnE,UAAAD,QAAO,OAAOC,QAAO,WAAW,QAAQ;AACxC,cAAIA,QAAO,UAAU,GAAG;AACtB,iBAAK,QAAQ,CAAC,CAAC;AACf,iBAAK,SAAS;AACd,mBAAO;AAAA,UACT;AAEA,eAAK,SAAS,KAAK,KAAKA,QAAO,SAAS,CAAC;AACzC,eAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,iBAAK,MAAM,CAAC,IAAI;AAAA,UAClB;AAEA,cAAI,GAAG;AACP,cAAI,MAAM;AACV,cAAI,WAAW,MAAM;AACnB,iBAAK,IAAIA,QAAO,SAAS,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG;AACjD,kBAAIA,QAAO,CAAC,IAAKA,QAAO,IAAI,CAAC,KAAK,IAAMA,QAAO,IAAI,CAAC,KAAK;AACzD,mBAAK,MAAM,CAAC,KAAM,KAAK,MAAO;AAC9B,mBAAK,MAAM,IAAI,CAAC,IAAK,MAAO,KAAK,MAAQ;AACzC,qBAAO;AACP,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP;AAAA,cACF;AAAA,YACF;AAAA,UACF,WAAW,WAAW,MAAM;AAC1B,iBAAK,IAAI,GAAG,IAAI,GAAG,IAAIA,QAAO,QAAQ,KAAK,GAAG;AAC5C,kBAAIA,QAAO,CAAC,IAAKA,QAAO,IAAI,CAAC,KAAK,IAAMA,QAAO,IAAI,CAAC,KAAK;AACzD,mBAAK,MAAM,CAAC,KAAM,KAAK,MAAO;AAC9B,mBAAK,MAAM,IAAI,CAAC,IAAK,MAAO,KAAK,MAAQ;AACzC,qBAAO;AACP,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP;AAAA,cACF;AAAA,YACF;AAAA,UACF;AACA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,iBAAS,cAAe,QAAQ,OAAO;AACrC,cAAI,IAAI,OAAO,WAAW,KAAK;AAE/B,cAAI,KAAK,MAAM,KAAK,IAAI;AACtB,mBAAO,IAAI;AAAA,UAEb,WAAW,KAAK,MAAM,KAAK,IAAI;AAC7B,mBAAO,IAAI;AAAA,UAEb,WAAW,KAAK,MAAM,KAAK,KAAK;AAC9B,mBAAO,IAAI;AAAA,UACb,OAAO;AACL,YAAAD,QAAO,OAAO,0BAA0B,MAAM;AAAA,UAChD;AAAA,QACF;AAEA,iBAAS,aAAc,QAAQ,YAAY,OAAO;AAChD,cAAI,IAAI,cAAc,QAAQ,KAAK;AACnC,cAAI,QAAQ,KAAK,YAAY;AAC3B,iBAAK,cAAc,QAAQ,QAAQ,CAAC,KAAK;AAAA,UAC3C;AACA,iBAAO;AAAA,QACT;AAEA,WAAG,UAAU,YAAY,SAAS,UAAWC,SAAQ,OAAO,QAAQ;AAElE,eAAK,SAAS,KAAK,MAAMA,QAAO,SAAS,SAAS,CAAC;AACnD,eAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,iBAAK,MAAM,CAAC,IAAI;AAAA,UAClB;AAGA,cAAI,MAAM;AACV,cAAI,IAAI;AAER,cAAI;AACJ,cAAI,WAAW,MAAM;AACnB,iBAAK,IAAIA,QAAO,SAAS,GAAG,KAAK,OAAO,KAAK,GAAG;AAC9C,kBAAI,aAAaA,SAAQ,OAAO,CAAC,KAAK;AACtC,mBAAK,MAAM,CAAC,KAAK,IAAI;AACrB,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP,qBAAK;AACL,qBAAK,MAAM,CAAC,KAAK,MAAM;AAAA,cACzB,OAAO;AACL,uBAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF,OAAO;AACL,gBAAI,cAAcA,QAAO,SAAS;AAClC,iBAAK,IAAI,cAAc,MAAM,IAAI,QAAQ,IAAI,OAAO,IAAIA,QAAO,QAAQ,KAAK,GAAG;AAC7E,kBAAI,aAAaA,SAAQ,OAAO,CAAC,KAAK;AACtC,mBAAK,MAAM,CAAC,KAAK,IAAI;AACrB,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP,qBAAK;AACL,qBAAK,MAAM,CAAC,KAAK,MAAM;AAAA,cACzB,OAAO;AACL,uBAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAEA,eAAK,OAAO;AAAA,QACd;AAEA,iBAAS,UAAW,KAAK,OAAO,KAAK,KAAK;AACxC,cAAI,IAAI;AACR,cAAI,IAAI;AACR,cAAI,MAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAClC,mBAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAChC,gBAAI,IAAI,IAAI,WAAW,CAAC,IAAI;AAE5B,iBAAK;AAGL,gBAAI,KAAK,IAAI;AACX,kBAAI,IAAI,KAAK;AAAA,YAGf,WAAW,KAAK,IAAI;AAClB,kBAAI,IAAI,KAAK;AAAA,YAGf,OAAO;AACL,kBAAI;AAAA,YACN;AACA,YAAAD,QAAO,KAAK,KAAK,IAAI,KAAK,mBAAmB;AAC7C,iBAAK;AAAA,UACP;AACA,iBAAO;AAAA,QACT;AAEA,WAAG,UAAU,aAAa,SAAS,WAAYC,SAAQ,MAAM,OAAO;AAElE,eAAK,QAAQ,CAAC,CAAC;AACf,eAAK,SAAS;AAGd,mBAAS,UAAU,GAAG,UAAU,GAAG,WAAW,UAAW,WAAW,MAAM;AACxE;AAAA,UACF;AACA;AACA,oBAAW,UAAU,OAAQ;AAE7B,cAAI,QAAQA,QAAO,SAAS;AAC5B,cAAIE,OAAM,QAAQ;AAClB,cAAI,MAAM,KAAK,IAAI,OAAO,QAAQA,IAAG,IAAI;AAEzC,cAAI,OAAO;AACX,mBAAS,IAAI,OAAO,IAAI,KAAK,KAAK,SAAS;AACzC,mBAAO,UAAUF,SAAQ,GAAG,IAAI,SAAS,IAAI;AAE7C,iBAAK,MAAM,OAAO;AAClB,gBAAI,KAAK,MAAM,CAAC,IAAI,OAAO,UAAW;AACpC,mBAAK,MAAM,CAAC,KAAK;AAAA,YACnB,OAAO;AACL,mBAAK,OAAO,IAAI;AAAA,YAClB;AAAA,UACF;AAEA,cAAIE,SAAQ,GAAG;AACb,gBAAI,MAAM;AACV,mBAAO,UAAUF,SAAQ,GAAGA,QAAO,QAAQ,IAAI;AAE/C,iBAAK,IAAI,GAAG,IAAIE,MAAK,KAAK;AACxB,qBAAO;AAAA,YACT;AAEA,iBAAK,MAAM,GAAG;AACd,gBAAI,KAAK,MAAM,CAAC,IAAI,OAAO,UAAW;AACpC,mBAAK,MAAM,CAAC,KAAK;AAAA,YACnB,OAAO;AACL,mBAAK,OAAO,IAAI;AAAA,YAClB;AAAA,UACF;AAEA,eAAK,OAAO;AAAA,QACd;AAEA,WAAG,UAAU,OAAO,SAAS,KAAM,MAAM;AACvC,eAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,iBAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC;AAAA,UAC9B;AACA,eAAK,SAAS,KAAK;AACnB,eAAK,WAAW,KAAK;AACrB,eAAK,MAAM,KAAK;AAAA,QAClB;AAEA,iBAAS,KAAM,MAAM,KAAK;AACxB,eAAK,QAAQ,IAAI;AACjB,eAAK,SAAS,IAAI;AAClB,eAAK,WAAW,IAAI;AACpB,eAAK,MAAM,IAAI;AAAA,QACjB;AAEA,WAAG,UAAU,QAAQ,SAAS,MAAO,MAAM;AACzC,eAAK,MAAM,IAAI;AAAA,QACjB;AAEA,WAAG,UAAU,QAAQ,SAASC,SAAS;AACrC,cAAI,IAAI,IAAI,GAAG,IAAI;AACnB,eAAK,KAAK,CAAC;AACX,iBAAO;AAAA,QACT;AAEA,WAAG,UAAU,UAAU,SAAS,QAAS,MAAM;AAC7C,iBAAO,KAAK,SAAS,MAAM;AACzB,iBAAK,MAAM,KAAK,QAAQ,IAAI;AAAA,UAC9B;AACA,iBAAO;AAAA,QACT;AAGA,WAAG,UAAU,SAAS,SAAS,QAAS;AACtC,iBAAO,KAAK,SAAS,KAAK,KAAK,MAAM,KAAK,SAAS,CAAC,MAAM,GAAG;AAC3D,iBAAK;AAAA,UACP;AACA,iBAAO,KAAK,UAAU;AAAA,QACxB;AAEA,WAAG,UAAU,YAAY,SAAS,YAAa;AAE7C,cAAI,KAAK,WAAW,KAAK,KAAK,MAAM,CAAC,MAAM,GAAG;AAC5C,iBAAK,WAAW;AAAA,UAClB;AACA,iBAAO;AAAA,QACT;AAIA,YAAI,OAAO,WAAW,eAAe,OAAO,OAAO,QAAQ,YAAY;AACrE,cAAI;AACF,eAAG,UAAU,OAAO,IAAI,4BAA4B,CAAC,IAAI;AAAA,UAC3D,SAAS,GAAP;AACA,eAAG,UAAU,UAAU;AAAA,UACzB;AAAA,QACF,OAAO;AACL,aAAG,UAAU,UAAU;AAAA,QACzB;AAEA,iBAAS,UAAW;AAClB,kBAAQ,KAAK,MAAM,YAAY,WAAW,KAAK,SAAS,EAAE,IAAI;AAAA,QAChE;AAgCA,YAAI,QAAQ;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,YAAI,aAAa;AAAA,UACf;AAAA,UAAG;AAAA,UACH;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAG;AAAA,UACvB;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAClB;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAClB;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAClB;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,QACpB;AAEA,YAAI,aAAa;AAAA,UACf;AAAA,UAAG;AAAA,UACH;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAC5D;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAS;AAAA,UAC3D;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAS;AAAA,UAC3D;AAAA,UAAS;AAAA,UAAS;AAAA,UAAS;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UACzD;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,QAC9D;AAEA,WAAG,UAAU,WAAW,SAAS,SAAU,MAAM,SAAS;AACxD,iBAAO,QAAQ;AACf,oBAAU,UAAU,KAAK;AAEzB,cAAI;AACJ,cAAI,SAAS,MAAM,SAAS,OAAO;AACjC,kBAAM;AACN,gBAAI,MAAM;AACV,gBAAI,QAAQ;AACZ,qBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,kBAAI,IAAI,KAAK,MAAM,CAAC;AACpB,kBAAI,SAAU,KAAK,MAAO,SAAS,UAAU,SAAS,EAAE;AACxD,sBAAS,MAAO,KAAK,MAAQ;AAC7B,qBAAO;AACP,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP;AAAA,cACF;AACA,kBAAI,UAAU,KAAK,MAAM,KAAK,SAAS,GAAG;AACxC,sBAAM,MAAM,IAAI,KAAK,MAAM,IAAI,OAAO;AAAA,cACxC,OAAO;AACL,sBAAM,OAAO;AAAA,cACf;AAAA,YACF;AACA,gBAAI,UAAU,GAAG;AACf,oBAAM,MAAM,SAAS,EAAE,IAAI;AAAA,YAC7B;AACA,mBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,oBAAM,MAAM;AAAA,YACd;AACA,gBAAI,KAAK,aAAa,GAAG;AACvB,oBAAM,MAAM;AAAA,YACd;AACA,mBAAO;AAAA,UACT;AAEA,cAAI,UAAU,OAAO,MAAM,QAAQ,KAAK,QAAQ,IAAI;AAElD,gBAAI,YAAY,WAAW,IAAI;AAE/B,gBAAI,YAAY,WAAW,IAAI;AAC/B,kBAAM;AACN,gBAAI,IAAI,KAAK,MAAM;AACnB,cAAE,WAAW;AACb,mBAAO,CAAC,EAAE,OAAO,GAAG;AAClB,kBAAI,IAAI,EAAE,MAAM,SAAS,EAAE,SAAS,IAAI;AACxC,kBAAI,EAAE,MAAM,SAAS;AAErB,kBAAI,CAAC,EAAE,OAAO,GAAG;AACf,sBAAM,MAAM,YAAY,EAAE,MAAM,IAAI,IAAI;AAAA,cAC1C,OAAO;AACL,sBAAM,IAAI;AAAA,cACZ;AAAA,YACF;AACA,gBAAI,KAAK,OAAO,GAAG;AACjB,oBAAM,MAAM;AAAA,YACd;AACA,mBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,oBAAM,MAAM;AAAA,YACd;AACA,gBAAI,KAAK,aAAa,GAAG;AACvB,oBAAM,MAAM;AAAA,YACd;AACA,mBAAO;AAAA,UACT;AAEA,UAAAJ,QAAO,OAAO,iCAAiC;AAAA,QACjD;AAEA,WAAG,UAAU,WAAW,SAASK,YAAY;AAC3C,cAAI,MAAM,KAAK,MAAM,CAAC;AACtB,cAAI,KAAK,WAAW,GAAG;AACrB,mBAAO,KAAK,MAAM,CAAC,IAAI;AAAA,UACzB,WAAW,KAAK,WAAW,KAAK,KAAK,MAAM,CAAC,MAAM,GAAM;AAEtD,mBAAO,mBAAoB,KAAK,MAAM,CAAC,IAAI;AAAA,UAC7C,WAAW,KAAK,SAAS,GAAG;AAC1B,YAAAL,QAAO,OAAO,4CAA4C;AAAA,UAC5D;AACA,iBAAQ,KAAK,aAAa,IAAK,CAAC,MAAM;AAAA,QACxC;AAEA,WAAG,UAAU,SAAS,SAAS,SAAU;AACvC,iBAAO,KAAK,SAAS,IAAI,CAAC;AAAA,QAC5B;AAEA,YAAIE,SAAQ;AACV,aAAG,UAAU,WAAW,SAAS,SAAU,QAAQ,QAAQ;AACzD,mBAAO,KAAK,YAAYA,SAAQ,QAAQ,MAAM;AAAA,UAChD;AAAA,QACF;AAEA,WAAG,UAAU,UAAU,SAAS,QAAS,QAAQ,QAAQ;AACvD,iBAAO,KAAK,YAAY,OAAO,QAAQ,MAAM;AAAA,QAC/C;AAEA,YAAI,WAAW,SAASI,UAAU,WAAW,MAAM;AACjD,cAAI,UAAU,aAAa;AACzB,mBAAO,UAAU,YAAY,IAAI;AAAA,UACnC;AACA,iBAAO,IAAI,UAAU,IAAI;AAAA,QAC3B;AAEA,WAAG,UAAU,cAAc,SAAS,YAAa,WAAW,QAAQ,QAAQ;AAC1E,eAAK,OAAO;AAEZ,cAAI,aAAa,KAAK,WAAW;AACjC,cAAI,YAAY,UAAU,KAAK,IAAI,GAAG,UAAU;AAChD,UAAAN,QAAO,cAAc,WAAW,uCAAuC;AACvE,UAAAA,QAAO,YAAY,GAAG,6BAA6B;AAEnD,cAAI,MAAM,SAAS,WAAW,SAAS;AACvC,cAAI,UAAU,WAAW,OAAO,OAAO;AACvC,eAAK,iBAAiB,OAAO,EAAE,KAAK,UAAU;AAC9C,iBAAO;AAAA,QACT;AAEA,WAAG,UAAU,iBAAiB,SAAS,eAAgB,KAAK,YAAY;AACtE,cAAI,WAAW;AACf,cAAI,QAAQ;AAEZ,mBAAS,IAAI,GAAG,QAAQ,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/C,gBAAI,OAAQ,KAAK,MAAM,CAAC,KAAK,QAAS;AAEtC,gBAAI,UAAU,IAAI,OAAO;AACzB,gBAAI,WAAW,IAAI,QAAQ;AACzB,kBAAI,UAAU,IAAK,QAAQ,IAAK;AAAA,YAClC;AACA,gBAAI,WAAW,IAAI,QAAQ;AACzB,kBAAI,UAAU,IAAK,QAAQ,KAAM;AAAA,YACnC;AAEA,gBAAI,UAAU,GAAG;AACf,kBAAI,WAAW,IAAI,QAAQ;AACzB,oBAAI,UAAU,IAAK,QAAQ,KAAM;AAAA,cACnC;AACA,sBAAQ;AACR,sBAAQ;AAAA,YACV,OAAO;AACL,sBAAQ,SAAS;AACjB,uBAAS;AAAA,YACX;AAAA,UACF;AAEA,cAAI,WAAW,IAAI,QAAQ;AACzB,gBAAI,UAAU,IAAI;AAElB,mBAAO,WAAW,IAAI,QAAQ;AAC5B,kBAAI,UAAU,IAAI;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAEA,WAAG,UAAU,iBAAiB,SAAS,eAAgB,KAAK,YAAY;AACtE,cAAI,WAAW,IAAI,SAAS;AAC5B,cAAI,QAAQ;AAEZ,mBAAS,IAAI,GAAG,QAAQ,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/C,gBAAI,OAAQ,KAAK,MAAM,CAAC,KAAK,QAAS;AAEtC,gBAAI,UAAU,IAAI,OAAO;AACzB,gBAAI,YAAY,GAAG;AACjB,kBAAI,UAAU,IAAK,QAAQ,IAAK;AAAA,YAClC;AACA,gBAAI,YAAY,GAAG;AACjB,kBAAI,UAAU,IAAK,QAAQ,KAAM;AAAA,YACnC;AAEA,gBAAI,UAAU,GAAG;AACf,kBAAI,YAAY,GAAG;AACjB,oBAAI,UAAU,IAAK,QAAQ,KAAM;AAAA,cACnC;AACA,sBAAQ;AACR,sBAAQ;AAAA,YACV,OAAO;AACL,sBAAQ,SAAS;AACjB,uBAAS;AAAA,YACX;AAAA,UACF;AAEA,cAAI,YAAY,GAAG;AACjB,gBAAI,UAAU,IAAI;AAElB,mBAAO,YAAY,GAAG;AACpB,kBAAI,UAAU,IAAI;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAEA,YAAI,KAAK,OAAO;AACd,aAAG,UAAU,aAAa,SAAS,WAAY,GAAG;AAChD,mBAAO,KAAK,KAAK,MAAM,CAAC;AAAA,UAC1B;AAAA,QACF,OAAO;AACL,aAAG,UAAU,aAAa,SAAS,WAAY,GAAG;AAChD,gBAAI,IAAI;AACR,gBAAI,IAAI;AACR,gBAAI,KAAK,MAAQ;AACf,mBAAK;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK,IAAM;AACb,mBAAK;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK,GAAK;AACZ,mBAAK;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK,GAAM;AACb,mBAAK;AACL,qBAAO;AAAA,YACT;AACA,mBAAO,IAAI;AAAA,UACb;AAAA,QACF;AAEA,WAAG,UAAU,YAAY,SAAS,UAAW,GAAG;AAE9C,cAAI,MAAM;AAAG,mBAAO;AAEpB,cAAI,IAAI;AACR,cAAI,IAAI;AACR,eAAK,IAAI,UAAY,GAAG;AACtB,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,eAAK,IAAI,SAAU,GAAG;AACpB,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,eAAK,IAAI,QAAS,GAAG;AACnB,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,eAAK,IAAI,OAAS,GAAG;AACnB,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,eAAK,IAAI,OAAS,GAAG;AACnB;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAGA,WAAG,UAAU,YAAY,SAASO,aAAa;AAC7C,cAAI,IAAI,KAAK,MAAM,KAAK,SAAS,CAAC;AAClC,cAAI,KAAK,KAAK,WAAW,CAAC;AAC1B,kBAAQ,KAAK,SAAS,KAAK,KAAK;AAAA,QAClC;AAEA,iBAAS,WAAY,KAAK;AACxB,cAAI,IAAI,IAAI,MAAM,IAAI,UAAU,CAAC;AAEjC,mBAAS,MAAM,GAAG,MAAM,EAAE,QAAQ,OAAO;AACvC,gBAAI,MAAO,MAAM,KAAM;AACvB,gBAAI,OAAO,MAAM;AAEjB,cAAE,GAAG,IAAK,IAAI,MAAM,GAAG,MAAM,OAAQ;AAAA,UACvC;AAEA,iBAAO;AAAA,QACT;AAGA,WAAG,UAAU,WAAW,SAAS,WAAY;AAC3C,cAAI,KAAK,OAAO;AAAG,mBAAO;AAE1B,cAAI,IAAI;AACR,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAI,IAAI,KAAK,UAAU,KAAK,MAAM,CAAC,CAAC;AACpC,iBAAK;AACL,gBAAI,MAAM;AAAI;AAAA,UAChB;AACA,iBAAO;AAAA,QACT;AAEA,WAAG,UAAU,aAAa,SAAS,aAAc;AAC/C,iBAAO,KAAK,KAAK,KAAK,UAAU,IAAI,CAAC;AAAA,QACvC;AAEA,WAAG,UAAU,SAAS,SAASC,QAAQ,OAAO;AAC5C,cAAI,KAAK,aAAa,GAAG;AACvB,mBAAO,KAAK,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,CAAC;AAAA,UACxC;AACA,iBAAO,KAAK,MAAM;AAAA,QACpB;AAEA,WAAG,UAAU,WAAW,SAASC,UAAU,OAAO;AAChD,cAAI,KAAK,MAAM,QAAQ,CAAC,GAAG;AACzB,mBAAO,KAAK,KAAK,KAAK,EAAE,MAAM,CAAC,EAAE,KAAK;AAAA,UACxC;AACA,iBAAO,KAAK,MAAM;AAAA,QACpB;AAEA,WAAG,UAAU,QAAQ,SAAS,QAAS;AACrC,iBAAO,KAAK,aAAa;AAAA,QAC3B;AAGA,WAAG,UAAU,MAAM,SAAS,MAAO;AACjC,iBAAO,KAAK,MAAM,EAAE,KAAK;AAAA,QAC3B;AAEA,WAAG,UAAU,OAAO,SAAS,OAAQ;AACnC,cAAI,CAAC,KAAK,OAAO,GAAG;AAClB,iBAAK,YAAY;AAAA,UACnB;AAEA,iBAAO;AAAA,QACT;AAGA,WAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,iBAAO,KAAK,SAAS,IAAI,QAAQ;AAC/B,iBAAK,MAAM,KAAK,QAAQ,IAAI;AAAA,UAC9B;AAEA,mBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,iBAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC;AAAA,UAC7C;AAEA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,WAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,UAAAT,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,iBAAO,KAAK,KAAK,GAAG;AAAA,QACtB;AAGA,WAAG,UAAU,KAAK,SAAS,GAAI,KAAK;AAClC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,IAAI,GAAG;AACzD,iBAAO,IAAI,MAAM,EAAE,IAAI,IAAI;AAAA,QAC7B;AAEA,WAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,iBAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,QAC9B;AAGA,WAAG,UAAU,QAAQ,SAAS,MAAO,KAAK;AAExC,cAAI;AACJ,cAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,gBAAI;AAAA,UACN,OAAO;AACL,gBAAI;AAAA,UACN;AAEA,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC;AAAA,UAC7C;AAEA,eAAK,SAAS,EAAE;AAEhB,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,WAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,UAAAA,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,iBAAO,KAAK,MAAM,GAAG;AAAA,QACvB;AAGA,WAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,iBAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,QAC9B;AAEA,WAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAC3D,iBAAO,IAAI,MAAM,EAAE,MAAM,IAAI;AAAA,QAC/B;AAGA,WAAG,UAAU,QAAQ,SAAS,MAAO,KAAK;AAExC,cAAI;AACJ,cAAI;AACJ,cAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,gBAAI;AACJ,gBAAI;AAAA,UACN,OAAO;AACL,gBAAI;AACJ,gBAAI;AAAA,UACN;AAEA,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,UACxC;AAEA,cAAI,SAAS,GAAG;AACd,mBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,mBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,YAC3B;AAAA,UACF;AAEA,eAAK,SAAS,EAAE;AAEhB,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,WAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,UAAAA,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,iBAAO,KAAK,MAAM,GAAG;AAAA,QACvB;AAGA,WAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,iBAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,QAC9B;AAEA,WAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAC3D,iBAAO,IAAI,MAAM,EAAE,MAAM,IAAI;AAAA,QAC/B;AAGA,WAAG,UAAU,QAAQ,SAAS,MAAO,OAAO;AAC1C,UAAAA,QAAO,OAAO,UAAU,YAAY,SAAS,CAAC;AAE9C,cAAI,cAAc,KAAK,KAAK,QAAQ,EAAE,IAAI;AAC1C,cAAI,WAAW,QAAQ;AAGvB,eAAK,QAAQ,WAAW;AAExB,cAAI,WAAW,GAAG;AAChB;AAAA,UACF;AAGA,mBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,iBAAK,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI;AAAA,UACnC;AAGA,cAAI,WAAW,GAAG;AAChB,iBAAK,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAK,YAAc,KAAK;AAAA,UACvD;AAGA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,WAAG,UAAU,OAAO,SAAS,KAAM,OAAO;AACxC,iBAAO,KAAK,MAAM,EAAE,MAAM,KAAK;AAAA,QACjC;AAGA,WAAG,UAAU,OAAO,SAAS,KAAM,KAAK,KAAK;AAC3C,UAAAA,QAAO,OAAO,QAAQ,YAAY,OAAO,CAAC;AAE1C,cAAI,MAAO,MAAM,KAAM;AACvB,cAAI,OAAO,MAAM;AAEjB,eAAK,QAAQ,MAAM,CAAC;AAEpB,cAAI,KAAK;AACP,iBAAK,MAAM,GAAG,IAAI,KAAK,MAAM,GAAG,IAAK,KAAK;AAAA,UAC5C,OAAO;AACL,iBAAK,MAAM,GAAG,IAAI,KAAK,MAAM,GAAG,IAAI,EAAE,KAAK;AAAA,UAC7C;AAEA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAGA,WAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,cAAI;AAGJ,cAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,iBAAK,WAAW;AAChB,gBAAI,KAAK,KAAK,GAAG;AACjB,iBAAK,YAAY;AACjB,mBAAO,KAAK,UAAU;AAAA,UAGxB,WAAW,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AACpD,gBAAI,WAAW;AACf,gBAAI,KAAK,KAAK,GAAG;AACjB,gBAAI,WAAW;AACf,mBAAO,EAAE,UAAU;AAAA,UACrB;AAGA,cAAI,GAAG;AACP,cAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,gBAAI;AACJ,gBAAI;AAAA,UACN,OAAO;AACL,gBAAI;AACJ,gBAAI;AAAA,UACN;AAEA,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAK,EAAE,MAAM,CAAC,IAAI,MAAM,EAAE,MAAM,CAAC,IAAI,KAAK;AAC1C,iBAAK,MAAM,CAAC,IAAI,IAAI;AACpB,oBAAQ,MAAM;AAAA,UAChB;AACA,iBAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,iBAAK,EAAE,MAAM,CAAC,IAAI,KAAK;AACvB,iBAAK,MAAM,CAAC,IAAI,IAAI;AACpB,oBAAQ,MAAM;AAAA,UAChB;AAEA,eAAK,SAAS,EAAE;AAChB,cAAI,UAAU,GAAG;AACf,iBAAK,MAAM,KAAK,MAAM,IAAI;AAC1B,iBAAK;AAAA,UAEP,WAAW,MAAM,MAAM;AACrB,mBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,mBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,YAC3B;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAGA,WAAG,UAAU,MAAM,SAASU,KAAK,KAAK;AACpC,cAAI;AACJ,cAAI,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AAC7C,gBAAI,WAAW;AACf,kBAAM,KAAK,IAAI,GAAG;AAClB,gBAAI,YAAY;AAChB,mBAAO;AAAA,UACT,WAAW,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AACpD,iBAAK,WAAW;AAChB,kBAAM,IAAI,IAAI,IAAI;AAClB,iBAAK,WAAW;AAChB,mBAAO;AAAA,UACT;AAEA,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAE1D,iBAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,QAC9B;AAGA,WAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AAEtC,cAAI,IAAI,aAAa,GAAG;AACtB,gBAAI,WAAW;AACf,gBAAI,IAAI,KAAK,KAAK,GAAG;AACrB,gBAAI,WAAW;AACf,mBAAO,EAAE,UAAU;AAAA,UAGrB,WAAW,KAAK,aAAa,GAAG;AAC9B,iBAAK,WAAW;AAChB,iBAAK,KAAK,GAAG;AACb,iBAAK,WAAW;AAChB,mBAAO,KAAK,UAAU;AAAA,UACxB;AAGA,cAAI,MAAM,KAAK,IAAI,GAAG;AAGtB,cAAI,QAAQ,GAAG;AACb,iBAAK,WAAW;AAChB,iBAAK,SAAS;AACd,iBAAK,MAAM,CAAC,IAAI;AAChB,mBAAO;AAAA,UACT;AAGA,cAAI,GAAG;AACP,cAAI,MAAM,GAAG;AACX,gBAAI;AACJ,gBAAI;AAAA,UACN,OAAO;AACL,gBAAI;AACJ,gBAAI;AAAA,UACN;AAEA,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAK,EAAE,MAAM,CAAC,IAAI,MAAM,EAAE,MAAM,CAAC,IAAI,KAAK;AAC1C,oBAAQ,KAAK;AACb,iBAAK,MAAM,CAAC,IAAI,IAAI;AAAA,UACtB;AACA,iBAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,iBAAK,EAAE,MAAM,CAAC,IAAI,KAAK;AACvB,oBAAQ,KAAK;AACb,iBAAK,MAAM,CAAC,IAAI,IAAI;AAAA,UACtB;AAGA,cAAI,UAAU,KAAK,IAAI,EAAE,UAAU,MAAM,MAAM;AAC7C,mBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,mBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,YAC3B;AAAA,UACF;AAEA,eAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,CAAC;AAErC,cAAI,MAAM,MAAM;AACd,iBAAK,WAAW;AAAA,UAClB;AAEA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAGA,WAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,iBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAAA,QAC9B;AAEA,iBAAS,WAAYC,OAAM,KAAK,KAAK;AACnC,cAAI,WAAW,IAAI,WAAWA,MAAK;AACnC,cAAI,MAAOA,MAAK,SAAS,IAAI,SAAU;AACvC,cAAI,SAAS;AACb,gBAAO,MAAM,IAAK;AAGlB,cAAI,IAAIA,MAAK,MAAM,CAAC,IAAI;AACxB,cAAI,IAAI,IAAI,MAAM,CAAC,IAAI;AACvB,cAAI,IAAI,IAAI;AAEZ,cAAI,KAAK,IAAI;AACb,cAAI,QAAS,IAAI,WAAa;AAC9B,cAAI,MAAM,CAAC,IAAI;AAEf,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAG5B,gBAAI,SAAS,UAAU;AACvB,gBAAI,QAAQ,QAAQ;AACpB,gBAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS,CAAC;AACrC,qBAAS,IAAI,KAAK,IAAI,GAAG,IAAIA,MAAK,SAAS,CAAC,GAAG,KAAK,MAAM,KAAK;AAC7D,kBAAI,IAAK,IAAI,IAAK;AAClB,kBAAIA,MAAK,MAAM,CAAC,IAAI;AACpB,kBAAI,IAAI,MAAM,CAAC,IAAI;AACnB,kBAAI,IAAI,IAAI;AACZ,wBAAW,IAAI,WAAa;AAC5B,sBAAQ,IAAI;AAAA,YACd;AACA,gBAAI,MAAM,CAAC,IAAI,QAAQ;AACvB,oBAAQ,SAAS;AAAA,UACnB;AACA,cAAI,UAAU,GAAG;AACf,gBAAI,MAAM,CAAC,IAAI,QAAQ;AAAA,UACzB,OAAO;AACL,gBAAI;AAAA,UACN;AAEA,iBAAO,IAAI,OAAO;AAAA,QACpB;AAKA,YAAI,cAAc,SAASC,aAAaD,OAAM,KAAK,KAAK;AACtD,cAAI,IAAIA,MAAK;AACb,cAAI,IAAI,IAAI;AACZ,cAAI,IAAI,IAAI;AACZ,cAAI,IAAI;AACR,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AAEjB,cAAI,WAAWA,MAAK,WAAW,IAAI;AACnC,cAAI,SAAS;AAEb,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC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AAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,IAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,GAAM,KAAM,IAAM,IAAM,IAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,IAAM,IAAM,KAAM,IAAM,KAAM,EAAI;AACvgD,YAAI,KAAI,CAAC,IAAM,GAAM,KAAM,KAAM,IAAM,IAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,IAAM,KAAM,IAAM,KAAM,IAAM,IAAM,KAAM,KAAM,IAAM,GAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,IAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,GAAM,KAAM,KAAM,IAAM,GAAM,KAAM,IAAM,IAAM,KAAM,KAAM,IAAM,IAAM,GAAM,KAAM,KAAM,KAAM,GAAM,GAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM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",
  "names": ["exports", "module", "e", "t", "r", "i", "exports", "module", "exports", "message", "exports", "module", "message", "PromisedMap", "exports", "exports", "module", "Empty", "exports", "module", "exports", "module", "exports", "module", "require_src", "exports", "module", "exports", "module", "undefined", "doEval", "gen", "stringToPath", "number", "getBaseIntrinsic", "exports", "module", "applyBind", "exports", "module", "require_implementation", "exports", "module", "isObject", "exports", "module", "exports", "module", "hasPropertyDescriptors", "exports", "module", "concat", "defineProperties", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "require_Type", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "isNaN", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "require_implementation", "exports", "module", "exports", "module", "exports", "module", "define", "exports", "module", "define", "exports", "module", "exports", "module", "require_utils", "exports", "message", "require_src", "exports", "module", "WebSocketAsPromised", "message", "data", "exports", "module", "message", "exports", "module", "exports", "len", "i", "output", "len2", "exports", "isLE", "exports", "Buffer", "concat", "utf8ToBytes", "i", "bytes", "byteLength", "writeUInt32BE", "exports", "module", "exports", "module", "assert", "number", "Buffer", "mod", "clone", "toNumber", "bitLength", "toTwos", "fromTwos", "add", "self", "comb10MulTo", "mask", "split", "output", "prime", "exports", "module", "assert", "require_utils", "exports", "utils", "encode", "require_utils", "exports", "utils", "mod", "cachedProperty", "bytes", "exports", "module", "crypto", "exports", "module", "utils", "assert", "bytes", "encode", "exports", "module", "exports", "module", "utils", "assert", "split", "Point", "obj", "add", "exports", "module", "utils", "Point", "bytes", "add", "exports", "module", "utils", "assert", "Point", "add", "exports", "require_utils", "exports", "assert", "exports", "utils", "assert", "digest", "bytes", "require_common", "exports", "utils", "exports", "module", "utils", "digest", "require__", "exports", "module", "utils", "assert", "SHA256", "digest", "require__", "exports", "module", "utils", "SHA256", "digest", "require__", "exports", "module", "utils", "assert", "SHA512", "digest", "require__", "exports", "module", "utils", "SHA512", "SHA384", "digest", "exports", "exports", "utils", "K", "digest", "exports", "module", "utils", "assert", "hash", "digest", "exports", "hash", "exports", "module", "exports", "hash", "utils", "assert", "curve", "exports", "module", "hash", "utils", "assert", "hmac", "add", "exports", "module", "utils", "assert", "sign", "verify", "exports", "module", "utils", "assert", "Signature", "exports", "module", "utils", "assert", "Signature", "bytes", "sign", "verify", "e", "require_key", "exports", "module", "utils", "assert", "hash", "sign", "message", "verify", "require_signature", "exports", "module", "utils", "assert", "Signature", "toBytes", "exports", "module", "hash", "utils", "assert", "Signature", "sign", "message", "verify", "bytes", "exports", "require_bn", "exports", "module", "assert", "number", "Buffer", "mod", "clone", "toNumber", "allocate", "bitLength", "toTwos", "fromTwos", "add", "self", "comb10MulTo", "mask", "split", "output", "prime", "exports", "exports", "LogLevel", "ErrorCode", "Logger", "version", "message", "error", "exports", "require_lib", "exports", "isBytesLike", "isHexString", "concat", "zeroPad", "HexCharacters", "hexlify", "bytes", "exports", "exports", "BigNumber", "exports", "message", "FixedFormat", "check", "FixedNumber", "exports", "exports", "require_lib", "exports", "Description", "exports", "exports", "i", "parent", "node", "ParamType", "Fragment", "EventFragment", "ConstructorFragment", "FunctionFragment", "output", "ErrorFragment", "exports", "Coder", "message", "Writer", "bytes", "Reader", "exports", "module", "WINDOW", "root", "WEB_WORKER", "NODE_JS", "COMMON_JS", "AMD", "ARRAY_BUFFER", "HEX_CHARS", "SHIFT", "OUTPUT_TYPES", "createOutputMethod", "bits", "message", "Keccak", "method", "createMethod", "i", "algorithm", "blocks", "bytes", "j", "require_lib", "exports", "keccak256", "exports", "require_lib", "exports", "encode", "decode", "bytes", "exports", "require_lib", "exports", "getChecksumAddress", "i", "ibanLookup", "safeDigits", "ibanChecksum", "getAddress", "getIcapAddress", "exports", "AddressCoder", "exports", "AnonymousCoder", "exports", "i", "ArrayCoder", "exports", "BooleanCoder", "exports", "DynamicBytesCoder", "BytesCoder", "exports", "FixedBytesCoder", "exports", "NullCoder", "exports", "exports", "exports", "exports", "require_lib", "exports", "exports", "NumberCoder", "exports", "exports", "UnicodeNormalizationForm", "Utf8ErrorReason", "errorFunc", "bytes", "output", "ignoreFunc", "replaceFunc", "toUtf8Bytes", "toUtf8String", "toUtf8CodePoints", "exports", "bytes", "exports", "value", "require_lib", "exports", "exports", "StringCoder", "exports", "TupleCoder", "types", "exports", "AbiCoder", "types", "id", "exports", "exports", "exports", "decode", "encode", "require_lib", "exports", "depth", "bytes", "exports", "check", "exports", "exports", "output", "bytes", "ensNormalize", "exports", "isValidName", "namehash", "dnsEncode", "exports", "hashMessage", "message", "bytes", "name", "TypedDataEncoder", "types", "name_1", "encoder", "type", "value", "exports", "require_lib", "exports", "exports", "LogDescription", "TransactionDescription", "ErrorDescription", "Indexed", "wrap", "Interface", "bytes", "message", "error", "value", "i", "require_lib", "exports", "exports", "require_lib", "exports", "ForkEvent", "BlockForkEvent", "TransactionForkEvent", "hash", "TransactionOrderForkEvent", "Provider", "exports", "require_lib", "exports", "Signer", "_a", "VoidSigner", "message", "types", "exports", "exports", "require_lib", "exports", "SigningKey", "digest", "recoverPublicKey", "bytes", "exports", "require_lib", "exports", "TransactionTypes", "computeAddress", "recoverAddress", "digest", "accessListify", "serialize", "parse", "exports", "require_lib", "exports", "paramType", "check", "bytes", "RunningEvent", "ErrorRunningEvent", "FragmentRunningEvent", "WildcardRunningEvent", "BaseContract", "Contract", "ContractFactory", "key", "BaseX", "bytes", "exports", "SupportedAlgorithm", "exports", "exports", "exports", "ripemd160", "sha256", "sha512", "computeHmac", "algorithm", "exports", "exports", "pbkdf2", "exports", "exports", "exports", "Wordlist", "anyGlobal", "exports", "LangCz", "exports", "LangEn", "exports", "output", "LangEs", "exports", "output", "LangFr", "exports", "word", "i", "LangJa", "exports", "data", "LangKo", "exports", "LangIt", "exports", "bytes", "LangZh", "exports", "require_lib", "exports", "exports", "require_lib", "exports", "HDNode", "bytes", "exports", "exports", "getGlobal", "anyGlobal", "crypto", "randomBytes", "exports", "require_lib", "exports", "exports", "module", "root", "toBytes", "bytes", "exports", "require_utils", "exports", "randomBytes", "bytes", "exports", "CrowdsaleAccount", "decrypt", "exports", "exports", "module", "root", "SHA256", "K", "blocks", "p", "i", "exports", "KeystoreAccount", "check", "pbkdf2", "decrypt", "encrypt", "require_lib", "exports", "exports", "require_lib", "exports", "Wallet", "message", "types", "verifyMessage", "verifyTypedData", "exports", "require_lib", "exports", "network", "exports", "exports", "require_lib", "exports", "key", "response", "result", "check", "exports", "module", "encode", "x", "split", "decode", "bytes", "exports", "exports", "Formatter", "hash", "number", "exports", "topic", "Event", "Resolver", "bytes", "hash", "BaseProvider", "_a", "receipt", "_this", "tx", "method", "exports", "method", "message", "JsonRpcSigner", "hash", "_a", "types", "UncheckedJsonRpcSigner", "JsonRpcProvider", "network", "result", "self", "key", "exports", "exports", "WebSocketProvider", "id", "method", "param", "event", "hash", "subId", "exports", "StaticJsonRpcProvider", "UrlJsonRpcProvider", "exports", "AlchemyWebSocketProvider", "AlchemyProvider", "AnkrProvider", "exports", "exports", "CloudflareProvider", "method", "exports", "method", "message", "EtherscanProvider", "module", "url", "blocks", "exports", "now", "check", "method", "FallbackProvider", "result", "results", "exports", "exports", "InfuraWebSocketProvider", "InfuraProvider", "JsonRpcBatchProvider", "method", "request", "inflightRequest", "exports", "exports", "NodesmithProvider", "exports", "PocketProvider", "exports", "method", "Web3Provider", "require_lib", "exports", "exports", "require_lib", "exports", "value", "types", "keccak256", "sha256", "exports", "require_lib", "exports", "require_utils", "exports", "exports", "exports", "utils", "require_lib", "exports", "ethers", "anyGlobal", "require_utils", "exports", "module", "Buffer", "ethers", "hex2arr", "digest", "recoverPublicKey", "exports", "module", "exports", "module", "exports", "module", "is224", "message", "method", "blocks", "bytes", "exports", "module", "exports", "module", "Buffer", "ethers", "sha256", "digest", "require_common", "exports", "module", "execHaloCmdWeb", "command", "exports", "module", "exports", "module", "split", "decode", "exports", "module", "exports", "module", "exports", "encode", "decode", "hash", "parse", "exports", "module", "Buffer", "exports", "module", "Buffer", "command", "exports", "module", "version", "exports", "module", "require_utils", "exports", "version", "exports", "exports", "module", "exports", "module", "exports", "version", "exports", "version", "exports", "mask", "module", "exports", "version", "exports", "exports", "mod", "exports", "module", "encode", "exports", "version", "exports", "exports", "version", "require_version", "exports", "version", "exports", "mask", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "version", "exports", "version", "mod", "mask", "require_utils", "exports", "exports", "exports", "exports", "algorithm", "concat", "bytes", "message", "algorithm", "hash", "types", "concat", "algorithm", "concat", "p2s", "getCryptoKey", "deriveKey", "p2s", "decrypt", "encrypt", "decrypt", "bitLength", "bytes", "byteLength", "getNamedCurve", "algorithm", "algorithm", "concat", "encrypt", "wrap", "unwrap", "bitLength", "decrypt", "unwrap", "protectedHeader", "concat", "init_decrypt", "init_decrypt", "init_decrypt", "bitLength", "encrypt", "p2s", "wrap", "init_encrypt", "concat", "init_encrypt", "jwe", "algorithm", "hash", "getCryptoKey", "getCryptoKey", "algorithm", "concat", "init_verify", "init_verify", "init_verify", "init_verify", "init_decrypt", "init_encrypt", "getCryptoKey", "init_sign", "concat", "init_sign", "init_sign", "init_sign", "init_encrypt", "jwk", "id", "base64url_exports", "decode", "encode", "init_base64url", "decode", "init_base64url", "decode", "init_base64url", "algorithm", "crv", "generateKeyPair", "generateSecret", "base64url_exports", "generateKeyPair", "generateSecret", "init_decrypt", "init_encrypt", "init_verify", "init_sign", "init_base64url", "exports", "module", "Buffer", "crypto", "exports", "module", "WebSocketAsPromised", "crypto", "url", "exports", "module", "WebSocketAsPromised", "haloFindBridge", "exports", "module", "execHaloCmdWeb", "recoverPublicKey", "haloFindBridge", "types", "types", "message", "check", "check", "method", "bytes", "bytes", "bytes", "output", "hash", "assert", "crypto", "message", "hash", "message", "isLE", "_32n", "crypto", "algorithm", "bytes", "locked", "sha256", "sha512", "_0n", "_1n", "_2n", "_0n", "message", "_1n", "_2n", "d", "window", "mask", "bytes", "hexes", "number", "hash", "hashLen", "crypto", "hash", "_1n", "crypto", "randomBytes", "createHash", "message", "createHmac", "BN_0", "BN_1", "Signature", "clone", "check", "message", "bytes", "r", "s", "v", "digest", "Signature", "bytes", "BN_0", "BN_0", "message", "primaryPublicKeyRaw", "primaryPublicKeyHash", "sha256", "secondaryPublicKeyRaw", "secondaryPublicKeyHash", "message", "check", "WebSocketAsPromised", "digest", "sha256"]
}
